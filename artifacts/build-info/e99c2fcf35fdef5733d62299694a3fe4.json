{"id":"e99c2fcf35fdef5733d62299694a3fe4","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"@api3/airnode-protocol-v1/contracts/dapis/DapiReader.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./interfaces/IDapiReader.sol\";\n\n/// @title Contract to be inherited by contracts that will read from a\n/// DapiServer contract\ncontract DapiReader is IDapiReader {\n    /// @notice DapiServer contract address\n    address public override dapiServer;\n\n    /// @param _dapiServer DapiServer contract address\n    constructor(address _dapiServer) {\n        setDapiServer(_dapiServer);\n    }\n\n    /// @notice Called internally to update the DapiServer contract address\n    /// @dev Inheriting contracts are highly recommended to expose this\n    /// functionality to be able to migrate between DapiServer contracts.\n    /// Otherwise, when the DapiServer goes out of service for any reason,\n    /// the dependent contract will go defunct.\n    /// Since this is a critical action, it needs to be protected behind\n    /// mechanisms such as decentralized governance, timelocks, etc.\n    /// @param _dapiServer DapiServer contract address\n    function setDapiServer(address _dapiServer) internal {\n        require(_dapiServer != address(0), \"dAPI server address zero\");\n        dapiServer = _dapiServer;\n    }\n}\n"},"@api3/airnode-protocol-v1/contracts/dapis/interfaces/IDapiReader.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./IDapiServer.sol\";\n\ninterface IDapiReader {\n    function dapiServer() external view returns (address);\n}\n"},"@api3/airnode-protocol-v1/contracts/dapis/interfaces/IDapiServer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../../protocol/interfaces/IAirnodeRequester.sol\";\n\ninterface IDapiServer is IAirnodeRequester {\n    event SetRrpBeaconUpdatePermissionStatus(\n        address indexed sponsor,\n        address indexed rrpBeaconUpdateRequester,\n        bool status\n    );\n\n    event RequestedRrpBeaconUpdate(\n        bytes32 indexed beaconId,\n        address indexed sponsor,\n        address indexed requester,\n        bytes32 requestId,\n        address airnode,\n        bytes32 templateId\n    );\n\n    event RequestedRrpBeaconUpdateRelayed(\n        bytes32 indexed beaconId,\n        address indexed sponsor,\n        address indexed requester,\n        bytes32 requestId,\n        address airnode,\n        address relayer,\n        bytes32 templateId\n    );\n\n    event UpdatedBeaconWithRrp(\n        bytes32 indexed beaconId,\n        bytes32 requestId,\n        int256 value,\n        uint256 timestamp\n    );\n\n    event RegisteredBeaconUpdateSubscription(\n        bytes32 indexed subscriptionId,\n        address airnode,\n        bytes32 templateId,\n        bytes parameters,\n        bytes conditions,\n        address relayer,\n        address sponsor,\n        address requester,\n        bytes4 fulfillFunctionId\n    );\n\n    event UpdatedBeaconWithPsp(\n        bytes32 indexed beaconId,\n        bytes32 subscriptionId,\n        int224 value,\n        uint32 timestamp\n    );\n\n    event UpdatedBeaconWithSignedData(\n        bytes32 indexed beaconId,\n        int256 value,\n        uint256 timestamp\n    );\n\n    event UpdatedBeaconSetWithBeacons(\n        bytes32 indexed beaconSetId,\n        int224 value,\n        uint32 timestamp\n    );\n\n    event UpdatedBeaconSetWithSignedData(\n        bytes32 indexed dapiId,\n        int224 value,\n        uint32 timestamp\n    );\n\n    event AddedUnlimitedReader(address indexed unlimitedReader);\n\n    event SetDapiName(\n        bytes32 indexed dapiName,\n        bytes32 dataFeedId,\n        address indexed sender\n    );\n\n    function setRrpBeaconUpdatePermissionStatus(\n        address rrpBeaconUpdateRequester,\n        bool status\n    ) external;\n\n    function requestRrpBeaconUpdate(\n        address airnode,\n        bytes32 templateId,\n        address sponsor\n    ) external returns (bytes32 requestId);\n\n    function requestRrpBeaconUpdateRelayed(\n        address airnode,\n        bytes32 templateId,\n        address relayer,\n        address sponsor\n    ) external returns (bytes32 requestId);\n\n    function fulfillRrpBeaconUpdate(\n        bytes32 requestId,\n        uint256 timestamp,\n        bytes calldata data\n    ) external;\n\n    function registerBeaconUpdateSubscription(\n        address airnode,\n        bytes32 templateId,\n        bytes memory conditions,\n        address relayer,\n        address sponsor\n    ) external returns (bytes32 subscriptionId);\n\n    function conditionPspBeaconUpdate(\n        bytes32 subscriptionId,\n        bytes calldata data,\n        bytes calldata conditionParameters\n    ) external view returns (bool);\n\n    function fulfillPspBeaconUpdate(\n        bytes32 subscriptionId,\n        address airnode,\n        address relayer,\n        address sponsor,\n        uint256 timestamp,\n        bytes calldata data,\n        bytes calldata signature\n    ) external;\n\n    function updateBeaconWithSignedData(\n        address airnode,\n        bytes32 beaconId,\n        uint256 timestamp,\n        bytes calldata data,\n        bytes calldata signature\n    ) external;\n\n    function updateBeaconSetWithBeacons(bytes32[] memory beaconIds)\n        external\n        returns (bytes32 beaconSetId);\n\n    function updateBeaconSetWithBeaconsAndReturnCondition(\n        bytes32[] memory beaconIds,\n        uint256 updateThresholdInPercentage\n    ) external returns (bool);\n\n    function conditionPspBeaconSetUpdate(\n        bytes32 subscriptionId,\n        bytes calldata data,\n        bytes calldata conditionParameters\n    ) external returns (bool);\n\n    function fulfillPspBeaconSetUpdate(\n        bytes32 subscriptionId,\n        address airnode,\n        address relayer,\n        address sponsor,\n        uint256 timestamp,\n        bytes calldata data,\n        bytes calldata signature\n    ) external;\n\n    function updateBeaconSetWithSignedData(\n        address[] memory airnodes,\n        bytes32[] memory templateIds,\n        uint256[] memory timestamps,\n        bytes[] memory data,\n        bytes[] memory signatures\n    ) external returns (bytes32 beaconSetId);\n\n    function addUnlimitedReader(address unlimitedReader) external;\n\n    function setDapiName(bytes32 dapiName, bytes32 dataFeedId) external;\n\n    function dapiNameToDataFeedId(bytes32 dapiName)\n        external\n        view\n        returns (bytes32);\n\n    function readDataFeedWithId(bytes32 dataFeedId)\n        external\n        view\n        returns (int224 value, uint32 timestamp);\n\n    function readDataFeedValueWithId(bytes32 dataFeedId)\n        external\n        view\n        returns (int224 value);\n\n    function readDataFeedWithDapiName(bytes32 dapiName)\n        external\n        view\n        returns (int224 value, uint32 timestamp);\n\n    function readDataFeedValueWithDapiName(bytes32 dapiName)\n        external\n        view\n        returns (int224 value);\n\n    function readerCanReadDataFeed(bytes32 dataFeedId, address reader)\n        external\n        view\n        returns (bool);\n\n    function dataFeedIdToReaderToWhitelistStatus(\n        bytes32 dataFeedId,\n        address reader\n    )\n        external\n        view\n        returns (uint64 expirationTimestamp, uint192 indefiniteWhitelistCount);\n\n    function dataFeedIdToReaderToSetterToIndefiniteWhitelistStatus(\n        bytes32 dataFeedId,\n        address reader,\n        address setter\n    ) external view returns (bool indefiniteWhitelistStatus);\n\n    function deriveBeaconId(address airnode, bytes32 templateId)\n        external\n        pure\n        returns (bytes32 beaconId);\n\n    function deriveBeaconSetId(bytes32[] memory beaconIds)\n        external\n        pure\n        returns (bytes32 beaconSetId);\n\n    // solhint-disable-next-line func-name-mixedcase\n    function DAPI_NAME_SETTER_ROLE_DESCRIPTION()\n        external\n        view\n        returns (string memory);\n\n    // solhint-disable-next-line func-name-mixedcase\n    function HUNDRED_PERCENT() external view returns (uint256);\n\n    function dapiNameSetterRole() external view returns (bytes32);\n\n    function sponsorToRrpBeaconUpdateRequesterToPermissionStatus(\n        address sponsor,\n        address updateRequester\n    ) external view returns (bool);\n\n    function subscriptionIdToBeaconId(bytes32 subscriptionId)\n        external\n        view\n        returns (bytes32);\n}\n"},"@api3/airnode-protocol-v1/contracts/protocol/interfaces/IAirnodeRequester.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IAirnodeRequester {\n    function airnodeProtocol() external view returns (address);\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeCast.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits.\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128) {\n        require(value >= type(int128).min && value <= type(int128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return int128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64) {\n        require(value >= type(int64).min && value <= type(int64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return int64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32) {\n        require(value >= type(int32).min && value <= type(int32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return int32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16) {\n        require(value >= type(int16).min && value <= type(int16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return int16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits.\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8) {\n        require(value >= type(int8).min && value <= type(int8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return int8(value);\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedSafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SignedSafeMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SignedSafeMath` is no longer needed starting with Solidity 0.8. The compiler\n * now has built in overflow checking.\n */\nlibrary SignedSafeMath {\n    /**\n     * @dev Returns the multiplication of two signed integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(int256 a, int256 b) internal pure returns (int256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two signed integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(int256 a, int256 b) internal pure returns (int256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two signed integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(int256 a, int256 b) internal pure returns (int256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the addition of two signed integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(int256 a, int256 b) internal pure returns (int256) {\n        return a + b;\n    }\n}\n"},"contracts/DappToken.sol":{"content":"pragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract DappToken is ERC20 {\r\n    constructor() public ERC20(\"DApp Token\", \"DAPP\") {\r\n        _mint(msg.sender, 1000000000000000000000000);\r\n    }\r\n}"},"contracts/Staking.sol":{"content":"\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@api3/airnode-protocol-v1/contracts/dapis/DapiReader.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\";\r\n\r\ncontract TokenFarm is DapiReader, Ownable {\r\n    string public name = \"Dapp Token Farm\";\r\n    IERC20 public dappToken;\r\n\r\n    address[] public stakers;\r\n    // token > address\r\n    mapping(address => mapping(address => uint256)) public stakingBalance;\r\n    mapping(address => uint256) public uniqueTokensStaked;\r\n    mapping(address => bytes32) public tokenDapiMapping;\r\n    address[] allowedTokens;\r\n\r\n    \r\n    constructor(address _dapiServer, address _dappTokenAddress) DapiReader(_dapiServer) {\r\n        dappToken = IERC20(_dappTokenAddress);\r\n    }\r\n\r\n    function addAllowedTokens(address token) public onlyOwner {\r\n        allowedTokens.push(token);\r\n    }\r\n\r\n    function setDapiName(address token, bytes32 DapiName)\r\n        public\r\n        onlyOwner\r\n    {\r\n        tokenDapiMapping[token] = DapiName;\r\n    }\r\n\r\n    function stakeTokens(uint256 _amount, address token) public {\r\n        // Require amount greater than 0\r\n        require(_amount > 0, \"amount cannot be 0\");\r\n        if (tokenIsAllowed(token)) {\r\n            updateUniqueTokensStaked(msg.sender, token);\r\n            IERC20(token).transferFrom(msg.sender, address(this), _amount);\r\n            stakingBalance[token][msg.sender] =\r\n                stakingBalance[token][msg.sender] +\r\n                _amount;\r\n            if (uniqueTokensStaked[msg.sender] == 1) {\r\n                stakers.push(msg.sender);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Unstaking Tokens (Withdraw)\r\n    function unstakeTokens(address token) public {\r\n        // Fetch staking balance\r\n        uint256 balance = stakingBalance[token][msg.sender];\r\n        require(balance > 0, \"staking balance cannot be 0\");\r\n        IERC20(token).transfer(msg.sender, balance);\r\n        stakingBalance[token][msg.sender] = 0;\r\n        uniqueTokensStaked[msg.sender] = uniqueTokensStaked[msg.sender] - 1;\r\n    }\r\n\r\n    function getUserTotalValue(address user) public view returns (uint256) {\r\n        uint256 totalValue = 0;\r\n        if (uniqueTokensStaked[user] > 0) {\r\n            for (\r\n                uint256 allowedTokensIndex = 0;\r\n                allowedTokensIndex < allowedTokens.length;\r\n                allowedTokensIndex++\r\n            ) {\r\n                totalValue =\r\n                    totalValue +\r\n                    getUserStakingBalanceEthValue(\r\n                        user,\r\n                        allowedTokens[allowedTokensIndex]\r\n                    );\r\n            }\r\n        }\r\n        return totalValue;\r\n    }\r\n\r\n    function tokenIsAllowed(address token) public returns (bool) {\r\n        for (\r\n            uint256 allowedTokensIndex = 0;\r\n            allowedTokensIndex < allowedTokens.length;\r\n            allowedTokensIndex++\r\n        ) {\r\n            if (allowedTokens[allowedTokensIndex] == token) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function updateUniqueTokensStaked(address user, address token) internal {\r\n        if (stakingBalance[token][user] <= 0) {\r\n            uniqueTokensStaked[user] = uniqueTokensStaked[user] + 1;\r\n        }\r\n    }\r\n\r\n    function int224ToUint256(address token)\r\n    public\r\n    view \r\n    returns (uint256)\r\n    {\r\n        int224 tokenPrice = (getTokenEthPrice(token));\r\n        uint224 newTokenPrice = uint224(tokenPrice);\r\n        return newTokenPrice;\r\n\r\n    }\r\n\r\n    function getUserStakingBalanceEthValue(address user, address token)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        if (uniqueTokensStaked[user] <= 0) {\r\n            return 0;\r\n        }\r\n        uint256 newTokenPrice = (int224ToUint256(token));\r\n        uint256 stakBal = (stakingBalance[token][user]);\r\n        return\r\n            (stakBal * newTokenPrice) / (10**18);\r\n    }\r\n\r\n    // Issuing Tokens\r\n    function issueTokens() public onlyOwner {\r\n        // Issue tokens to all stakers\r\n        for (\r\n            uint256 stakersIndex = 0;\r\n            stakersIndex < stakers.length;\r\n            stakersIndex++\r\n        ) {\r\n            address recipient = stakers[stakersIndex];\r\n            dappToken.transfer(recipient, getUserTotalValue(recipient));\r\n        }\r\n    }\r\n\r\n    function getTokenEthPrice(address token) public view returns (int224 value) {\r\n        bytes32 DapiName = tokenDapiMapping[token];\r\n        (value) = IDapiServer(dapiServer).readDataFeedValueWithDapiName(\r\n                DapiName\r\n        );\r\n}\r\n}\r\n//18446744073709555618"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/DappToken.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/DappToken.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Staking.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/Staking.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n --> contracts/DappToken.sol:6:5:\n  |\n6 |     constructor() public ERC20(\"DApp Token\", \"DAPP\") {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":233,"file":"contracts/DappToken.sol","start":121},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to view\n  --> contracts/Staking.sol:83:5:\n   |\n83 |     function tokenIsAllowed(address token) public returns (bool) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to view","severity":"warning","sourceLocation":{"end":3260,"file":"contracts/Staking.sol","start":2886},"type":"Warning"}],"sources":{"@api3/airnode-protocol-v1/contracts/dapis/DapiReader.sol":{"ast":{"absolutePath":"@api3/airnode-protocol-v1/contracts/dapis/DapiReader.sol","exportedSymbols":{"DapiReader":[42],"IAirnodeRequester":[471],"IDapiReader":[51],"IDapiServer":[463]},"id":43,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"absolutePath":"@api3/airnode-protocol-v1/contracts/dapis/interfaces/IDapiReader.sol","file":"./interfaces/IDapiReader.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":43,"sourceUnit":52,"src":"57:38:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4,"name":"IDapiReader","nodeType":"IdentifierPath","referencedDeclaration":51,"src":"215:11:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"215:11:0"}],"canonicalName":"DapiReader","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"97:95:0","text":"@title Contract to be inherited by contracts that will read from a\n DapiServer contract"},"fullyImplemented":true,"id":42,"linearizedBaseContracts":[42,51],"name":"DapiReader","nameLocation":"201:10:0","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[50],"constant":false,"documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"233:39:0","text":"@notice DapiServer contract address"},"functionSelector":"9f03866b","id":9,"mutability":"mutable","name":"dapiServer","nameLocation":"301:10:0","nodeType":"VariableDeclaration","overrides":{"id":8,"nodeType":"OverrideSpecifier","overrides":[],"src":"292:8:0"},"scope":42,"src":"277:34:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"277:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":19,"nodeType":"Block","src":"406:43:0","statements":[{"expression":{"arguments":[{"id":16,"name":"_dapiServer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"430:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":15,"name":"setDapiServer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"416:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":17,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"416:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18,"nodeType":"ExpressionStatement","src":"416:26:0"}]},"documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"318:50:0","text":"@param _dapiServer DapiServer contract address"},"id":20,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"mutability":"mutable","name":"_dapiServer","nameLocation":"393:11:0","nodeType":"VariableDeclaration","scope":20,"src":"385:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"385:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"384:21:0"},"returnParameters":{"id":14,"nodeType":"ParameterList","parameters":[],"src":"406:0:0"},"scope":42,"src":"373:76:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":40,"nodeType":"Block","src":"1050:113:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":27,"name":"_dapiServer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"1068:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":30,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1091:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":29,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1083:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"1083:7:0","typeDescriptions":{}}},"id":31,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1083:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1068:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"64415049207365727665722061646472657373207a65726f","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1095:26:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_d85702f97c81e6e3d5e300d9d657ae8f2b8799c189bbf9c6f51791741d49abd5","typeString":"literal_string \"dAPI server address zero\""},"value":"dAPI server address zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d85702f97c81e6e3d5e300d9d657ae8f2b8799c189bbf9c6f51791741d49abd5","typeString":"literal_string \"dAPI server address zero\""}],"id":26,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1060:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1060:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"1060:62:0"},{"expression":{"id":38,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":36,"name":"dapiServer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"1132:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":37,"name":"_dapiServer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"1145:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1132:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":39,"nodeType":"ExpressionStatement","src":"1132:24:0"}]},"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"455:537:0","text":"@notice Called internally to update the DapiServer contract address\n @dev Inheriting contracts are highly recommended to expose this\n functionality to be able to migrate between DapiServer contracts.\n Otherwise, when the DapiServer goes out of service for any reason,\n the dependent contract will go defunct.\n Since this is a critical action, it needs to be protected behind\n mechanisms such as decentralized governance, timelocks, etc.\n @param _dapiServer DapiServer contract address"},"id":41,"implemented":true,"kind":"function","modifiers":[],"name":"setDapiServer","nameLocation":"1006:13:0","nodeType":"FunctionDefinition","parameters":{"id":24,"nodeType":"ParameterList","parameters":[{"constant":false,"id":23,"mutability":"mutable","name":"_dapiServer","nameLocation":"1028:11:0","nodeType":"VariableDeclaration","scope":41,"src":"1020:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":22,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1019:21:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1050:0:0"},"scope":42,"src":"997:166:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":43,"src":"192:973:0","usedErrors":[]}],"src":"32:1134:0"},"id":0},"@api3/airnode-protocol-v1/contracts/dapis/interfaces/IDapiReader.sol":{"ast":{"absolutePath":"@api3/airnode-protocol-v1/contracts/dapis/interfaces/IDapiReader.sol","exportedSymbols":{"IAirnodeRequester":[471],"IDapiReader":[51],"IDapiServer":[463]},"id":52,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":44,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@api3/airnode-protocol-v1/contracts/dapis/interfaces/IDapiServer.sol","file":"./IDapiServer.sol","id":45,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":52,"sourceUnit":464,"src":"57:27:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IDapiReader","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":51,"linearizedBaseContracts":[51],"name":"IDapiReader","nameLocation":"96:11:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"9f03866b","id":50,"implemented":false,"kind":"function","modifiers":[],"name":"dapiServer","nameLocation":"123:10:1","nodeType":"FunctionDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"133:2:1"},"returnParameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":50,"src":"159:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47,"name":"address","nodeType":"ElementaryTypeName","src":"159:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"158:9:1"},"scope":51,"src":"114:54:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":52,"src":"86:84:1","usedErrors":[]}],"src":"32:139:1"},"id":1},"@api3/airnode-protocol-v1/contracts/dapis/interfaces/IDapiServer.sol":{"ast":{"absolutePath":"@api3/airnode-protocol-v1/contracts/dapis/interfaces/IDapiServer.sol","exportedSymbols":{"IAirnodeRequester":[471],"IDapiServer":[463]},"id":464,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":53,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"absolutePath":"@api3/airnode-protocol-v1/contracts/protocol/interfaces/IAirnodeRequester.sol","file":"../../protocol/interfaces/IAirnodeRequester.sol","id":54,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":464,"sourceUnit":472,"src":"57:57:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":55,"name":"IAirnodeRequester","nodeType":"IdentifierPath","referencedDeclaration":471,"src":"141:17:2"},"id":56,"nodeType":"InheritanceSpecifier","src":"141:17:2"}],"canonicalName":"IDapiServer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":463,"linearizedBaseContracts":[463,471],"name":"IDapiServer","nameLocation":"126:11:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":64,"name":"SetRrpBeaconUpdatePermissionStatus","nameLocation":"171:34:2","nodeType":"EventDefinition","parameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"indexed":true,"mutability":"mutable","name":"sponsor","nameLocation":"231:7:2","nodeType":"VariableDeclaration","scope":64,"src":"215:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":57,"name":"address","nodeType":"ElementaryTypeName","src":"215:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60,"indexed":true,"mutability":"mutable","name":"rrpBeaconUpdateRequester","nameLocation":"264:24:2","nodeType":"VariableDeclaration","scope":64,"src":"248:40:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":59,"name":"address","nodeType":"ElementaryTypeName","src":"248:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":62,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"303:6:2","nodeType":"VariableDeclaration","scope":64,"src":"298:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":61,"name":"bool","nodeType":"ElementaryTypeName","src":"298:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"205:110:2"},"src":"165:151:2"},{"anonymous":false,"id":78,"name":"RequestedRrpBeaconUpdate","nameLocation":"328:24:2","nodeType":"EventDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"indexed":true,"mutability":"mutable","name":"beaconId","nameLocation":"378:8:2","nodeType":"VariableDeclaration","scope":78,"src":"362:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":65,"name":"bytes32","nodeType":"ElementaryTypeName","src":"362:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":68,"indexed":true,"mutability":"mutable","name":"sponsor","nameLocation":"412:7:2","nodeType":"VariableDeclaration","scope":78,"src":"396:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"396:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":70,"indexed":true,"mutability":"mutable","name":"requester","nameLocation":"445:9:2","nodeType":"VariableDeclaration","scope":78,"src":"429:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"429:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":72,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"472:9:2","nodeType":"VariableDeclaration","scope":78,"src":"464:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":71,"name":"bytes32","nodeType":"ElementaryTypeName","src":"464:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":74,"indexed":false,"mutability":"mutable","name":"airnode","nameLocation":"499:7:2","nodeType":"VariableDeclaration","scope":78,"src":"491:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"491:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":76,"indexed":false,"mutability":"mutable","name":"templateId","nameLocation":"524:10:2","nodeType":"VariableDeclaration","scope":78,"src":"516:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":75,"name":"bytes32","nodeType":"ElementaryTypeName","src":"516:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"352:188:2"},"src":"322:219:2"},{"anonymous":false,"id":94,"name":"RequestedRrpBeaconUpdateRelayed","nameLocation":"553:31:2","nodeType":"EventDefinition","parameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":80,"indexed":true,"mutability":"mutable","name":"beaconId","nameLocation":"610:8:2","nodeType":"VariableDeclaration","scope":94,"src":"594:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":79,"name":"bytes32","nodeType":"ElementaryTypeName","src":"594:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":82,"indexed":true,"mutability":"mutable","name":"sponsor","nameLocation":"644:7:2","nodeType":"VariableDeclaration","scope":94,"src":"628:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":81,"name":"address","nodeType":"ElementaryTypeName","src":"628:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":84,"indexed":true,"mutability":"mutable","name":"requester","nameLocation":"677:9:2","nodeType":"VariableDeclaration","scope":94,"src":"661:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":83,"name":"address","nodeType":"ElementaryTypeName","src":"661:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":86,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"704:9:2","nodeType":"VariableDeclaration","scope":94,"src":"696:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":85,"name":"bytes32","nodeType":"ElementaryTypeName","src":"696:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":88,"indexed":false,"mutability":"mutable","name":"airnode","nameLocation":"731:7:2","nodeType":"VariableDeclaration","scope":94,"src":"723:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":87,"name":"address","nodeType":"ElementaryTypeName","src":"723:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":90,"indexed":false,"mutability":"mutable","name":"relayer","nameLocation":"756:7:2","nodeType":"VariableDeclaration","scope":94,"src":"748:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":92,"indexed":false,"mutability":"mutable","name":"templateId","nameLocation":"781:10:2","nodeType":"VariableDeclaration","scope":94,"src":"773:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":91,"name":"bytes32","nodeType":"ElementaryTypeName","src":"773:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"584:213:2"},"src":"547:251:2"},{"anonymous":false,"id":104,"name":"UpdatedBeaconWithRrp","nameLocation":"810:20:2","nodeType":"EventDefinition","parameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"indexed":true,"mutability":"mutable","name":"beaconId","nameLocation":"856:8:2","nodeType":"VariableDeclaration","scope":104,"src":"840:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"882:9:2","nodeType":"VariableDeclaration","scope":104,"src":"874:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":97,"name":"bytes32","nodeType":"ElementaryTypeName","src":"874:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":100,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"908:5:2","nodeType":"VariableDeclaration","scope":104,"src":"901:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":99,"name":"int256","nodeType":"ElementaryTypeName","src":"901:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":102,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"931:9:2","nodeType":"VariableDeclaration","scope":104,"src":"923:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"830:116:2"},"src":"804:143:2"},{"anonymous":false,"id":124,"name":"RegisteredBeaconUpdateSubscription","nameLocation":"959:34:2","nodeType":"EventDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":106,"indexed":true,"mutability":"mutable","name":"subscriptionId","nameLocation":"1019:14:2","nodeType":"VariableDeclaration","scope":124,"src":"1003:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1003:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":108,"indexed":false,"mutability":"mutable","name":"airnode","nameLocation":"1051:7:2","nodeType":"VariableDeclaration","scope":124,"src":"1043:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":110,"indexed":false,"mutability":"mutable","name":"templateId","nameLocation":"1076:10:2","nodeType":"VariableDeclaration","scope":124,"src":"1068:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1068:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":112,"indexed":false,"mutability":"mutable","name":"parameters","nameLocation":"1102:10:2","nodeType":"VariableDeclaration","scope":124,"src":"1096:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":111,"name":"bytes","nodeType":"ElementaryTypeName","src":"1096:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":114,"indexed":false,"mutability":"mutable","name":"conditions","nameLocation":"1128:10:2","nodeType":"VariableDeclaration","scope":124,"src":"1122:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":113,"name":"bytes","nodeType":"ElementaryTypeName","src":"1122:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":116,"indexed":false,"mutability":"mutable","name":"relayer","nameLocation":"1156:7:2","nodeType":"VariableDeclaration","scope":124,"src":"1148:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":115,"name":"address","nodeType":"ElementaryTypeName","src":"1148:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":118,"indexed":false,"mutability":"mutable","name":"sponsor","nameLocation":"1181:7:2","nodeType":"VariableDeclaration","scope":124,"src":"1173:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"1173:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"indexed":false,"mutability":"mutable","name":"requester","nameLocation":"1206:9:2","nodeType":"VariableDeclaration","scope":124,"src":"1198:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"1198:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":false,"mutability":"mutable","name":"fulfillFunctionId","nameLocation":"1232:17:2","nodeType":"VariableDeclaration","scope":124,"src":"1225:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":121,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1225:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"993:262:2"},"src":"953:303:2"},{"anonymous":false,"id":134,"name":"UpdatedBeaconWithPsp","nameLocation":"1268:20:2","nodeType":"EventDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"indexed":true,"mutability":"mutable","name":"beaconId","nameLocation":"1314:8:2","nodeType":"VariableDeclaration","scope":134,"src":"1298:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":128,"indexed":false,"mutability":"mutable","name":"subscriptionId","nameLocation":"1340:14:2","nodeType":"VariableDeclaration","scope":134,"src":"1332:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1332:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":130,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1371:5:2","nodeType":"VariableDeclaration","scope":134,"src":"1364:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":129,"name":"int224","nodeType":"ElementaryTypeName","src":"1364:6:2","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"},{"constant":false,"id":132,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1393:9:2","nodeType":"VariableDeclaration","scope":134,"src":"1386:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":131,"name":"uint32","nodeType":"ElementaryTypeName","src":"1386:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1288:120:2"},"src":"1262:147:2"},{"anonymous":false,"id":142,"name":"UpdatedBeaconWithSignedData","nameLocation":"1421:27:2","nodeType":"EventDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"indexed":true,"mutability":"mutable","name":"beaconId","nameLocation":"1474:8:2","nodeType":"VariableDeclaration","scope":142,"src":"1458:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1458:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":138,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1499:5:2","nodeType":"VariableDeclaration","scope":142,"src":"1492:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":137,"name":"int256","nodeType":"ElementaryTypeName","src":"1492:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":140,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1522:9:2","nodeType":"VariableDeclaration","scope":142,"src":"1514:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":139,"name":"uint256","nodeType":"ElementaryTypeName","src":"1514:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1448:89:2"},"src":"1415:123:2"},{"anonymous":false,"id":150,"name":"UpdatedBeaconSetWithBeacons","nameLocation":"1550:27:2","nodeType":"EventDefinition","parameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"indexed":true,"mutability":"mutable","name":"beaconSetId","nameLocation":"1603:11:2","nodeType":"VariableDeclaration","scope":150,"src":"1587:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1587:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":146,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1631:5:2","nodeType":"VariableDeclaration","scope":150,"src":"1624:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":145,"name":"int224","nodeType":"ElementaryTypeName","src":"1624:6:2","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"},{"constant":false,"id":148,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1653:9:2","nodeType":"VariableDeclaration","scope":150,"src":"1646:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":147,"name":"uint32","nodeType":"ElementaryTypeName","src":"1646:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1577:91:2"},"src":"1544:125:2"},{"anonymous":false,"id":158,"name":"UpdatedBeaconSetWithSignedData","nameLocation":"1681:30:2","nodeType":"EventDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":152,"indexed":true,"mutability":"mutable","name":"dapiId","nameLocation":"1737:6:2","nodeType":"VariableDeclaration","scope":158,"src":"1721:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1721:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":154,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1760:5:2","nodeType":"VariableDeclaration","scope":158,"src":"1753:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":153,"name":"int224","nodeType":"ElementaryTypeName","src":"1753:6:2","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"},{"constant":false,"id":156,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1782:9:2","nodeType":"VariableDeclaration","scope":158,"src":"1775:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":155,"name":"uint32","nodeType":"ElementaryTypeName","src":"1775:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1711:86:2"},"src":"1675:123:2"},{"anonymous":false,"id":162,"name":"AddedUnlimitedReader","nameLocation":"1810:20:2","nodeType":"EventDefinition","parameters":{"id":161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"indexed":true,"mutability":"mutable","name":"unlimitedReader","nameLocation":"1847:15:2","nodeType":"VariableDeclaration","scope":162,"src":"1831:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"1831:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1830:33:2"},"src":"1804:60:2"},{"anonymous":false,"id":170,"name":"SetDapiName","nameLocation":"1876:11:2","nodeType":"EventDefinition","parameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"indexed":true,"mutability":"mutable","name":"dapiName","nameLocation":"1913:8:2","nodeType":"VariableDeclaration","scope":170,"src":"1897:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1897:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":166,"indexed":false,"mutability":"mutable","name":"dataFeedId","nameLocation":"1939:10:2","nodeType":"VariableDeclaration","scope":170,"src":"1931:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1931:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":168,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1975:6:2","nodeType":"VariableDeclaration","scope":170,"src":"1959:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":167,"name":"address","nodeType":"ElementaryTypeName","src":"1959:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1887:100:2"},"src":"1870:118:2"},{"functionSelector":"9e14caa8","id":177,"implemented":false,"kind":"function","modifiers":[],"name":"setRrpBeaconUpdatePermissionStatus","nameLocation":"2003:34:2","nodeType":"FunctionDefinition","parameters":{"id":175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"rrpBeaconUpdateRequester","nameLocation":"2055:24:2","nodeType":"VariableDeclaration","scope":177,"src":"2047:32:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"2047:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"status","nameLocation":"2094:6:2","nodeType":"VariableDeclaration","scope":177,"src":"2089:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":173,"name":"bool","nodeType":"ElementaryTypeName","src":"2089:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2037:69:2"},"returnParameters":{"id":176,"nodeType":"ParameterList","parameters":[],"src":"2115:0:2"},"scope":463,"src":"1994:122:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"94212405","id":188,"implemented":false,"kind":"function","modifiers":[],"name":"requestRrpBeaconUpdate","nameLocation":"2131:22:2","nodeType":"FunctionDefinition","parameters":{"id":184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":179,"mutability":"mutable","name":"airnode","nameLocation":"2171:7:2","nodeType":"VariableDeclaration","scope":188,"src":"2163:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":178,"name":"address","nodeType":"ElementaryTypeName","src":"2163:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":181,"mutability":"mutable","name":"templateId","nameLocation":"2196:10:2","nodeType":"VariableDeclaration","scope":188,"src":"2188:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2188:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":183,"mutability":"mutable","name":"sponsor","nameLocation":"2224:7:2","nodeType":"VariableDeclaration","scope":188,"src":"2216:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"2216:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2153:84:2"},"returnParameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"requestId","nameLocation":"2264:9:2","nodeType":"VariableDeclaration","scope":188,"src":"2256:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2256:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2255:19:2"},"scope":463,"src":"2122:153:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e705882e","id":201,"implemented":false,"kind":"function","modifiers":[],"name":"requestRrpBeaconUpdateRelayed","nameLocation":"2290:29:2","nodeType":"FunctionDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"airnode","nameLocation":"2337:7:2","nodeType":"VariableDeclaration","scope":201,"src":"2329:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"2329:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":192,"mutability":"mutable","name":"templateId","nameLocation":"2362:10:2","nodeType":"VariableDeclaration","scope":201,"src":"2354:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2354:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"relayer","nameLocation":"2390:7:2","nodeType":"VariableDeclaration","scope":201,"src":"2382:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"2382:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":196,"mutability":"mutable","name":"sponsor","nameLocation":"2415:7:2","nodeType":"VariableDeclaration","scope":201,"src":"2407:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":195,"name":"address","nodeType":"ElementaryTypeName","src":"2407:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2319:109:2"},"returnParameters":{"id":200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"mutability":"mutable","name":"requestId","nameLocation":"2455:9:2","nodeType":"VariableDeclaration","scope":201,"src":"2447:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2447:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2446:19:2"},"scope":463,"src":"2281:185:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5bc8a5c8","id":210,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRrpBeaconUpdate","nameLocation":"2481:22:2","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"requestId","nameLocation":"2521:9:2","nodeType":"VariableDeclaration","scope":210,"src":"2513:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2513:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"timestamp","nameLocation":"2548:9:2","nodeType":"VariableDeclaration","scope":210,"src":"2540:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"2540:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"data","nameLocation":"2582:4:2","nodeType":"VariableDeclaration","scope":210,"src":"2567:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":206,"name":"bytes","nodeType":"ElementaryTypeName","src":"2567:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2503:89:2"},"returnParameters":{"id":209,"nodeType":"ParameterList","parameters":[],"src":"2601:0:2"},"scope":463,"src":"2472:130:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fc3c1f8b","id":225,"implemented":false,"kind":"function","modifiers":[],"name":"registerBeaconUpdateSubscription","nameLocation":"2617:32:2","nodeType":"FunctionDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"airnode","nameLocation":"2667:7:2","nodeType":"VariableDeclaration","scope":225,"src":"2659:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"2659:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"templateId","nameLocation":"2692:10:2","nodeType":"VariableDeclaration","scope":225,"src":"2684:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2684:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"conditions","nameLocation":"2725:10:2","nodeType":"VariableDeclaration","scope":225,"src":"2712:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":215,"name":"bytes","nodeType":"ElementaryTypeName","src":"2712:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"relayer","nameLocation":"2753:7:2","nodeType":"VariableDeclaration","scope":225,"src":"2745:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"2745:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":220,"mutability":"mutable","name":"sponsor","nameLocation":"2778:7:2","nodeType":"VariableDeclaration","scope":225,"src":"2770:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"2770:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2649:142:2"},"returnParameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"subscriptionId","nameLocation":"2818:14:2","nodeType":"VariableDeclaration","scope":225,"src":"2810:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2810:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2809:24:2"},"scope":463,"src":"2608:226:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"dc96acc8","id":236,"implemented":false,"kind":"function","modifiers":[],"name":"conditionPspBeaconUpdate","nameLocation":"2849:24:2","nodeType":"FunctionDefinition","parameters":{"id":232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"subscriptionId","nameLocation":"2891:14:2","nodeType":"VariableDeclaration","scope":236,"src":"2883:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2883:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":229,"mutability":"mutable","name":"data","nameLocation":"2930:4:2","nodeType":"VariableDeclaration","scope":236,"src":"2915:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":228,"name":"bytes","nodeType":"ElementaryTypeName","src":"2915:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":231,"mutability":"mutable","name":"conditionParameters","nameLocation":"2959:19:2","nodeType":"VariableDeclaration","scope":236,"src":"2944:34:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":230,"name":"bytes","nodeType":"ElementaryTypeName","src":"2944:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2873:111:2"},"returnParameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":236,"src":"3008:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":233,"name":"bool","nodeType":"ElementaryTypeName","src":"3008:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3007:6:2"},"scope":463,"src":"2840:174:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"206b48f4","id":253,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillPspBeaconUpdate","nameLocation":"3029:22:2","nodeType":"FunctionDefinition","parameters":{"id":251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"subscriptionId","nameLocation":"3069:14:2","nodeType":"VariableDeclaration","scope":253,"src":"3061:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"airnode","nameLocation":"3101:7:2","nodeType":"VariableDeclaration","scope":253,"src":"3093:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"3093:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"relayer","nameLocation":"3126:7:2","nodeType":"VariableDeclaration","scope":253,"src":"3118:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"3118:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"sponsor","nameLocation":"3151:7:2","nodeType":"VariableDeclaration","scope":253,"src":"3143:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"3143:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":246,"mutability":"mutable","name":"timestamp","nameLocation":"3176:9:2","nodeType":"VariableDeclaration","scope":253,"src":"3168:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint256","nodeType":"ElementaryTypeName","src":"3168:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"data","nameLocation":"3210:4:2","nodeType":"VariableDeclaration","scope":253,"src":"3195:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":247,"name":"bytes","nodeType":"ElementaryTypeName","src":"3195:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":250,"mutability":"mutable","name":"signature","nameLocation":"3239:9:2","nodeType":"VariableDeclaration","scope":253,"src":"3224:24:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":249,"name":"bytes","nodeType":"ElementaryTypeName","src":"3224:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3051:203:2"},"returnParameters":{"id":252,"nodeType":"ParameterList","parameters":[],"src":"3263:0:2"},"scope":463,"src":"3020:244:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1a0a0b3e","id":266,"implemented":false,"kind":"function","modifiers":[],"name":"updateBeaconWithSignedData","nameLocation":"3279:26:2","nodeType":"FunctionDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"airnode","nameLocation":"3323:7:2","nodeType":"VariableDeclaration","scope":266,"src":"3315:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":254,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":257,"mutability":"mutable","name":"beaconId","nameLocation":"3348:8:2","nodeType":"VariableDeclaration","scope":266,"src":"3340:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3340:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"timestamp","nameLocation":"3374:9:2","nodeType":"VariableDeclaration","scope":266,"src":"3366:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"3366:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"data","nameLocation":"3408:4:2","nodeType":"VariableDeclaration","scope":266,"src":"3393:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":260,"name":"bytes","nodeType":"ElementaryTypeName","src":"3393:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"signature","nameLocation":"3437:9:2","nodeType":"VariableDeclaration","scope":266,"src":"3422:24:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":262,"name":"bytes","nodeType":"ElementaryTypeName","src":"3422:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3305:147:2"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[],"src":"3461:0:2"},"scope":463,"src":"3270:192:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"00aae33f","id":274,"implemented":false,"kind":"function","modifiers":[],"name":"updateBeaconSetWithBeacons","nameLocation":"3477:26:2","nodeType":"FunctionDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"beaconIds","nameLocation":"3521:9:2","nodeType":"VariableDeclaration","scope":274,"src":"3504:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":267,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3504:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":268,"nodeType":"ArrayTypeName","src":"3504:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3503:28:2"},"returnParameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"beaconSetId","nameLocation":"3574:11:2","nodeType":"VariableDeclaration","scope":274,"src":"3566:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":271,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3566:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3565:21:2"},"scope":463,"src":"3468:119:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8e85afe0","id":284,"implemented":false,"kind":"function","modifiers":[],"name":"updateBeaconSetWithBeaconsAndReturnCondition","nameLocation":"3602:44:2","nodeType":"FunctionDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"beaconIds","nameLocation":"3673:9:2","nodeType":"VariableDeclaration","scope":284,"src":"3656:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3656:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":276,"nodeType":"ArrayTypeName","src":"3656:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":279,"mutability":"mutable","name":"updateThresholdInPercentage","nameLocation":"3700:27:2","nodeType":"VariableDeclaration","scope":284,"src":"3692:35:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"3692:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3646:87:2"},"returnParameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":284,"src":"3752:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":281,"name":"bool","nodeType":"ElementaryTypeName","src":"3752:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3751:6:2"},"scope":463,"src":"3593:165:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d7c0b879","id":295,"implemented":false,"kind":"function","modifiers":[],"name":"conditionPspBeaconSetUpdate","nameLocation":"3773:27:2","nodeType":"FunctionDefinition","parameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"subscriptionId","nameLocation":"3818:14:2","nodeType":"VariableDeclaration","scope":295,"src":"3810:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3810:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"data","nameLocation":"3857:4:2","nodeType":"VariableDeclaration","scope":295,"src":"3842:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":287,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"conditionParameters","nameLocation":"3886:19:2","nodeType":"VariableDeclaration","scope":295,"src":"3871:34:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":289,"name":"bytes","nodeType":"ElementaryTypeName","src":"3871:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3800:111:2"},"returnParameters":{"id":294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":295,"src":"3930:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":292,"name":"bool","nodeType":"ElementaryTypeName","src":"3930:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3929:6:2"},"scope":463,"src":"3764:172:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2ce010e3","id":312,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillPspBeaconSetUpdate","nameLocation":"3951:25:2","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"mutability":"mutable","name":"subscriptionId","nameLocation":"3994:14:2","nodeType":"VariableDeclaration","scope":312,"src":"3986:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3986:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"airnode","nameLocation":"4026:7:2","nodeType":"VariableDeclaration","scope":312,"src":"4018:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"4018:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"relayer","nameLocation":"4051:7:2","nodeType":"VariableDeclaration","scope":312,"src":"4043:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"4043:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"sponsor","nameLocation":"4076:7:2","nodeType":"VariableDeclaration","scope":312,"src":"4068:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"4068:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":305,"mutability":"mutable","name":"timestamp","nameLocation":"4101:9:2","nodeType":"VariableDeclaration","scope":312,"src":"4093:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":304,"name":"uint256","nodeType":"ElementaryTypeName","src":"4093:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"data","nameLocation":"4135:4:2","nodeType":"VariableDeclaration","scope":312,"src":"4120:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":306,"name":"bytes","nodeType":"ElementaryTypeName","src":"4120:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"signature","nameLocation":"4164:9:2","nodeType":"VariableDeclaration","scope":312,"src":"4149:24:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":308,"name":"bytes","nodeType":"ElementaryTypeName","src":"4149:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3976:203:2"},"returnParameters":{"id":311,"nodeType":"ParameterList","parameters":[],"src":"4188:0:2"},"scope":463,"src":"3942:247:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"65101054","id":332,"implemented":false,"kind":"function","modifiers":[],"name":"updateBeaconSetWithSignedData","nameLocation":"4204:29:2","nodeType":"FunctionDefinition","parameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"airnodes","nameLocation":"4260:8:2","nodeType":"VariableDeclaration","scope":332,"src":"4243:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"4243:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":314,"nodeType":"ArrayTypeName","src":"4243:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":318,"mutability":"mutable","name":"templateIds","nameLocation":"4295:11:2","nodeType":"VariableDeclaration","scope":332,"src":"4278:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4278:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":317,"nodeType":"ArrayTypeName","src":"4278:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":321,"mutability":"mutable","name":"timestamps","nameLocation":"4333:10:2","nodeType":"VariableDeclaration","scope":332,"src":"4316:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"4316:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":320,"nodeType":"ArrayTypeName","src":"4316:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"data","nameLocation":"4368:4:2","nodeType":"VariableDeclaration","scope":332,"src":"4353:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":322,"name":"bytes","nodeType":"ElementaryTypeName","src":"4353:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":323,"nodeType":"ArrayTypeName","src":"4353:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":327,"mutability":"mutable","name":"signatures","nameLocation":"4397:10:2","nodeType":"VariableDeclaration","scope":332,"src":"4382:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":325,"name":"bytes","nodeType":"ElementaryTypeName","src":"4382:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":326,"nodeType":"ArrayTypeName","src":"4382:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"4233:180:2"},"returnParameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"mutability":"mutable","name":"beaconSetId","nameLocation":"4440:11:2","nodeType":"VariableDeclaration","scope":332,"src":"4432:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4432:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4431:21:2"},"scope":463,"src":"4195:258:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e406f3b2","id":337,"implemented":false,"kind":"function","modifiers":[],"name":"addUnlimitedReader","nameLocation":"4468:18:2","nodeType":"FunctionDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"unlimitedReader","nameLocation":"4495:15:2","nodeType":"VariableDeclaration","scope":337,"src":"4487:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"4487:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4486:25:2"},"returnParameters":{"id":336,"nodeType":"ParameterList","parameters":[],"src":"4520:0:2"},"scope":463,"src":"4459:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"91eed085","id":344,"implemented":false,"kind":"function","modifiers":[],"name":"setDapiName","nameLocation":"4536:11:2","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"dapiName","nameLocation":"4556:8:2","nodeType":"VariableDeclaration","scope":344,"src":"4548:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4548:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"dataFeedId","nameLocation":"4574:10:2","nodeType":"VariableDeclaration","scope":344,"src":"4566:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4566:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4547:38:2"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[],"src":"4594:0:2"},"scope":463,"src":"4527:68:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8fca9ab9","id":351,"implemented":false,"kind":"function","modifiers":[],"name":"dapiNameToDataFeedId","nameLocation":"4610:20:2","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"mutability":"mutable","name":"dapiName","nameLocation":"4639:8:2","nodeType":"VariableDeclaration","scope":351,"src":"4631:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":345,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4631:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4630:18:2"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":351,"src":"4696:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4696:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4695:9:2"},"scope":463,"src":"4601:104:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a5fc076f","id":360,"implemented":false,"kind":"function","modifiers":[],"name":"readDataFeedWithId","nameLocation":"4720:18:2","nodeType":"FunctionDefinition","parameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"dataFeedId","nameLocation":"4747:10:2","nodeType":"VariableDeclaration","scope":360,"src":"4739:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":352,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4739:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4738:20:2"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"value","nameLocation":"4813:5:2","nodeType":"VariableDeclaration","scope":360,"src":"4806:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":355,"name":"int224","nodeType":"ElementaryTypeName","src":"4806:6:2","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"timestamp","nameLocation":"4827:9:2","nodeType":"VariableDeclaration","scope":360,"src":"4820:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":357,"name":"uint32","nodeType":"ElementaryTypeName","src":"4820:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4805:32:2"},"scope":463,"src":"4711:127:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"58c55edd","id":367,"implemented":false,"kind":"function","modifiers":[],"name":"readDataFeedValueWithId","nameLocation":"4853:23:2","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":362,"mutability":"mutable","name":"dataFeedId","nameLocation":"4885:10:2","nodeType":"VariableDeclaration","scope":367,"src":"4877:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":361,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4877:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4876:20:2"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"value","nameLocation":"4951:5:2","nodeType":"VariableDeclaration","scope":367,"src":"4944:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":364,"name":"int224","nodeType":"ElementaryTypeName","src":"4944:6:2","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"4943:14:2"},"scope":463,"src":"4844:114:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3af1dbfd","id":376,"implemented":false,"kind":"function","modifiers":[],"name":"readDataFeedWithDapiName","nameLocation":"4973:24:2","nodeType":"FunctionDefinition","parameters":{"id":370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"dapiName","nameLocation":"5006:8:2","nodeType":"VariableDeclaration","scope":376,"src":"4998:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":368,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4998:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4997:18:2"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"value","nameLocation":"5070:5:2","nodeType":"VariableDeclaration","scope":376,"src":"5063:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":371,"name":"int224","nodeType":"ElementaryTypeName","src":"5063:6:2","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"timestamp","nameLocation":"5084:9:2","nodeType":"VariableDeclaration","scope":376,"src":"5077:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":373,"name":"uint32","nodeType":"ElementaryTypeName","src":"5077:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5062:32:2"},"scope":463,"src":"4964:131:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"70c927ca","id":383,"implemented":false,"kind":"function","modifiers":[],"name":"readDataFeedValueWithDapiName","nameLocation":"5110:29:2","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"dapiName","nameLocation":"5148:8:2","nodeType":"VariableDeclaration","scope":383,"src":"5140:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5140:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5139:18:2"},"returnParameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"value","nameLocation":"5212:5:2","nodeType":"VariableDeclaration","scope":383,"src":"5205:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":380,"name":"int224","nodeType":"ElementaryTypeName","src":"5205:6:2","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"5204:14:2"},"scope":463,"src":"5101:118:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bcb5daec","id":392,"implemented":false,"kind":"function","modifiers":[],"name":"readerCanReadDataFeed","nameLocation":"5234:21:2","nodeType":"FunctionDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"dataFeedId","nameLocation":"5264:10:2","nodeType":"VariableDeclaration","scope":392,"src":"5256:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5256:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"reader","nameLocation":"5284:6:2","nodeType":"VariableDeclaration","scope":392,"src":"5276:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"5276:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5255:36:2"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":392,"src":"5339:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":389,"name":"bool","nodeType":"ElementaryTypeName","src":"5339:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5338:6:2"},"scope":463,"src":"5225:120:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d39c8968","id":403,"implemented":false,"kind":"function","modifiers":[],"name":"dataFeedIdToReaderToWhitelistStatus","nameLocation":"5360:35:2","nodeType":"FunctionDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"dataFeedId","nameLocation":"5413:10:2","nodeType":"VariableDeclaration","scope":403,"src":"5405:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5405:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"reader","nameLocation":"5441:6:2","nodeType":"VariableDeclaration","scope":403,"src":"5433:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"5433:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5395:58:2"},"returnParameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"expirationTimestamp","nameLocation":"5508:19:2","nodeType":"VariableDeclaration","scope":403,"src":"5501:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":398,"name":"uint64","nodeType":"ElementaryTypeName","src":"5501:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":401,"mutability":"mutable","name":"indefiniteWhitelistCount","nameLocation":"5537:24:2","nodeType":"VariableDeclaration","scope":403,"src":"5529:32:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":400,"name":"uint192","nodeType":"ElementaryTypeName","src":"5529:7:2","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5500:62:2"},"scope":463,"src":"5351:212:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f60e45d3","id":414,"implemented":false,"kind":"function","modifiers":[],"name":"dataFeedIdToReaderToSetterToIndefiniteWhitelistStatus","nameLocation":"5578:53:2","nodeType":"FunctionDefinition","parameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":405,"mutability":"mutable","name":"dataFeedId","nameLocation":"5649:10:2","nodeType":"VariableDeclaration","scope":414,"src":"5641:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5641:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"reader","nameLocation":"5677:6:2","nodeType":"VariableDeclaration","scope":414,"src":"5669:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":409,"mutability":"mutable","name":"setter","nameLocation":"5701:6:2","nodeType":"VariableDeclaration","scope":414,"src":"5693:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"5693:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5631:82:2"},"returnParameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"indefiniteWhitelistStatus","nameLocation":"5742:25:2","nodeType":"VariableDeclaration","scope":414,"src":"5737:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":411,"name":"bool","nodeType":"ElementaryTypeName","src":"5737:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5736:32:2"},"scope":463,"src":"5569:200:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"04dd3cee","id":423,"implemented":false,"kind":"function","modifiers":[],"name":"deriveBeaconId","nameLocation":"5784:14:2","nodeType":"FunctionDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"airnode","nameLocation":"5807:7:2","nodeType":"VariableDeclaration","scope":423,"src":"5799:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"templateId","nameLocation":"5824:10:2","nodeType":"VariableDeclaration","scope":423,"src":"5816:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":417,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5816:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5798:37:2"},"returnParameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"mutability":"mutable","name":"beaconId","nameLocation":"5891:8:2","nodeType":"VariableDeclaration","scope":423,"src":"5883:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":420,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5883:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5882:18:2"},"scope":463,"src":"5775:126:2","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"c4f95dd5","id":431,"implemented":false,"kind":"function","modifiers":[],"name":"deriveBeaconSetId","nameLocation":"5916:17:2","nodeType":"FunctionDefinition","parameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"mutability":"mutable","name":"beaconIds","nameLocation":"5951:9:2","nodeType":"VariableDeclaration","scope":431,"src":"5934:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":424,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5934:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":425,"nodeType":"ArrayTypeName","src":"5934:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5933:28:2"},"returnParameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"beaconSetId","nameLocation":"6017:11:2","nodeType":"VariableDeclaration","scope":431,"src":"6009:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6009:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6008:21:2"},"scope":463,"src":"5907:123:2","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"fce90be8","id":436,"implemented":false,"kind":"function","modifiers":[],"name":"DAPI_NAME_SETTER_ROLE_DESCRIPTION","nameLocation":"6098:33:2","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"6131:2:2"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":436,"src":"6181:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":433,"name":"string","nodeType":"ElementaryTypeName","src":"6181:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6180:15:2"},"scope":463,"src":"6089:107:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6ed93dd0","id":441,"implemented":false,"kind":"function","modifiers":[],"name":"HUNDRED_PERCENT","nameLocation":"6264:15:2","nodeType":"FunctionDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[],"src":"6279:2:2"},"returnParameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":441,"src":"6305:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":438,"name":"uint256","nodeType":"ElementaryTypeName","src":"6305:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6304:9:2"},"scope":463,"src":"6255:59:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7512449b","id":446,"implemented":false,"kind":"function","modifiers":[],"name":"dapiNameSetterRole","nameLocation":"6329:18:2","nodeType":"FunctionDefinition","parameters":{"id":442,"nodeType":"ParameterList","parameters":[],"src":"6347:2:2"},"returnParameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":446,"src":"6373:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":443,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6373:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6372:9:2"},"scope":463,"src":"6320:62:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"977cae01","id":455,"implemented":false,"kind":"function","modifiers":[],"name":"sponsorToRrpBeaconUpdateRequesterToPermissionStatus","nameLocation":"6397:51:2","nodeType":"FunctionDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"sponsor","nameLocation":"6466:7:2","nodeType":"VariableDeclaration","scope":455,"src":"6458:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"6458:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"updateRequester","nameLocation":"6491:15:2","nodeType":"VariableDeclaration","scope":455,"src":"6483:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":449,"name":"address","nodeType":"ElementaryTypeName","src":"6483:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6448:64:2"},"returnParameters":{"id":454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":455,"src":"6536:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":452,"name":"bool","nodeType":"ElementaryTypeName","src":"6536:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6535:6:2"},"scope":463,"src":"6388:154:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a026658f","id":462,"implemented":false,"kind":"function","modifiers":[],"name":"subscriptionIdToBeaconId","nameLocation":"6557:24:2","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"subscriptionId","nameLocation":"6590:14:2","nodeType":"VariableDeclaration","scope":462,"src":"6582:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6581:24:2"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":462,"src":"6653:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6653:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6652:9:2"},"scope":463,"src":"6548:114:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":464,"src":"116:6548:2","usedErrors":[]}],"src":"32:6633:2"},"id":2},"@api3/airnode-protocol-v1/contracts/protocol/interfaces/IAirnodeRequester.sol":{"ast":{"absolutePath":"@api3/airnode-protocol-v1/contracts/protocol/interfaces/IAirnodeRequester.sol","exportedSymbols":{"IAirnodeRequester":[471]},"id":472,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":465,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IAirnodeRequester","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":471,"linearizedBaseContracts":[471],"name":"IAirnodeRequester","nameLocation":"67:17:3","nodeType":"ContractDefinition","nodes":[{"functionSelector":"b76f3c15","id":470,"implemented":false,"kind":"function","modifiers":[],"name":"airnodeProtocol","nameLocation":"100:15:3","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[],"src":"115:2:3"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":470,"src":"141:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"141:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"140:9:3"},"scope":471,"src":"91:59:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":472,"src":"57:95:3","usedErrors":[]}],"src":"32:121:3"},"id":3},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1247],"Ownable":[576]},"id":577,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":473,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":474,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":577,"sourceUnit":1248,"src":"112:30:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":476,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1247,"src":"668:7:4"},"id":477,"nodeType":"InheritanceSpecifier","src":"668:7:4"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"144:494:4","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":576,"linearizedBaseContracts":[576,1247],"name":"Ownable","nameLocation":"657:7:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":479,"mutability":"mutable","name":"_owner","nameLocation":"698:6:4","nodeType":"VariableDeclaration","scope":576,"src":"682:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"682:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":485,"name":"OwnershipTransferred","nameLocation":"717:20:4","nodeType":"EventDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"754:13:4","nodeType":"VariableDeclaration","scope":485,"src":"738:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":480,"name":"address","nodeType":"ElementaryTypeName","src":"738:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":483,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"785:8:4","nodeType":"VariableDeclaration","scope":485,"src":"769:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"769:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"737:57:4"},"src":"711:84:4"},{"body":{"id":494,"nodeType":"Block","src":"911:49:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":490,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"940:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"940:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":489,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"921:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"921:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"921:32:4"}]},"documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"801:91:4","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":495,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":487,"nodeType":"ParameterList","parameters":[],"src":"908:2:4"},"returnParameters":{"id":488,"nodeType":"ParameterList","parameters":[],"src":"911:0:4"},"scope":576,"src":"897:63:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":503,"nodeType":"Block","src":"1091:30:4","statements":[{"expression":{"id":501,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"1108:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":500,"id":502,"nodeType":"Return","src":"1101:13:4"}]},"documentation":{"id":496,"nodeType":"StructuredDocumentation","src":"966:65:4","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":504,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1045:5:4","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"1050:2:4"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":504,"src":"1082:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"1082:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1081:9:4"},"scope":576,"src":"1036:85:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":517,"nodeType":"Block","src":"1230:96:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":508,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"1248:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1248:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":510,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"1259:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1259:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1248:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1273:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":507,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1240:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1240:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":515,"nodeType":"ExpressionStatement","src":"1240:68:4"},{"id":516,"nodeType":"PlaceholderStatement","src":"1318:1:4"}]},"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"1127:77:4","text":" @dev Throws if called by any account other than the owner."},"id":518,"name":"onlyOwner","nameLocation":"1218:9:4","nodeType":"ModifierDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"1227:2:4"},"src":"1209:117:4","virtual":false,"visibility":"internal"},{"body":{"id":531,"nodeType":"Block","src":"1722:47:4","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1751:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":525,"name":"address","nodeType":"ElementaryTypeName","src":"1751:7:4","typeDescriptions":{}}},"id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1751:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":524,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"1732:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1732:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":530,"nodeType":"ExpressionStatement","src":"1732:30:4"}]},"documentation":{"id":519,"nodeType":"StructuredDocumentation","src":"1332:331:4","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":532,"implemented":true,"kind":"function","modifiers":[{"id":522,"kind":"modifierInvocation","modifierName":{"id":521,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":518,"src":"1712:9:4"},"nodeType":"ModifierInvocation","src":"1712:9:4"}],"name":"renounceOwnership","nameLocation":"1677:17:4","nodeType":"FunctionDefinition","parameters":{"id":520,"nodeType":"ParameterList","parameters":[],"src":"1694:2:4"},"returnParameters":{"id":523,"nodeType":"ParameterList","parameters":[],"src":"1722:0:4"},"scope":576,"src":"1668:101:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":554,"nodeType":"Block","src":"1988:128:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":541,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"2006:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2026:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2018:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"2018:7:4","typeDescriptions":{}}},"id":545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2018:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2006:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2030:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":540,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1998:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1998:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":549,"nodeType":"ExpressionStatement","src":"1998:73:4"},{"expression":{"arguments":[{"id":551,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"2100:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":550,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"2081:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2081:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":553,"nodeType":"ExpressionStatement","src":"2081:28:4"}]},"documentation":{"id":533,"nodeType":"StructuredDocumentation","src":"1775:138:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":555,"implemented":true,"kind":"function","modifiers":[{"id":538,"kind":"modifierInvocation","modifierName":{"id":537,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":518,"src":"1978:9:4"},"nodeType":"ModifierInvocation","src":"1978:9:4"}],"name":"transferOwnership","nameLocation":"1927:17:4","nodeType":"FunctionDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"newOwner","nameLocation":"1953:8:4","nodeType":"VariableDeclaration","scope":555,"src":"1945:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":534,"name":"address","nodeType":"ElementaryTypeName","src":"1945:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1944:18:4"},"returnParameters":{"id":539,"nodeType":"ParameterList","parameters":[],"src":"1988:0:4"},"scope":576,"src":"1918:198:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":574,"nodeType":"Block","src":"2333:124:4","statements":[{"assignments":[562],"declarations":[{"constant":false,"id":562,"mutability":"mutable","name":"oldOwner","nameLocation":"2351:8:4","nodeType":"VariableDeclaration","scope":574,"src":"2343:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"2343:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":564,"initialValue":{"id":563,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"2362:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2343:25:4"},{"expression":{"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":565,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"2378:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":566,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"2387:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2378:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":568,"nodeType":"ExpressionStatement","src":"2378:17:4"},{"eventCall":{"arguments":[{"id":570,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2431:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":571,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"2441:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":569,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"2410:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2410:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":573,"nodeType":"EmitStatement","src":"2405:45:4"}]},"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"2122:143:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":575,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2279:18:4","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"newOwner","nameLocation":"2306:8:4","nodeType":"VariableDeclaration","scope":575,"src":"2298:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"2298:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2297:18:4"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[],"src":"2333:0:4"},"scope":576,"src":"2270:187:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":577,"src":"639:1820:4","usedErrors":[]}],"src":"87:2373:4"},"id":4},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1247],"ERC20":[1122],"IERC20":[1200],"IERC20Metadata":[1225]},"id":1123,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":578,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"90:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":579,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1123,"sourceUnit":1201,"src":"115:22:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":580,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1123,"sourceUnit":1226,"src":"138:41:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":581,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1123,"sourceUnit":1248,"src":"180:33:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":583,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1247,"src":"1406:7:5"},"id":584,"nodeType":"InheritanceSpecifier","src":"1406:7:5"},{"baseName":{"id":585,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1200,"src":"1415:6:5"},"id":586,"nodeType":"InheritanceSpecifier","src":"1415:6:5"},{"baseName":{"id":587,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":1225,"src":"1423:14:5"},"id":588,"nodeType":"InheritanceSpecifier","src":"1423:14:5"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":582,"nodeType":"StructuredDocumentation","src":"215:1172:5","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1122,"linearizedBaseContracts":[1122,1225,1200,1247],"name":"ERC20","nameLocation":"1397:5:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":592,"mutability":"mutable","name":"_balances","nameLocation":"1480:9:5","nodeType":"VariableDeclaration","scope":1122,"src":"1444:45:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":591,"keyType":{"id":589,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1444:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":590,"name":"uint256","nodeType":"ElementaryTypeName","src":"1463:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":598,"mutability":"mutable","name":"_allowances","nameLocation":"1552:11:5","nodeType":"VariableDeclaration","scope":1122,"src":"1496:67:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":597,"keyType":{"id":593,"name":"address","nodeType":"ElementaryTypeName","src":"1504:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1496:47:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":596,"keyType":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"1523:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1515:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":595,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":600,"mutability":"mutable","name":"_totalSupply","nameLocation":"1586:12:5","nodeType":"VariableDeclaration","scope":1122,"src":"1570:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":599,"name":"uint256","nodeType":"ElementaryTypeName","src":"1570:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":602,"mutability":"mutable","name":"_name","nameLocation":"1620:5:5","nodeType":"VariableDeclaration","scope":1122,"src":"1605:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":601,"name":"string","nodeType":"ElementaryTypeName","src":"1605:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":604,"mutability":"mutable","name":"_symbol","nameLocation":"1646:7:5","nodeType":"VariableDeclaration","scope":1122,"src":"1631:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":603,"name":"string","nodeType":"ElementaryTypeName","src":"1631:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":620,"nodeType":"Block","src":"2019:57:5","statements":[{"expression":{"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":612,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"2029:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":613,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"2037:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2029:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":615,"nodeType":"ExpressionStatement","src":"2029:13:5"},{"expression":{"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":616,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"2052:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":617,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"2062:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2052:17:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":619,"nodeType":"ExpressionStatement","src":"2052:17:5"}]},"documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"1660:298:5","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":621,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"name_","nameLocation":"1989:5:5","nodeType":"VariableDeclaration","scope":621,"src":"1975:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":606,"name":"string","nodeType":"ElementaryTypeName","src":"1975:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"symbol_","nameLocation":"2010:7:5","nodeType":"VariableDeclaration","scope":621,"src":"1996:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":608,"name":"string","nodeType":"ElementaryTypeName","src":"1996:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1974:44:5"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"2019:0:5"},"scope":1122,"src":"1963:113:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1212],"body":{"id":630,"nodeType":"Block","src":"2210:29:5","statements":[{"expression":{"id":628,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"2227:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":627,"id":629,"nodeType":"Return","src":"2220:12:5"}]},"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"2082:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":631,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2150:4:5","nodeType":"FunctionDefinition","overrides":{"id":624,"nodeType":"OverrideSpecifier","overrides":[],"src":"2177:8:5"},"parameters":{"id":623,"nodeType":"ParameterList","parameters":[],"src":"2154:2:5"},"returnParameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":631,"src":"2195:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":625,"name":"string","nodeType":"ElementaryTypeName","src":"2195:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2194:15:5"},"scope":1122,"src":"2141:98:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1218],"body":{"id":640,"nodeType":"Block","src":"2423:31:5","statements":[{"expression":{"id":638,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"2440:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":637,"id":639,"nodeType":"Return","src":"2433:14:5"}]},"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"2245:102:5","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":641,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2361:6:5","nodeType":"FunctionDefinition","overrides":{"id":634,"nodeType":"OverrideSpecifier","overrides":[],"src":"2390:8:5"},"parameters":{"id":633,"nodeType":"ParameterList","parameters":[],"src":"2367:2:5"},"returnParameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":641,"src":"2408:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":635,"name":"string","nodeType":"ElementaryTypeName","src":"2408:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2407:15:5"},"scope":1122,"src":"2352:102:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1224],"body":{"id":650,"nodeType":"Block","src":"3143:26:5","statements":[{"expression":{"hexValue":"3138","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3160:2:5","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":647,"id":649,"nodeType":"Return","src":"3153:9:5"}]},"documentation":{"id":642,"nodeType":"StructuredDocumentation","src":"2460:613:5","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":651,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3087:8:5","nodeType":"FunctionDefinition","overrides":{"id":644,"nodeType":"OverrideSpecifier","overrides":[],"src":"3118:8:5"},"parameters":{"id":643,"nodeType":"ParameterList","parameters":[],"src":"3095:2:5"},"returnParameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":651,"src":"3136:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":645,"name":"uint8","nodeType":"ElementaryTypeName","src":"3136:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3135:7:5"},"scope":1122,"src":"3078:91:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1131],"body":{"id":660,"nodeType":"Block","src":"3299:36:5","statements":[{"expression":{"id":658,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"3316:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":657,"id":659,"nodeType":"Return","src":"3309:19:5"}]},"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"3175:49:5","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":661,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3238:11:5","nodeType":"FunctionDefinition","overrides":{"id":654,"nodeType":"OverrideSpecifier","overrides":[],"src":"3272:8:5"},"parameters":{"id":653,"nodeType":"ParameterList","parameters":[],"src":"3249:2:5"},"returnParameters":{"id":657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":661,"src":"3290:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":655,"name":"uint256","nodeType":"ElementaryTypeName","src":"3290:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3289:9:5"},"scope":1122,"src":"3229:106:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1139],"body":{"id":674,"nodeType":"Block","src":"3476:42:5","statements":[{"expression":{"baseExpression":{"id":670,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"3493:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":672,"indexExpression":{"id":671,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3503:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3493:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":669,"id":673,"nodeType":"Return","src":"3486:25:5"}]},"documentation":{"id":662,"nodeType":"StructuredDocumentation","src":"3341:47:5","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":675,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3402:9:5","nodeType":"FunctionDefinition","overrides":{"id":666,"nodeType":"OverrideSpecifier","overrides":[],"src":"3449:8:5"},"parameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"account","nameLocation":"3420:7:5","nodeType":"VariableDeclaration","scope":675,"src":"3412:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"3412:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3411:17:5"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"3467:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":667,"name":"uint256","nodeType":"ElementaryTypeName","src":"3467:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3466:9:5"},"scope":1122,"src":"3393:125:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1149],"body":{"id":695,"nodeType":"Block","src":"3813:80:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":687,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"3833:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3833:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":689,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"3847:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":690,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"3858:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":686,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"3823:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3823:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":692,"nodeType":"ExpressionStatement","src":"3823:42:5"},{"expression":{"hexValue":"74727565","id":693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3882:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":685,"id":694,"nodeType":"Return","src":"3875:11:5"}]},"documentation":{"id":676,"nodeType":"StructuredDocumentation","src":"3524:192:5","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":696,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3730:8:5","nodeType":"FunctionDefinition","overrides":{"id":682,"nodeType":"OverrideSpecifier","overrides":[],"src":"3789:8:5"},"parameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"recipient","nameLocation":"3747:9:5","nodeType":"VariableDeclaration","scope":696,"src":"3739:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"amount","nameLocation":"3766:6:5","nodeType":"VariableDeclaration","scope":696,"src":"3758:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":679,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3738:35:5"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":696,"src":"3807:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":683,"name":"bool","nodeType":"ElementaryTypeName","src":"3807:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3806:6:5"},"scope":1122,"src":"3721:172:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1159],"body":{"id":713,"nodeType":"Block","src":"4049:51:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":707,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"4066:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":709,"indexExpression":{"id":708,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"4078:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4066:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":711,"indexExpression":{"id":710,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"4085:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4066:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":706,"id":712,"nodeType":"Return","src":"4059:34:5"}]},"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"3899:47:5","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":714,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3960:9:5","nodeType":"FunctionDefinition","overrides":{"id":703,"nodeType":"OverrideSpecifier","overrides":[],"src":"4022:8:5"},"parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"owner","nameLocation":"3978:5:5","nodeType":"VariableDeclaration","scope":714,"src":"3970:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"3970:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"spender","nameLocation":"3993:7:5","nodeType":"VariableDeclaration","scope":714,"src":"3985:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"3985:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3969:32:5"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":714,"src":"4040:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":704,"name":"uint256","nodeType":"ElementaryTypeName","src":"4040:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4039:9:5"},"scope":1122,"src":"3951:149:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1169],"body":{"id":734,"nodeType":"Block","src":"4327:77:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":726,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"4346:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4346:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":728,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"4360:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":729,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"4369:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":725,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"4337:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4337:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":731,"nodeType":"ExpressionStatement","src":"4337:39:5"},{"expression":{"hexValue":"74727565","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4393:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":724,"id":733,"nodeType":"Return","src":"4386:11:5"}]},"documentation":{"id":715,"nodeType":"StructuredDocumentation","src":"4106:127:5","text":" @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":735,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4247:7:5","nodeType":"FunctionDefinition","overrides":{"id":721,"nodeType":"OverrideSpecifier","overrides":[],"src":"4303:8:5"},"parameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"spender","nameLocation":"4263:7:5","nodeType":"VariableDeclaration","scope":735,"src":"4255:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"4255:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":719,"mutability":"mutable","name":"amount","nameLocation":"4280:6:5","nodeType":"VariableDeclaration","scope":735,"src":"4272:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"4272:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4254:33:5"},"returnParameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":735,"src":"4321:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":722,"name":"bool","nodeType":"ElementaryTypeName","src":"4321:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4320:6:5"},"scope":1122,"src":"4238:166:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1181],"body":{"id":782,"nodeType":"Block","src":"5013:336:5","statements":[{"expression":{"arguments":[{"id":749,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"5033:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":750,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"5041:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":751,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"5052:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":748,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"5023:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5023:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":753,"nodeType":"ExpressionStatement","src":"5023:36:5"},{"assignments":[755],"declarations":[{"constant":false,"id":755,"mutability":"mutable","name":"currentAllowance","nameLocation":"5078:16:5","nodeType":"VariableDeclaration","scope":782,"src":"5070:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint256","nodeType":"ElementaryTypeName","src":"5070:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":762,"initialValue":{"baseExpression":{"baseExpression":{"id":756,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"5097:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":758,"indexExpression":{"id":757,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"5109:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5097:19:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":761,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":759,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"5117:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5117:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5097:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5070:60:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":764,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"5148:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":765,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"5168:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5148:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365","id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5176:42:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330","typeString":"literal_string \"ERC20: transfer amount exceeds allowance\""},"value":"ERC20: transfer amount exceeds allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330","typeString":"literal_string \"ERC20: transfer amount exceeds allowance\""}],"id":763,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5140:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5140:79:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":769,"nodeType":"ExpressionStatement","src":"5140:79:5"},{"id":779,"nodeType":"UncheckedBlock","src":"5229:92:5","statements":[{"expression":{"arguments":[{"id":771,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"5262:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":772,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"5270:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5270:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":774,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"5284:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":775,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"5303:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5284:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":770,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"5253:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5253:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":778,"nodeType":"ExpressionStatement","src":"5253:57:5"}]},{"expression":{"hexValue":"74727565","id":780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5338:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":747,"id":781,"nodeType":"Return","src":"5331:11:5"}]},"documentation":{"id":736,"nodeType":"StructuredDocumentation","src":"4410:456:5","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":783,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4880:12:5","nodeType":"FunctionDefinition","overrides":{"id":744,"nodeType":"OverrideSpecifier","overrides":[],"src":"4989:8:5"},"parameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"sender","nameLocation":"4910:6:5","nodeType":"VariableDeclaration","scope":783,"src":"4902:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":737,"name":"address","nodeType":"ElementaryTypeName","src":"4902:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"recipient","nameLocation":"4934:9:5","nodeType":"VariableDeclaration","scope":783,"src":"4926:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":739,"name":"address","nodeType":"ElementaryTypeName","src":"4926:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":742,"mutability":"mutable","name":"amount","nameLocation":"4961:6:5","nodeType":"VariableDeclaration","scope":783,"src":"4953:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":741,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4892:81:5"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":783,"src":"5007:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":745,"name":"bool","nodeType":"ElementaryTypeName","src":"5007:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5006:6:5"},"scope":1122,"src":"4871:478:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":809,"nodeType":"Block","src":"5838:118:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":794,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"5857:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5857:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":796,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"5871:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":797,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"5880:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":800,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":798,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"5892:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5892:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5880:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":802,"indexExpression":{"id":801,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"5906:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5880:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":803,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"5917:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5880:47:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":793,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"5848:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5848:80:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":806,"nodeType":"ExpressionStatement","src":"5848:80:5"},{"expression":{"hexValue":"74727565","id":807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5945:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":792,"id":808,"nodeType":"Return","src":"5938:11:5"}]},"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"5355:384:5","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":810,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5753:17:5","nodeType":"FunctionDefinition","parameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"spender","nameLocation":"5779:7:5","nodeType":"VariableDeclaration","scope":810,"src":"5771:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"5771:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":788,"mutability":"mutable","name":"addedValue","nameLocation":"5796:10:5","nodeType":"VariableDeclaration","scope":810,"src":"5788:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":787,"name":"uint256","nodeType":"ElementaryTypeName","src":"5788:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5770:37:5"},"returnParameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":810,"src":"5832:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":790,"name":"bool","nodeType":"ElementaryTypeName","src":"5832:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5831:6:5"},"scope":1122,"src":"5744:212:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":848,"nodeType":"Block","src":"6542:306:5","statements":[{"assignments":[821],"declarations":[{"constant":false,"id":821,"mutability":"mutable","name":"currentAllowance","nameLocation":"6560:16:5","nodeType":"VariableDeclaration","scope":848,"src":"6552:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":820,"name":"uint256","nodeType":"ElementaryTypeName","src":"6552:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":828,"initialValue":{"baseExpression":{"baseExpression":{"id":822,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6579:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":825,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":823,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"6591:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6591:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6579:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":827,"indexExpression":{"id":826,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"6605:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6579:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6552:61:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":830,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"6631:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":831,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"6651:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6631:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6668:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":829,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6623:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6623:85:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":835,"nodeType":"ExpressionStatement","src":"6623:85:5"},{"id":845,"nodeType":"UncheckedBlock","src":"6718:102:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":837,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"6751:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6751:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":839,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"6765:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":840,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"6774:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":841,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"6793:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6774:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":836,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"6742:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6742:67:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":844,"nodeType":"ExpressionStatement","src":"6742:67:5"}]},{"expression":{"hexValue":"74727565","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6837:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":819,"id":847,"nodeType":"Return","src":"6830:11:5"}]},"documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"5962:476:5","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":849,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6452:17:5","nodeType":"FunctionDefinition","parameters":{"id":816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"mutability":"mutable","name":"spender","nameLocation":"6478:7:5","nodeType":"VariableDeclaration","scope":849,"src":"6470:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"6470:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":815,"mutability":"mutable","name":"subtractedValue","nameLocation":"6495:15:5","nodeType":"VariableDeclaration","scope":849,"src":"6487:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint256","nodeType":"ElementaryTypeName","src":"6487:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6469:42:5"},"returnParameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":849,"src":"6536:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":817,"name":"bool","nodeType":"ElementaryTypeName","src":"6536:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6535:6:5"},"scope":1122,"src":"6443:405:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":925,"nodeType":"Block","src":"7439:596:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":860,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"7457:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7475:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7467:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"7467:7:5","typeDescriptions":{}}},"id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7467:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7457:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7479:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":859,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7449:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7449:70:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":868,"nodeType":"ExpressionStatement","src":"7449:70:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":870,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"7537:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7558:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7550:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"7550:7:5","typeDescriptions":{}}},"id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7550:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7537:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7562:37:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":869,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7529:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7529:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":878,"nodeType":"ExpressionStatement","src":"7529:71:5"},{"expression":{"arguments":[{"id":880,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"7632:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":881,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"7640:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":882,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"7651:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":879,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"7611:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7611:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":884,"nodeType":"ExpressionStatement","src":"7611:47:5"},{"assignments":[886],"declarations":[{"constant":false,"id":886,"mutability":"mutable","name":"senderBalance","nameLocation":"7677:13:5","nodeType":"VariableDeclaration","scope":925,"src":"7669:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":885,"name":"uint256","nodeType":"ElementaryTypeName","src":"7669:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":890,"initialValue":{"baseExpression":{"id":887,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"7693:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":889,"indexExpression":{"id":888,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"7703:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7693:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7669:41:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":892,"name":"senderBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"7728:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":893,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"7745:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7753:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":891,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7720:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7720:74:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":897,"nodeType":"ExpressionStatement","src":"7720:74:5"},{"id":906,"nodeType":"UncheckedBlock","src":"7804:77:5","statements":[{"expression":{"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":898,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"7828:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":900,"indexExpression":{"id":899,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"7838:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7828:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":901,"name":"senderBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"7848:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":902,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"7864:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7848:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7828:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":905,"nodeType":"ExpressionStatement","src":"7828:42:5"}]},{"expression":{"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":907,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"7890:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":909,"indexExpression":{"id":908,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"7900:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7890:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":910,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"7914:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:30:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":912,"nodeType":"ExpressionStatement","src":"7890:30:5"},{"eventCall":{"arguments":[{"id":914,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"7945:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":915,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"7953:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":916,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"7964:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":913,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"7936:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7936:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":918,"nodeType":"EmitStatement","src":"7931:40:5"},{"expression":{"arguments":[{"id":920,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"8002:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":921,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"8010:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":922,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"8021:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":919,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"7982:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7982:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":924,"nodeType":"ExpressionStatement","src":"7982:46:5"}]},"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"6854:463:5","text":" @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."},"id":926,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7331:9:5","nodeType":"FunctionDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"sender","nameLocation":"7358:6:5","nodeType":"VariableDeclaration","scope":926,"src":"7350:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"7350:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"recipient","nameLocation":"7382:9:5","nodeType":"VariableDeclaration","scope":926,"src":"7374:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"7374:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"amount","nameLocation":"7409:6:5","nodeType":"VariableDeclaration","scope":926,"src":"7401:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":855,"name":"uint256","nodeType":"ElementaryTypeName","src":"7401:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7340:81:5"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[],"src":"7439:0:5"},"scope":1122,"src":"7322:713:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":981,"nodeType":"Block","src":"8376:324:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":935,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"8394:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8413:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8405:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"8405:7:5","typeDescriptions":{}}},"id":939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8405:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8394:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8417:33:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":934,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8386:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8386:65:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":943,"nodeType":"ExpressionStatement","src":"8386:65:5"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8491:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8483:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":945,"name":"address","nodeType":"ElementaryTypeName","src":"8483:7:5","typeDescriptions":{}}},"id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8483:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":949,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"8495:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":950,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"8504:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":944,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"8462:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8462:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":952,"nodeType":"ExpressionStatement","src":"8462:49:5"},{"expression":{"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":953,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"8522:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":954,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"8538:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8522:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":956,"nodeType":"ExpressionStatement","src":"8522:22:5"},{"expression":{"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":957,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"8554:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":959,"indexExpression":{"id":958,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"8564:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8554:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":960,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"8576:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8554:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":962,"nodeType":"ExpressionStatement","src":"8554:28:5"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8614:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8606:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"8606:7:5","typeDescriptions":{}}},"id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8606:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":968,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"8618:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":969,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"8627:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":963,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"8597:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8597:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":971,"nodeType":"EmitStatement","src":"8592:42:5"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8673:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8665:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"8665:7:5","typeDescriptions":{}}},"id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8665:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":977,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"8677:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":978,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"8686:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":972,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"8645:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8645:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":980,"nodeType":"ExpressionStatement","src":"8645:48:5"}]},"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"8041:265:5","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":982,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8320:5:5","nodeType":"FunctionDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"mutability":"mutable","name":"account","nameLocation":"8334:7:5","nodeType":"VariableDeclaration","scope":982,"src":"8326:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"8326:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":931,"mutability":"mutable","name":"amount","nameLocation":"8351:6:5","nodeType":"VariableDeclaration","scope":982,"src":"8343:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"8343:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8325:33:5"},"returnParameters":{"id":933,"nodeType":"ParameterList","parameters":[],"src":"8376:0:5"},"scope":1122,"src":"8311:389:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1053,"nodeType":"Block","src":"9085:511:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":991,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"9103:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9122:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9114:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":992,"name":"address","nodeType":"ElementaryTypeName","src":"9114:7:5","typeDescriptions":{}}},"id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9114:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9103:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9126:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":990,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9095:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9095:67:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":999,"nodeType":"ExpressionStatement","src":"9095:67:5"},{"expression":{"arguments":[{"id":1001,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"9194:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9211:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9203:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1002,"name":"address","nodeType":"ElementaryTypeName","src":"9203:7:5","typeDescriptions":{}}},"id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9203:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1006,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"9215:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1000,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"9173:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9173:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1008,"nodeType":"ExpressionStatement","src":"9173:49:5"},{"assignments":[1010],"declarations":[{"constant":false,"id":1010,"mutability":"mutable","name":"accountBalance","nameLocation":"9241:14:5","nodeType":"VariableDeclaration","scope":1053,"src":"9233:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"9233:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1014,"initialValue":{"baseExpression":{"id":1011,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"9258:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1013,"indexExpression":{"id":1012,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"9268:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9258:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9233:43:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1016,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"9294:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1017,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"9312:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9294:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9320:36:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":1015,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9286:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9286:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1021,"nodeType":"ExpressionStatement","src":"9286:71:5"},{"id":1030,"nodeType":"UncheckedBlock","src":"9367:79:5","statements":[{"expression":{"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1022,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"9391:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1024,"indexExpression":{"id":1023,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"9401:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1025,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"9412:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1026,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"9429:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9412:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9391:44:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1029,"nodeType":"ExpressionStatement","src":"9391:44:5"}]},{"expression":{"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1031,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"9455:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1032,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"9471:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9455:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1034,"nodeType":"ExpressionStatement","src":"9455:22:5"},{"eventCall":{"arguments":[{"id":1036,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"9502:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9519:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9511:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"9511:7:5","typeDescriptions":{}}},"id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9511:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1041,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"9523:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1035,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"9493:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9493:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1043,"nodeType":"EmitStatement","src":"9488:42:5"},{"expression":{"arguments":[{"id":1045,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"9561:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9578:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9570:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"9570:7:5","typeDescriptions":{}}},"id":1049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9570:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1050,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"9582:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1044,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"9541:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9541:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1052,"nodeType":"ExpressionStatement","src":"9541:48:5"}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"8706:309:5","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":1054,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9029:5:5","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"account","nameLocation":"9043:7:5","nodeType":"VariableDeclaration","scope":1054,"src":"9035:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"9035:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"amount","nameLocation":"9060:6:5","nodeType":"VariableDeclaration","scope":1054,"src":"9052:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"9052:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9034:33:5"},"returnParameters":{"id":989,"nodeType":"ParameterList","parameters":[],"src":"9085:0:5"},"scope":1122,"src":"9020:576:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1098,"nodeType":"Block","src":"10132:257:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1065,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"10150:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10159:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"10159:7:5","typeDescriptions":{}}},"id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10159:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10150:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10171:38:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1064,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10142:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10142:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1073,"nodeType":"ExpressionStatement","src":"10142:68:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1075,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"10228:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10247:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10239:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"10239:7:5","typeDescriptions":{}}},"id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10239:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10228:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10251:36:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":1074,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10220:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10220:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1083,"nodeType":"ExpressionStatement","src":"10220:68:5"},{"expression":{"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1084,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"10299:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1087,"indexExpression":{"id":1085,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"10311:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10299:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1088,"indexExpression":{"id":1086,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"10318:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10299:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1089,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"10329:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10299:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1091,"nodeType":"ExpressionStatement","src":"10299:36:5"},{"eventCall":{"arguments":[{"id":1093,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"10359:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1094,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"10366:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1095,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"10375:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1092,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"10350:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10350:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1097,"nodeType":"EmitStatement","src":"10345:37:5"}]},"documentation":{"id":1055,"nodeType":"StructuredDocumentation","src":"9602:412:5","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1099,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10028:8:5","nodeType":"FunctionDefinition","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"owner","nameLocation":"10054:5:5","nodeType":"VariableDeclaration","scope":1099,"src":"10046:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"10046:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"spender","nameLocation":"10077:7:5","nodeType":"VariableDeclaration","scope":1099,"src":"10069:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1058,"name":"address","nodeType":"ElementaryTypeName","src":"10069:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"amount","nameLocation":"10102:6:5","nodeType":"VariableDeclaration","scope":1099,"src":"10094:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1060,"name":"uint256","nodeType":"ElementaryTypeName","src":"10094:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10036:78:5"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[],"src":"10132:0:5"},"scope":1122,"src":"10019:370:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1109,"nodeType":"Block","src":"11092:2:5","statements":[]},"documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"10395:573:5","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1110,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"10982:20:5","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"from","nameLocation":"11020:4:5","nodeType":"VariableDeclaration","scope":1110,"src":"11012:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"11012:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"to","nameLocation":"11042:2:5","nodeType":"VariableDeclaration","scope":1110,"src":"11034:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"11034:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"amount","nameLocation":"11062:6:5","nodeType":"VariableDeclaration","scope":1110,"src":"11054:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"11054:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11002:72:5"},"returnParameters":{"id":1108,"nodeType":"ParameterList","parameters":[],"src":"11092:0:5"},"scope":1122,"src":"10973:121:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1120,"nodeType":"Block","src":"11800:2:5","statements":[]},"documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"11100:577:5","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1121,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"11691:19:5","nodeType":"FunctionDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"from","nameLocation":"11728:4:5","nodeType":"VariableDeclaration","scope":1121,"src":"11720:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"11720:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"to","nameLocation":"11750:2:5","nodeType":"VariableDeclaration","scope":1121,"src":"11742:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"11742:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"amount","nameLocation":"11770:6:5","nodeType":"VariableDeclaration","scope":1121,"src":"11762:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1116,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11710:72:5"},"returnParameters":{"id":1119,"nodeType":"ParameterList","parameters":[],"src":"11800:0:5"},"scope":1122,"src":"11682:120:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1123,"src":"1388:10416:5","usedErrors":[]}],"src":"90:11715:5"},"id":5},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1200]},"id":1201,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1124,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"91:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1125,"nodeType":"StructuredDocumentation","src":"116:70:6","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1200,"linearizedBaseContracts":[1200],"name":"IERC20","nameLocation":"197:6:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"210:66:6","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1131,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"290:11:6","nodeType":"FunctionDefinition","parameters":{"id":1127,"nodeType":"ParameterList","parameters":[],"src":"301:2:6"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1131,"src":"327:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1128,"name":"uint256","nodeType":"ElementaryTypeName","src":"327:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"326:9:6"},"scope":1200,"src":"281:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1132,"nodeType":"StructuredDocumentation","src":"342:72:6","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1139,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"428:9:6","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"account","nameLocation":"446:7:6","nodeType":"VariableDeclaration","scope":1139,"src":"438:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"438:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"437:17:6"},"returnParameters":{"id":1138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1139,"src":"478:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"478:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"477:9:6"},"scope":1200,"src":"419:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1140,"nodeType":"StructuredDocumentation","src":"493:209:6","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1149,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"716:8:6","nodeType":"FunctionDefinition","parameters":{"id":1145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"recipient","nameLocation":"733:9:6","nodeType":"VariableDeclaration","scope":1149,"src":"725:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1141,"name":"address","nodeType":"ElementaryTypeName","src":"725:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"amount","nameLocation":"752:6:6","nodeType":"VariableDeclaration","scope":1149,"src":"744:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1143,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"724:35:6"},"returnParameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1149,"src":"778:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1146,"name":"bool","nodeType":"ElementaryTypeName","src":"778:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"777:6:6"},"scope":1200,"src":"707:77:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"790:264:6","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1159,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1068:9:6","nodeType":"FunctionDefinition","parameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"owner","nameLocation":"1086:5:6","nodeType":"VariableDeclaration","scope":1159,"src":"1078:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"1078:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"spender","nameLocation":"1101:7:6","nodeType":"VariableDeclaration","scope":1159,"src":"1093:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"1093:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1077:32:6"},"returnParameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1159,"src":"1133:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1133:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1132:9:6"},"scope":1200,"src":"1059:83:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"1148:642:6","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1169,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1804:7:6","nodeType":"FunctionDefinition","parameters":{"id":1165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"spender","nameLocation":"1820:7:6","nodeType":"VariableDeclaration","scope":1169,"src":"1812:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"1812:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1164,"mutability":"mutable","name":"amount","nameLocation":"1837:6:6","nodeType":"VariableDeclaration","scope":1169,"src":"1829:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1163,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1811:33:6"},"returnParameters":{"id":1168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1169,"src":"1863:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1166,"name":"bool","nodeType":"ElementaryTypeName","src":"1863:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1862:6:6"},"scope":1200,"src":"1795:74:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1170,"nodeType":"StructuredDocumentation","src":"1875:296:6","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1181,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2185:12:6","nodeType":"FunctionDefinition","parameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"sender","nameLocation":"2215:6:6","nodeType":"VariableDeclaration","scope":1181,"src":"2207:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"2207:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"recipient","nameLocation":"2239:9:6","nodeType":"VariableDeclaration","scope":1181,"src":"2231:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1173,"name":"address","nodeType":"ElementaryTypeName","src":"2231:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"amount","nameLocation":"2266:6:6","nodeType":"VariableDeclaration","scope":1181,"src":"2258:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1175,"name":"uint256","nodeType":"ElementaryTypeName","src":"2258:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2197:81:6"},"returnParameters":{"id":1180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1181,"src":"2297:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1178,"name":"bool","nodeType":"ElementaryTypeName","src":"2297:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2296:6:6"},"scope":1200,"src":"2176:127:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":1182,"nodeType":"StructuredDocumentation","src":"2309:158:6","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":1190,"name":"Transfer","nameLocation":"2478:8:6","nodeType":"EventDefinition","parameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1184,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2503:4:6","nodeType":"VariableDeclaration","scope":1190,"src":"2487:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1183,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1186,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2525:2:6","nodeType":"VariableDeclaration","scope":1190,"src":"2509:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"2509:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1188,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2537:5:6","nodeType":"VariableDeclaration","scope":1190,"src":"2529:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1187,"name":"uint256","nodeType":"ElementaryTypeName","src":"2529:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2486:57:6"},"src":"2472:72:6"},{"anonymous":false,"documentation":{"id":1191,"nodeType":"StructuredDocumentation","src":"2550:148:6","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":1199,"name":"Approval","nameLocation":"2709:8:6","nodeType":"EventDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2734:5:6","nodeType":"VariableDeclaration","scope":1199,"src":"2718:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1195,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"2757:7:6","nodeType":"VariableDeclaration","scope":1199,"src":"2741:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1194,"name":"address","nodeType":"ElementaryTypeName","src":"2741:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1197,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2774:5:6","nodeType":"VariableDeclaration","scope":1199,"src":"2766:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"2766:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2717:63:6"},"src":"2703:78:6"}],"scope":1201,"src":"187:2596:6","usedErrors":[]}],"src":"91:2693:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1200],"IERC20Metadata":[1225]},"id":1226,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1202,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1203,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1226,"sourceUnit":1201,"src":"135:23:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1205,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1200,"src":"305:6:7"},"id":1206,"nodeType":"InheritanceSpecifier","src":"305:6:7"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1204,"nodeType":"StructuredDocumentation","src":"160:116:7","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1225,"linearizedBaseContracts":[1225,1200],"name":"IERC20Metadata","nameLocation":"287:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"318:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1212,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:7","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[],"src":"390:2:7"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1212,"src":"416:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1209,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:7"},"scope":1225,"src":"377:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1213,"nodeType":"StructuredDocumentation","src":"437:56:7","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1218,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:7","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[],"src":"513:2:7"},"returnParameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1218,"src":"539:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1215,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:7"},"scope":1225,"src":"498:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1219,"nodeType":"StructuredDocumentation","src":"560:65:7","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1224,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:7","nodeType":"FunctionDefinition","parameters":{"id":1220,"nodeType":"ParameterList","parameters":[],"src":"647:2:7"},"returnParameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1224,"src":"673:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1221,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:7"},"scope":1225,"src":"630:50:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1226,"src":"277:405:7","usedErrors":[]}],"src":"110:573:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1247]},"id":1248,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1227,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1228,"nodeType":"StructuredDocumentation","src":"111:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1247,"linearizedBaseContracts":[1247],"name":"Context","nameLocation":"626:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1236,"nodeType":"Block","src":"702:34:8","statements":[{"expression":{"expression":{"id":1233,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1232,"id":1235,"nodeType":"Return","src":"712:17:8"}]},"id":1237,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:8","nodeType":"FunctionDefinition","parameters":{"id":1229,"nodeType":"ParameterList","parameters":[],"src":"659:2:8"},"returnParameters":{"id":1232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1237,"src":"693:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:8"},"scope":1247,"src":"640:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1245,"nodeType":"Block","src":"809:32:8","statements":[{"expression":{"expression":{"id":1242,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1241,"id":1244,"nodeType":"Return","src":"819:15:8"}]},"id":1246,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:8","nodeType":"FunctionDefinition","parameters":{"id":1238,"nodeType":"ParameterList","parameters":[],"src":"759:2:8"},"returnParameters":{"id":1241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1246,"src":"793:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1239,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:8"},"scope":1247,"src":"742:99:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1248,"src":"608:235:8","usedErrors":[]}],"src":"86:758:8"},"id":8},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[1640]},"id":1641,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1249,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"92:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":1250,"nodeType":"StructuredDocumentation","src":"117:709:9","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":1640,"linearizedBaseContracts":[1640],"name":"SafeCast","nameLocation":"835:8:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1274,"nodeType":"Block","src":"1201:126:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"1219:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1233:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1261,"name":"uint224","nodeType":"ElementaryTypeName","src":"1233:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":1260,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1228:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1228:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1228:17:9","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"1219:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1247:41:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":1258,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1211:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1211:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1268,"nodeType":"ExpressionStatement","src":"1211:78:9"},{"expression":{"arguments":[{"id":1271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"1314:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1306:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1269,"name":"uint224","nodeType":"ElementaryTypeName","src":"1306:7:9","typeDescriptions":{}}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1306:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1257,"id":1273,"nodeType":"Return","src":"1299:21:9"}]},"documentation":{"id":1251,"nodeType":"StructuredDocumentation","src":"850:280:9","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":1275,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"1144:9:9","nodeType":"FunctionDefinition","parameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"value","nameLocation":"1162:5:9","nodeType":"VariableDeclaration","scope":1275,"src":"1154:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"1154:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1153:15:9"},"returnParameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1275,"src":"1192:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1255,"name":"uint224","nodeType":"ElementaryTypeName","src":"1192:7:9","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1191:9:9"},"scope":1640,"src":"1135:192:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1299,"nodeType":"Block","src":"1684:126:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"1702:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1716:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":1286,"name":"uint128","nodeType":"ElementaryTypeName","src":"1716:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":1285,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1711:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1711:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1711:17:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"1702:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1730:41:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":1283,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1694:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1694:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1293,"nodeType":"ExpressionStatement","src":"1694:78:9"},{"expression":{"arguments":[{"id":1296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"1797:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1789:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":1294,"name":"uint128","nodeType":"ElementaryTypeName","src":"1789:7:9","typeDescriptions":{}}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1789:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":1282,"id":1298,"nodeType":"Return","src":"1782:21:9"}]},"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"1333:280:9","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":1300,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"1627:9:9","nodeType":"FunctionDefinition","parameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"value","nameLocation":"1645:5:9","nodeType":"VariableDeclaration","scope":1300,"src":"1637:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1277,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1636:15:9"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1300,"src":"1675:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1280,"name":"uint128","nodeType":"ElementaryTypeName","src":"1675:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1674:9:9"},"scope":1640,"src":"1618:192:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1324,"nodeType":"Block","src":"2161:123:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"2179:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2193:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1311,"name":"uint96","nodeType":"ElementaryTypeName","src":"2193:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":1310,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2188:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2188:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":1314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2188:16:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2179:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":1316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2206:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":1308,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2171:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2171:76:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1318,"nodeType":"ExpressionStatement","src":"2171:76:9"},{"expression":{"arguments":[{"id":1321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"2271:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2264:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1319,"name":"uint96","nodeType":"ElementaryTypeName","src":"2264:6:9","typeDescriptions":{}}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2264:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":1307,"id":1323,"nodeType":"Return","src":"2257:20:9"}]},"documentation":{"id":1301,"nodeType":"StructuredDocumentation","src":"1816:276:9","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":1325,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"2106:8:9","nodeType":"FunctionDefinition","parameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"value","nameLocation":"2123:5:9","nodeType":"VariableDeclaration","scope":1325,"src":"2115:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"2115:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:15:9"},"returnParameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1325,"src":"2153:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1305,"name":"uint96","nodeType":"ElementaryTypeName","src":"2153:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"2152:8:9"},"scope":1640,"src":"2097:187:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1349,"nodeType":"Block","src":"2635:123:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"2653:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2667:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1336,"name":"uint64","nodeType":"ElementaryTypeName","src":"2667:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":1335,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2662:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2662:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2662:16:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2653:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2680:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":1333,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2645:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2645:76:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1343,"nodeType":"ExpressionStatement","src":"2645:76:9"},{"expression":{"arguments":[{"id":1346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"2745:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1344,"name":"uint64","nodeType":"ElementaryTypeName","src":"2738:6:9","typeDescriptions":{}}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2738:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":1332,"id":1348,"nodeType":"Return","src":"2731:20:9"}]},"documentation":{"id":1326,"nodeType":"StructuredDocumentation","src":"2290:276:9","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":1350,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"2580:8:9","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"value","nameLocation":"2597:5:9","nodeType":"VariableDeclaration","scope":1350,"src":"2589:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1327,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:15:9"},"returnParameters":{"id":1332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1350,"src":"2627:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1330,"name":"uint64","nodeType":"ElementaryTypeName","src":"2627:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2626:8:9"},"scope":1640,"src":"2571:187:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1374,"nodeType":"Block","src":"3109:123:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"3127:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3141:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":1361,"name":"uint32","nodeType":"ElementaryTypeName","src":"3141:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":1360,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3136:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3136:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3136:16:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3127:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3154:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":1358,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3119:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3119:76:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1368,"nodeType":"ExpressionStatement","src":"3119:76:9"},{"expression":{"arguments":[{"id":1371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"3219:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":1369,"name":"uint32","nodeType":"ElementaryTypeName","src":"3212:6:9","typeDescriptions":{}}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3212:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1357,"id":1373,"nodeType":"Return","src":"3205:20:9"}]},"documentation":{"id":1351,"nodeType":"StructuredDocumentation","src":"2764:276:9","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":1375,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"3054:8:9","nodeType":"FunctionDefinition","parameters":{"id":1354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1353,"mutability":"mutable","name":"value","nameLocation":"3071:5:9","nodeType":"VariableDeclaration","scope":1375,"src":"3063:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1352,"name":"uint256","nodeType":"ElementaryTypeName","src":"3063:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3062:15:9"},"returnParameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1375,"src":"3101:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1355,"name":"uint32","nodeType":"ElementaryTypeName","src":"3101:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3100:8:9"},"scope":1640,"src":"3045:187:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1399,"nodeType":"Block","src":"3583:123:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"3601:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3615:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":1386,"name":"uint16","nodeType":"ElementaryTypeName","src":"3615:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":1385,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3610:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3610:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3610:16:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"3601:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3628:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":1383,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3593:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3593:76:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1393,"nodeType":"ExpressionStatement","src":"3593:76:9"},{"expression":{"arguments":[{"id":1396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"3693:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3686:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":1394,"name":"uint16","nodeType":"ElementaryTypeName","src":"3686:6:9","typeDescriptions":{}}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3686:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":1382,"id":1398,"nodeType":"Return","src":"3679:20:9"}]},"documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"3238:276:9","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":1400,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"3528:8:9","nodeType":"FunctionDefinition","parameters":{"id":1379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"value","nameLocation":"3545:5:9","nodeType":"VariableDeclaration","scope":1400,"src":"3537:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3537:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:15:9"},"returnParameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1400,"src":"3575:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1380,"name":"uint16","nodeType":"ElementaryTypeName","src":"3575:6:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3574:8:9"},"scope":1640,"src":"3519:187:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1424,"nodeType":"Block","src":"4052:120:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"4070:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4084:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1411,"name":"uint8","nodeType":"ElementaryTypeName","src":"4084:5:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1410,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4079:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4079:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4079:15:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4070:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4096:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":1408,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4062:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4062:74:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1418,"nodeType":"ExpressionStatement","src":"4062:74:9"},{"expression":{"arguments":[{"id":1421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"4159:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4153:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1419,"name":"uint8","nodeType":"ElementaryTypeName","src":"4153:5:9","typeDescriptions":{}}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4153:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1407,"id":1423,"nodeType":"Return","src":"4146:19:9"}]},"documentation":{"id":1401,"nodeType":"StructuredDocumentation","src":"3712:273:9","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits."},"id":1425,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"3999:7:9","nodeType":"FunctionDefinition","parameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1403,"mutability":"mutable","name":"value","nameLocation":"4015:5:9","nodeType":"VariableDeclaration","scope":1425,"src":"4007:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1402,"name":"uint256","nodeType":"ElementaryTypeName","src":"4007:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4006:15:9"},"returnParameters":{"id":1407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1425,"src":"4045:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1405,"name":"uint8","nodeType":"ElementaryTypeName","src":"4045:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4044:7:9"},"scope":1640,"src":"3990:182:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1445,"nodeType":"Block","src":"4408:103:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"4426:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4435:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4426:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4438:34:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":1433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4418:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4418:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1439,"nodeType":"ExpressionStatement","src":"4418:55:9"},{"expression":{"arguments":[{"id":1442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"4498:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4490:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1440,"name":"uint256","nodeType":"ElementaryTypeName","src":"4490:7:9","typeDescriptions":{}}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4490:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1432,"id":1444,"nodeType":"Return","src":"4483:21:9"}]},"documentation":{"id":1426,"nodeType":"StructuredDocumentation","src":"4178:160:9","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":1446,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"4352:9:9","nodeType":"FunctionDefinition","parameters":{"id":1429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1428,"mutability":"mutable","name":"value","nameLocation":"4369:5:9","nodeType":"VariableDeclaration","scope":1446,"src":"4362:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1427,"name":"int256","nodeType":"ElementaryTypeName","src":"4362:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4361:14:9"},"returnParameters":{"id":1432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1446,"src":"4399:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"4399:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4398:9:9"},"scope":1640,"src":"4343:168:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1478,"nodeType":"Block","src":"4935:153:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"4953:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":1458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4967:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":1457,"name":"int128","nodeType":"ElementaryTypeName","src":"4967:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"}],"id":1456,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4962:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4962:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int128","typeString":"type(int128)"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"4962:16:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"4953:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"4982:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4996:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":1464,"name":"int128","nodeType":"ElementaryTypeName","src":"4996:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"}],"id":1463,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4991:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4991:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int128","typeString":"type(int128)"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4991:16:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"4982:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4953:54:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5009:41:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":1454,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4945:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4945:106:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1472,"nodeType":"ExpressionStatement","src":"4945:106:9"},{"expression":{"arguments":[{"id":1475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"5075:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5068:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":1473,"name":"int128","nodeType":"ElementaryTypeName","src":"5068:6:9","typeDescriptions":{}}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5068:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":1453,"id":1477,"nodeType":"Return","src":"5061:20:9"}]},"documentation":{"id":1447,"nodeType":"StructuredDocumentation","src":"4517:350:9","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":1479,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"4881:8:9","nodeType":"FunctionDefinition","parameters":{"id":1450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"value","nameLocation":"4897:5:9","nodeType":"VariableDeclaration","scope":1479,"src":"4890:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1448,"name":"int256","nodeType":"ElementaryTypeName","src":"4890:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4889:14:9"},"returnParameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1479,"src":"4927:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1451,"name":"int128","nodeType":"ElementaryTypeName","src":"4927:6:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"4926:8:9"},"scope":1640,"src":"4872:216:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1511,"nodeType":"Block","src":"5505:149:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"5523:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":1491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5537:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":1490,"name":"int64","nodeType":"ElementaryTypeName","src":"5537:5:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"}],"id":1489,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5532:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5532:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int64","typeString":"type(int64)"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"5532:15:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"5523:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"5551:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5565:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":1497,"name":"int64","nodeType":"ElementaryTypeName","src":"5565:5:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"}],"id":1496,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5560:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5560:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int64","typeString":"type(int64)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5560:15:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"5551:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5523:52:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5577:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":1487,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5515:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5515:103:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1505,"nodeType":"ExpressionStatement","src":"5515:103:9"},{"expression":{"arguments":[{"id":1508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"5641:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5635:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":1506,"name":"int64","nodeType":"ElementaryTypeName","src":"5635:5:9","typeDescriptions":{}}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5635:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"functionReturnParameters":1486,"id":1510,"nodeType":"Return","src":"5628:19:9"}]},"documentation":{"id":1480,"nodeType":"StructuredDocumentation","src":"5094:345:9","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":1512,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"5453:7:9","nodeType":"FunctionDefinition","parameters":{"id":1483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"value","nameLocation":"5468:5:9","nodeType":"VariableDeclaration","scope":1512,"src":"5461:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1481,"name":"int256","nodeType":"ElementaryTypeName","src":"5461:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"5460:14:9"},"returnParameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1512,"src":"5498:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":1484,"name":"int64","nodeType":"ElementaryTypeName","src":"5498:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"5497:7:9"},"scope":1640,"src":"5444:210:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1544,"nodeType":"Block","src":"6071:149:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"6089:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":1524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6103:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":1523,"name":"int32","nodeType":"ElementaryTypeName","src":"6103:5:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"id":1522,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6098:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6098:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int32","typeString":"type(int32)"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"6098:15:9","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"6089:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"6117:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6131:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":1530,"name":"int32","nodeType":"ElementaryTypeName","src":"6131:5:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"id":1529,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6126:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6126:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int32","typeString":"type(int32)"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6126:15:9","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"6117:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6089:52:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6143:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":1520,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6081:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6081:103:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1538,"nodeType":"ExpressionStatement","src":"6081:103:9"},{"expression":{"arguments":[{"id":1541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"6207:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6201:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":1539,"name":"int32","nodeType":"ElementaryTypeName","src":"6201:5:9","typeDescriptions":{}}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6201:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"functionReturnParameters":1519,"id":1543,"nodeType":"Return","src":"6194:19:9"}]},"documentation":{"id":1513,"nodeType":"StructuredDocumentation","src":"5660:345:9","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":1545,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"6019:7:9","nodeType":"FunctionDefinition","parameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1515,"mutability":"mutable","name":"value","nameLocation":"6034:5:9","nodeType":"VariableDeclaration","scope":1545,"src":"6027:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1514,"name":"int256","nodeType":"ElementaryTypeName","src":"6027:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"6026:14:9"},"returnParameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1545,"src":"6064:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1517,"name":"int32","nodeType":"ElementaryTypeName","src":"6064:5:9","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"6063:7:9"},"scope":1640,"src":"6010:210:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1577,"nodeType":"Block","src":"6637:149:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"6655:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":1557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6669:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":1556,"name":"int16","nodeType":"ElementaryTypeName","src":"6669:5:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"}],"id":1555,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6664:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6664:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int16","typeString":"type(int16)"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"6664:15:9","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"6655:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"6683:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6697:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":1563,"name":"int16","nodeType":"ElementaryTypeName","src":"6697:5:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"}],"id":1562,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6692:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6692:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int16","typeString":"type(int16)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6692:15:9","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"6683:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6655:52:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6709:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":1553,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6647:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6647:103:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1571,"nodeType":"ExpressionStatement","src":"6647:103:9"},{"expression":{"arguments":[{"id":1574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"6773:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6767:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":1572,"name":"int16","nodeType":"ElementaryTypeName","src":"6767:5:9","typeDescriptions":{}}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6767:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"functionReturnParameters":1552,"id":1576,"nodeType":"Return","src":"6760:19:9"}]},"documentation":{"id":1546,"nodeType":"StructuredDocumentation","src":"6226:345:9","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":1578,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"6585:7:9","nodeType":"FunctionDefinition","parameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"value","nameLocation":"6600:5:9","nodeType":"VariableDeclaration","scope":1578,"src":"6593:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1547,"name":"int256","nodeType":"ElementaryTypeName","src":"6593:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"6592:14:9"},"returnParameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1578,"src":"6630:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":1550,"name":"int16","nodeType":"ElementaryTypeName","src":"6630:5:9","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"6629:7:9"},"scope":1640,"src":"6576:210:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1610,"nodeType":"Block","src":"7197:145:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"7215:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":1590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7229:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":1589,"name":"int8","nodeType":"ElementaryTypeName","src":"7229:4:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"}],"id":1588,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7224:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7224:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int8","typeString":"type(int8)"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"7224:14:9","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"7215:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"7242:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7256:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":1596,"name":"int8","nodeType":"ElementaryTypeName","src":"7256:4:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"}],"id":1595,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7251:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7251:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int8","typeString":"type(int8)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7251:14:9","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"7242:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7215:50:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7267:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":1586,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7207:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7207:100:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1604,"nodeType":"ExpressionStatement","src":"7207:100:9"},{"expression":{"arguments":[{"id":1607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"7329:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7324:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":1605,"name":"int8","nodeType":"ElementaryTypeName","src":"7324:4:9","typeDescriptions":{}}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7324:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"functionReturnParameters":1585,"id":1609,"nodeType":"Return","src":"7317:18:9"}]},"documentation":{"id":1579,"nodeType":"StructuredDocumentation","src":"6792:341:9","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits.\n _Available since v3.1._"},"id":1611,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"7147:6:9","nodeType":"FunctionDefinition","parameters":{"id":1582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"value","nameLocation":"7161:5:9","nodeType":"VariableDeclaration","scope":1611,"src":"7154:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1580,"name":"int256","nodeType":"ElementaryTypeName","src":"7154:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7153:14:9"},"returnParameters":{"id":1585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1611,"src":"7191:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":1583,"name":"int8","nodeType":"ElementaryTypeName","src":"7191:4:9","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"7190:6:9"},"scope":1640,"src":"7138:204:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1638,"nodeType":"Block","src":"7582:233:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"7699:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":1625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7721:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1624,"name":"int256","nodeType":"ElementaryTypeName","src":"7721:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":1623,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7716:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7716:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7716:16:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7708:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"7708:7:9","typeDescriptions":{}}},"id":1628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7708:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7699:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7735:42:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":1619,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7691:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7691:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1632,"nodeType":"ExpressionStatement","src":"7691:87:9"},{"expression":{"arguments":[{"id":1635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"7802:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7795:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1633,"name":"int256","nodeType":"ElementaryTypeName","src":"7795:6:9","typeDescriptions":{}}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7795:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1618,"id":1637,"nodeType":"Return","src":"7788:20:9"}]},"documentation":{"id":1612,"nodeType":"StructuredDocumentation","src":"7348:165:9","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":1639,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"7527:8:9","nodeType":"FunctionDefinition","parameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"value","nameLocation":"7544:5:9","nodeType":"VariableDeclaration","scope":1639,"src":"7536:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1613,"name":"uint256","nodeType":"ElementaryTypeName","src":"7536:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7535:15:9"},"returnParameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1639,"src":"7574:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1616,"name":"int256","nodeType":"ElementaryTypeName","src":"7574:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7573:8:9"},"scope":1640,"src":"7518:297:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1641,"src":"827:6990:9","usedErrors":[]}],"src":"92:7726:9"},"id":9},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[1952]},"id":1953,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1642,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"92:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1643,"nodeType":"StructuredDocumentation","src":"270:196:10","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":1952,"linearizedBaseContracts":[1952],"name":"SafeMath","nameLocation":"475:8:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1674,"nodeType":"Block","src":"702:140:10","statements":[{"id":1673,"nodeType":"UncheckedBlock","src":"712:124:10","statements":[{"assignments":[1656],"declarations":[{"constant":false,"id":1656,"mutability":"mutable","name":"c","nameLocation":"744:1:10","nodeType":"VariableDeclaration","scope":1673,"src":"736:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1655,"name":"uint256","nodeType":"ElementaryTypeName","src":"736:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1660,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1657,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"748:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1658,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"752:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"748:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"736:17:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1661,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"771:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1662,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"775:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"771:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1668,"nodeType":"IfStatement","src":"767:28:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"786:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"793:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1666,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"785:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1654,"id":1667,"nodeType":"Return","src":"778:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"817:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1670,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"823:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1671,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"816:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1654,"id":1672,"nodeType":"Return","src":"809:16:10"}]}]},"documentation":{"id":1644,"nodeType":"StructuredDocumentation","src":"490:131:10","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1675,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"635:6:10","nodeType":"FunctionDefinition","parameters":{"id":1649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"mutability":"mutable","name":"a","nameLocation":"650:1:10","nodeType":"VariableDeclaration","scope":1675,"src":"642:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1645,"name":"uint256","nodeType":"ElementaryTypeName","src":"642:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1648,"mutability":"mutable","name":"b","nameLocation":"661:1:10","nodeType":"VariableDeclaration","scope":1675,"src":"653:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"653:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"641:22:10"},"returnParameters":{"id":1654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1675,"src":"687:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1650,"name":"bool","nodeType":"ElementaryTypeName","src":"687:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1675,"src":"693:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1652,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"686:15:10"},"scope":1952,"src":"626:216:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1702,"nodeType":"Block","src":"1064:113:10","statements":[{"id":1701,"nodeType":"UncheckedBlock","src":"1074:97:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1687,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"1102:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1688,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"1106:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1102:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1694,"nodeType":"IfStatement","src":"1098:28:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1117:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1124:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1692,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1116:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1686,"id":1693,"nodeType":"Return","src":"1109:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1148:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1696,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"1154:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1697,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"1158:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1154:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1699,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1147:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1686,"id":1700,"nodeType":"Return","src":"1140:20:10"}]}]},"documentation":{"id":1676,"nodeType":"StructuredDocumentation","src":"848:135:10","text":" @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1703,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"997:6:10","nodeType":"FunctionDefinition","parameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"mutability":"mutable","name":"a","nameLocation":"1012:1:10","nodeType":"VariableDeclaration","scope":1703,"src":"1004:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1677,"name":"uint256","nodeType":"ElementaryTypeName","src":"1004:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1680,"mutability":"mutable","name":"b","nameLocation":"1023:1:10","nodeType":"VariableDeclaration","scope":1703,"src":"1015:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1015:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1003:22:10"},"returnParameters":{"id":1686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1703,"src":"1049:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1682,"name":"bool","nodeType":"ElementaryTypeName","src":"1049:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1703,"src":"1055:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1684,"name":"uint256","nodeType":"ElementaryTypeName","src":"1055:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1048:15:10"},"scope":1952,"src":"988:189:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1744,"nodeType":"Block","src":"1401:417:10","statements":[{"id":1743,"nodeType":"UncheckedBlock","src":"1411:401:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1715,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"1669:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1674:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1669:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1722,"nodeType":"IfStatement","src":"1665:28:10","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1685:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":1719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1691:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1720,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1714,"id":1721,"nodeType":"Return","src":"1677:16:10"}},{"assignments":[1724],"declarations":[{"constant":false,"id":1724,"mutability":"mutable","name":"c","nameLocation":"1715:1:10","nodeType":"VariableDeclaration","scope":1743,"src":"1707:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1723,"name":"uint256","nodeType":"ElementaryTypeName","src":"1707:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1728,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1725,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"1719:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1726,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"1723:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1719:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1707:17:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1729,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"1742:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1730,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"1746:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1742:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1732,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"1751:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1742:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1738,"nodeType":"IfStatement","src":"1738:33:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1762:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1769:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1736,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1761:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1714,"id":1737,"nodeType":"Return","src":"1754:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1793:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1740,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"1799:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1792:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1714,"id":1742,"nodeType":"Return","src":"1785:16:10"}]}]},"documentation":{"id":1704,"nodeType":"StructuredDocumentation","src":"1183:137:10","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1745,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1334:6:10","nodeType":"FunctionDefinition","parameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1706,"mutability":"mutable","name":"a","nameLocation":"1349:1:10","nodeType":"VariableDeclaration","scope":1745,"src":"1341:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"1341:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1708,"mutability":"mutable","name":"b","nameLocation":"1360:1:10","nodeType":"VariableDeclaration","scope":1745,"src":"1352:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1707,"name":"uint256","nodeType":"ElementaryTypeName","src":"1352:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1340:22:10"},"returnParameters":{"id":1714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1745,"src":"1386:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1710,"name":"bool","nodeType":"ElementaryTypeName","src":"1386:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1745,"src":"1392:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1712,"name":"uint256","nodeType":"ElementaryTypeName","src":"1392:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1385:15:10"},"scope":1952,"src":"1325:493:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1772,"nodeType":"Block","src":"2043:114:10","statements":[{"id":1771,"nodeType":"UncheckedBlock","src":"2053:98:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1757,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"2081:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2086:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2081:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1764,"nodeType":"IfStatement","src":"2077:29:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2097:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2104:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1762,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2096:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1756,"id":1763,"nodeType":"Return","src":"2089:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2128:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1766,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2134:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1767,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"2138:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2134:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1769,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2127:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1756,"id":1770,"nodeType":"Return","src":"2120:20:10"}]}]},"documentation":{"id":1746,"nodeType":"StructuredDocumentation","src":"1824:138:10","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":1773,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1976:6:10","nodeType":"FunctionDefinition","parameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1748,"mutability":"mutable","name":"a","nameLocation":"1991:1:10","nodeType":"VariableDeclaration","scope":1773,"src":"1983:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1747,"name":"uint256","nodeType":"ElementaryTypeName","src":"1983:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1750,"mutability":"mutable","name":"b","nameLocation":"2002:1:10","nodeType":"VariableDeclaration","scope":1773,"src":"1994:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1982:22:10"},"returnParameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1773,"src":"2028:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1752,"name":"bool","nodeType":"ElementaryTypeName","src":"2028:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1773,"src":"2034:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2027:15:10"},"scope":1952,"src":"1967:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1800,"nodeType":"Block","src":"2392:114:10","statements":[{"id":1799,"nodeType":"UncheckedBlock","src":"2402:98:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1785,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"2430:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2435:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2430:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1792,"nodeType":"IfStatement","src":"2426:29:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2446:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2453:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2445:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1784,"id":1791,"nodeType":"Return","src":"2438:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2477:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1794,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"2483:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1795,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"2487:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2483:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2476:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1784,"id":1798,"nodeType":"Return","src":"2469:20:10"}]}]},"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"2163:148:10","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":1801,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2325:6:10","nodeType":"FunctionDefinition","parameters":{"id":1779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"a","nameLocation":"2340:1:10","nodeType":"VariableDeclaration","scope":1801,"src":"2332:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"2332:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1778,"mutability":"mutable","name":"b","nameLocation":"2351:1:10","nodeType":"VariableDeclaration","scope":1801,"src":"2343:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1777,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2331:22:10"},"returnParameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1801,"src":"2377:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1780,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1801,"src":"2383:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"2383:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2376:15:10"},"scope":1952,"src":"2316:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1815,"nodeType":"Block","src":"2808:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1811,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"2825:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1812,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"2829:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2825:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1810,"id":1814,"nodeType":"Return","src":"2818:12:10"}]},"documentation":{"id":1802,"nodeType":"StructuredDocumentation","src":"2512:224:10","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":1816,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2750:3:10","nodeType":"FunctionDefinition","parameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"a","nameLocation":"2762:1:10","nodeType":"VariableDeclaration","scope":1816,"src":"2754:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1803,"name":"uint256","nodeType":"ElementaryTypeName","src":"2754:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1806,"mutability":"mutable","name":"b","nameLocation":"2773:1:10","nodeType":"VariableDeclaration","scope":1816,"src":"2765:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"2765:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2753:22:10"},"returnParameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1816,"src":"2799:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1808,"name":"uint256","nodeType":"ElementaryTypeName","src":"2799:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2798:9:10"},"scope":1952,"src":"2741:96:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1830,"nodeType":"Block","src":"3175:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1826,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"3192:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1827,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"3196:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3192:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1825,"id":1829,"nodeType":"Return","src":"3185:12:10"}]},"documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"2843:260:10","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1831,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3117:3:10","nodeType":"FunctionDefinition","parameters":{"id":1822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"a","nameLocation":"3129:1:10","nodeType":"VariableDeclaration","scope":1831,"src":"3121:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1818,"name":"uint256","nodeType":"ElementaryTypeName","src":"3121:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1821,"mutability":"mutable","name":"b","nameLocation":"3140:1:10","nodeType":"VariableDeclaration","scope":1831,"src":"3132:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1820,"name":"uint256","nodeType":"ElementaryTypeName","src":"3132:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3120:22:10"},"returnParameters":{"id":1825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1831,"src":"3166:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1823,"name":"uint256","nodeType":"ElementaryTypeName","src":"3166:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3165:9:10"},"scope":1952,"src":"3108:96:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1845,"nodeType":"Block","src":"3518:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1841,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"3535:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1842,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3539:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3535:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1840,"id":1844,"nodeType":"Return","src":"3528:12:10"}]},"documentation":{"id":1832,"nodeType":"StructuredDocumentation","src":"3210:236:10","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":1846,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3460:3:10","nodeType":"FunctionDefinition","parameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"a","nameLocation":"3472:1:10","nodeType":"VariableDeclaration","scope":1846,"src":"3464:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1833,"name":"uint256","nodeType":"ElementaryTypeName","src":"3464:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"b","nameLocation":"3483:1:10","nodeType":"VariableDeclaration","scope":1846,"src":"3475:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3463:22:10"},"returnParameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1846,"src":"3509:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1838,"name":"uint256","nodeType":"ElementaryTypeName","src":"3509:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3508:9:10"},"scope":1952,"src":"3451:96:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1860,"nodeType":"Block","src":"3903:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1856,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"3920:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1857,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"3924:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3920:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1855,"id":1859,"nodeType":"Return","src":"3913:12:10"}]},"documentation":{"id":1847,"nodeType":"StructuredDocumentation","src":"3553:278:10","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":1861,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3845:3:10","nodeType":"FunctionDefinition","parameters":{"id":1852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1849,"mutability":"mutable","name":"a","nameLocation":"3857:1:10","nodeType":"VariableDeclaration","scope":1861,"src":"3849:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1848,"name":"uint256","nodeType":"ElementaryTypeName","src":"3849:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1851,"mutability":"mutable","name":"b","nameLocation":"3868:1:10","nodeType":"VariableDeclaration","scope":1861,"src":"3860:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1850,"name":"uint256","nodeType":"ElementaryTypeName","src":"3860:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3848:22:10"},"returnParameters":{"id":1855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1861,"src":"3894:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1853,"name":"uint256","nodeType":"ElementaryTypeName","src":"3894:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3893:9:10"},"scope":1952,"src":"3836:96:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1875,"nodeType":"Block","src":"4452:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1871,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"4469:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1872,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"4473:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4469:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1870,"id":1874,"nodeType":"Return","src":"4462:12:10"}]},"documentation":{"id":1862,"nodeType":"StructuredDocumentation","src":"3938:442:10","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1876,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4394:3:10","nodeType":"FunctionDefinition","parameters":{"id":1867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1864,"mutability":"mutable","name":"a","nameLocation":"4406:1:10","nodeType":"VariableDeclaration","scope":1876,"src":"4398:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1863,"name":"uint256","nodeType":"ElementaryTypeName","src":"4398:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1866,"mutability":"mutable","name":"b","nameLocation":"4417:1:10","nodeType":"VariableDeclaration","scope":1876,"src":"4409:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1865,"name":"uint256","nodeType":"ElementaryTypeName","src":"4409:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4397:22:10"},"returnParameters":{"id":1870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1876,"src":"4443:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1868,"name":"uint256","nodeType":"ElementaryTypeName","src":"4443:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4442:9:10"},"scope":1952,"src":"4385:96:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1900,"nodeType":"Block","src":"5070:106:10","statements":[{"id":1899,"nodeType":"UncheckedBlock","src":"5080:90:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1889,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"5112:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1890,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"5117:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5112:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1892,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"5120:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1888,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5104:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5104:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1894,"nodeType":"ExpressionStatement","src":"5104:29:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1895,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"5154:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1896,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"5158:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5154:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1887,"id":1898,"nodeType":"Return","src":"5147:12:10"}]}]},"documentation":{"id":1877,"nodeType":"StructuredDocumentation","src":"4487:453:10","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1901,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4954:3:10","nodeType":"FunctionDefinition","parameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"a","nameLocation":"4975:1:10","nodeType":"VariableDeclaration","scope":1901,"src":"4967:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1878,"name":"uint256","nodeType":"ElementaryTypeName","src":"4967:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1881,"mutability":"mutable","name":"b","nameLocation":"4994:1:10","nodeType":"VariableDeclaration","scope":1901,"src":"4986:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1880,"name":"uint256","nodeType":"ElementaryTypeName","src":"4986:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1883,"mutability":"mutable","name":"errorMessage","nameLocation":"5019:12:10","nodeType":"VariableDeclaration","scope":1901,"src":"5005:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1882,"name":"string","nodeType":"ElementaryTypeName","src":"5005:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4957:80:10"},"returnParameters":{"id":1887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1901,"src":"5061:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1885,"name":"uint256","nodeType":"ElementaryTypeName","src":"5061:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:9:10"},"scope":1952,"src":"4945:231:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1925,"nodeType":"Block","src":"5785:105:10","statements":[{"id":1924,"nodeType":"UncheckedBlock","src":"5795:89:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1914,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"5827:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5831:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5827:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1917,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"5834:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1913,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5819:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5819:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1919,"nodeType":"ExpressionStatement","src":"5819:28:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1920,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"5868:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1921,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"5872:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5868:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1912,"id":1923,"nodeType":"Return","src":"5861:12:10"}]}]},"documentation":{"id":1902,"nodeType":"StructuredDocumentation","src":"5182:473:10","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1926,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5669:3:10","nodeType":"FunctionDefinition","parameters":{"id":1909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"a","nameLocation":"5690:1:10","nodeType":"VariableDeclaration","scope":1926,"src":"5682:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"5682:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"b","nameLocation":"5709:1:10","nodeType":"VariableDeclaration","scope":1926,"src":"5701:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1908,"mutability":"mutable","name":"errorMessage","nameLocation":"5734:12:10","nodeType":"VariableDeclaration","scope":1926,"src":"5720:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1907,"name":"string","nodeType":"ElementaryTypeName","src":"5720:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5672:80:10"},"returnParameters":{"id":1912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1926,"src":"5776:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1910,"name":"uint256","nodeType":"ElementaryTypeName","src":"5776:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5775:9:10"},"scope":1952,"src":"5660:230:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1950,"nodeType":"Block","src":"6661:105:10","statements":[{"id":1949,"nodeType":"UncheckedBlock","src":"6671:89:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1939,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"6703:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6707:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6703:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1942,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"6710:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1938,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6695:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6695:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1944,"nodeType":"ExpressionStatement","src":"6695:28:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1945,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"6744:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1946,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"6748:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6744:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1937,"id":1948,"nodeType":"Return","src":"6737:12:10"}]}]},"documentation":{"id":1927,"nodeType":"StructuredDocumentation","src":"5896:635:10","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1951,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6545:3:10","nodeType":"FunctionDefinition","parameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1929,"mutability":"mutable","name":"a","nameLocation":"6566:1:10","nodeType":"VariableDeclaration","scope":1951,"src":"6558:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1928,"name":"uint256","nodeType":"ElementaryTypeName","src":"6558:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1931,"mutability":"mutable","name":"b","nameLocation":"6585:1:10","nodeType":"VariableDeclaration","scope":1951,"src":"6577:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1930,"name":"uint256","nodeType":"ElementaryTypeName","src":"6577:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1933,"mutability":"mutable","name":"errorMessage","nameLocation":"6610:12:10","nodeType":"VariableDeclaration","scope":1951,"src":"6596:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1932,"name":"string","nodeType":"ElementaryTypeName","src":"6596:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6548:80:10"},"returnParameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1951,"src":"6652:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1935,"name":"uint256","nodeType":"ElementaryTypeName","src":"6652:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6651:9:10"},"scope":1952,"src":"6536:230:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1953,"src":"467:6301:10","usedErrors":[]}],"src":"92:6677:10"},"id":10},"@openzeppelin/contracts/utils/math/SignedSafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedSafeMath.sol","exportedSymbols":{"SignedSafeMath":[2016]},"id":2017,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1954,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"98:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedSafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1955,"nodeType":"StructuredDocumentation","src":"123:192:11","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SignedSafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":2016,"linearizedBaseContracts":[2016],"name":"SignedSafeMath","nameLocation":"324:14:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1969,"nodeType":"Block","src":"648:29:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1965,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"665:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1966,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"669:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"665:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1964,"id":1968,"nodeType":"Return","src":"658:12:11"}]},"documentation":{"id":1956,"nodeType":"StructuredDocumentation","src":"345:234:11","text":" @dev Returns the multiplication of two signed integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":1970,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"593:3:11","nodeType":"FunctionDefinition","parameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"a","nameLocation":"604:1:11","nodeType":"VariableDeclaration","scope":1970,"src":"597:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1957,"name":"int256","nodeType":"ElementaryTypeName","src":"597:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1960,"mutability":"mutable","name":"b","nameLocation":"614:1:11","nodeType":"VariableDeclaration","scope":1970,"src":"607:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1959,"name":"int256","nodeType":"ElementaryTypeName","src":"607:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"596:20:11"},"returnParameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1970,"src":"640:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1962,"name":"int256","nodeType":"ElementaryTypeName","src":"640:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"639:8:11"},"scope":2016,"src":"584:93:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1984,"nodeType":"Block","src":"1026:29:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1980,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"1043:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1981,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"1047:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1043:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1979,"id":1983,"nodeType":"Return","src":"1036:12:11"}]},"documentation":{"id":1971,"nodeType":"StructuredDocumentation","src":"683:274:11","text":" @dev Returns the integer division of two signed integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":1985,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"971:3:11","nodeType":"FunctionDefinition","parameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"a","nameLocation":"982:1:11","nodeType":"VariableDeclaration","scope":1985,"src":"975:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1972,"name":"int256","nodeType":"ElementaryTypeName","src":"975:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1975,"mutability":"mutable","name":"b","nameLocation":"992:1:11","nodeType":"VariableDeclaration","scope":1985,"src":"985:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1974,"name":"int256","nodeType":"ElementaryTypeName","src":"985:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"974:20:11"},"returnParameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1985,"src":"1018:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1977,"name":"int256","nodeType":"ElementaryTypeName","src":"1018:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1017:8:11"},"scope":2016,"src":"962:93:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1999,"nodeType":"Block","src":"1358:29:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1995,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"1375:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1996,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"1379:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1375:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1994,"id":1998,"nodeType":"Return","src":"1368:12:11"}]},"documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"1061:228:11","text":" @dev Returns the subtraction of two signed integers, reverting on\n overflow.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":2000,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"1303:3:11","nodeType":"FunctionDefinition","parameters":{"id":1991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"a","nameLocation":"1314:1:11","nodeType":"VariableDeclaration","scope":2000,"src":"1307:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1987,"name":"int256","nodeType":"ElementaryTypeName","src":"1307:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1990,"mutability":"mutable","name":"b","nameLocation":"1324:1:11","nodeType":"VariableDeclaration","scope":2000,"src":"1317:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1989,"name":"int256","nodeType":"ElementaryTypeName","src":"1317:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1306:20:11"},"returnParameters":{"id":1994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2000,"src":"1350:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1992,"name":"int256","nodeType":"ElementaryTypeName","src":"1350:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1349:8:11"},"scope":2016,"src":"1294:93:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2014,"nodeType":"Block","src":"1684:29:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2010,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"1701:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2011,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"1705:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1701:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2009,"id":2013,"nodeType":"Return","src":"1694:12:11"}]},"documentation":{"id":2001,"nodeType":"StructuredDocumentation","src":"1393:222:11","text":" @dev Returns the addition of two signed integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":2015,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"1629:3:11","nodeType":"FunctionDefinition","parameters":{"id":2006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"a","nameLocation":"1640:1:11","nodeType":"VariableDeclaration","scope":2015,"src":"1633:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2002,"name":"int256","nodeType":"ElementaryTypeName","src":"1633:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2005,"mutability":"mutable","name":"b","nameLocation":"1650:1:11","nodeType":"VariableDeclaration","scope":2015,"src":"1643:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2004,"name":"int256","nodeType":"ElementaryTypeName","src":"1643:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1632:20:11"},"returnParameters":{"id":2009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2015,"src":"1676:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2007,"name":"int256","nodeType":"ElementaryTypeName","src":"1676:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1675:8:11"},"scope":2016,"src":"1620:93:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2017,"src":"316:1399:11","usedErrors":[]}],"src":"98:1618:11"},"id":11},"contracts/DappToken.sol":{"ast":{"absolutePath":"contracts/DappToken.sol","exportedSymbols":{"Context":[1247],"DappToken":[2036],"ERC20":[1122],"IERC20":[1200],"IERC20Metadata":[1225]},"id":2037,"nodeType":"SourceUnit","nodes":[{"id":2018,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"0:23:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":2019,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2037,"sourceUnit":1123,"src":"27:55:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2020,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1122,"src":"108:5:12"},"id":2021,"nodeType":"InheritanceSpecifier","src":"108:5:12"}],"canonicalName":"DappToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2036,"linearizedBaseContracts":[2036,1122,1225,1200,1247],"name":"DappToken","nameLocation":"95:9:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2034,"nodeType":"Block","src":"170:63:12","statements":[{"expression":{"arguments":[{"expression":{"id":2029,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"187:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"187:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31303030303030303030303030303030303030303030303030","id":2031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"199:25:12","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"},"value":"1000000000000000000000000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"}],"id":2028,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"181:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"181:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2033,"nodeType":"ExpressionStatement","src":"181:44:12"}]},"id":2035,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4441707020546f6b656e","id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"148:12:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bb1c77e58fe7915ae82d4848a9c7f3a9bd772743e283b0e9e22385825f37dce","typeString":"literal_string \"DApp Token\""},"value":"DApp Token"},{"hexValue":"44415050","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"162:6:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_2f0440134a0794b969e8c19364bb3c2fbe91c99bfae2a18a4a19e46c2cead377","typeString":"literal_string \"DAPP\""},"value":"DAPP"}],"id":2026,"kind":"baseConstructorSpecifier","modifierName":{"id":2023,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1122,"src":"142:5:12"},"nodeType":"ModifierInvocation","src":"142:27:12"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2022,"nodeType":"ParameterList","parameters":[],"src":"132:2:12"},"returnParameters":{"id":2027,"nodeType":"ParameterList","parameters":[],"src":"170:0:12"},"scope":2036,"src":"121:112:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2037,"src":"86:150:12","usedErrors":[]}],"src":"0:236:12"},"id":12},"contracts/Staking.sol":{"ast":{"absolutePath":"contracts/Staking.sol","exportedSymbols":{"Context":[1247],"DapiReader":[42],"IAirnodeRequester":[471],"IDapiReader":[51],"IDapiServer":[463],"IERC20":[1200],"Ownable":[576],"SafeCast":[1640],"SafeMath":[1952],"SignedSafeMath":[2016],"TokenFarm":[2475]},"id":2476,"nodeType":"SourceUnit","nodes":[{"id":2038,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"2:23:13"},{"absolutePath":"@api3/airnode-protocol-v1/contracts/dapis/DapiReader.sol","file":"@api3/airnode-protocol-v1/contracts/dapis/DapiReader.sol","id":2039,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2476,"sourceUnit":43,"src":"29:66:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2040,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2476,"sourceUnit":1201,"src":"97:56:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2041,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2476,"sourceUnit":577,"src":"155:52:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"@openzeppelin/contracts/utils/math/SafeCast.sol","id":2042,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2476,"sourceUnit":1641,"src":"211:57:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":2043,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2476,"sourceUnit":1953,"src":"270:57:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedSafeMath.sol","file":"@openzeppelin/contracts/utils/math/SignedSafeMath.sol","id":2044,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2476,"sourceUnit":2017,"src":"329:63:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2045,"name":"DapiReader","nodeType":"IdentifierPath","referencedDeclaration":42,"src":"418:10:13"},"id":2046,"nodeType":"InheritanceSpecifier","src":"418:10:13"},{"baseName":{"id":2047,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":576,"src":"430:7:13"},"id":2048,"nodeType":"InheritanceSpecifier","src":"430:7:13"}],"canonicalName":"TokenFarm","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2475,"linearizedBaseContracts":[2475,576,1247,42,51],"name":"TokenFarm","nameLocation":"405:9:13","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"06fdde03","id":2051,"mutability":"mutable","name":"name","nameLocation":"459:4:13","nodeType":"VariableDeclaration","scope":2475,"src":"445:38:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2049,"name":"string","nodeType":"ElementaryTypeName","src":"445:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4461707020546f6b656e204661726d","id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"466:17:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_112892b16fc49edc60aefbde9609f7bfe1cf220ba7ef93ec6845dbc0b0b30cd5","typeString":"literal_string \"Dapp Token Farm\""},"value":"Dapp Token Farm"},"visibility":"public"},{"constant":false,"functionSelector":"5eb186f8","id":2054,"mutability":"mutable","name":"dappToken","nameLocation":"504:9:13","nodeType":"VariableDeclaration","scope":2475,"src":"490:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1200","typeString":"contract IERC20"},"typeName":{"id":2053,"nodeType":"UserDefinedTypeName","pathNode":{"id":2052,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1200,"src":"490:6:13"},"referencedDeclaration":1200,"src":"490:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1200","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"fd5e6dd1","id":2057,"mutability":"mutable","name":"stakers","nameLocation":"539:7:13","nodeType":"VariableDeclaration","scope":2475,"src":"522:24:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":2055,"name":"address","nodeType":"ElementaryTypeName","src":"522:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2056,"nodeType":"ArrayTypeName","src":"522:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"29161a00","id":2063,"mutability":"mutable","name":"stakingBalance","nameLocation":"632:14:13","nodeType":"VariableDeclaration","scope":2475,"src":"577:69:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":2062,"keyType":{"id":2058,"name":"address","nodeType":"ElementaryTypeName","src":"585:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"577:47:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":2061,"keyType":{"id":2059,"name":"address","nodeType":"ElementaryTypeName","src":"604:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"596:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2060,"name":"uint256","nodeType":"ElementaryTypeName","src":"615:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"b83e0234","id":2067,"mutability":"mutable","name":"uniqueTokensStaked","nameLocation":"688:18:13","nodeType":"VariableDeclaration","scope":2475,"src":"653:53:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2066,"keyType":{"id":2064,"name":"address","nodeType":"ElementaryTypeName","src":"661:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"653:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2065,"name":"uint256","nodeType":"ElementaryTypeName","src":"672:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"d4a56d1e","id":2071,"mutability":"mutable","name":"tokenDapiMapping","nameLocation":"748:16:13","nodeType":"VariableDeclaration","scope":2475,"src":"713:51:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"},"typeName":{"id":2070,"keyType":{"id":2068,"name":"address","nodeType":"ElementaryTypeName","src":"721:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"713:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"},"valueType":{"id":2069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"732:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"public"},{"constant":false,"id":2074,"mutability":"mutable","name":"allowedTokens","nameLocation":"781:13:13","nodeType":"VariableDeclaration","scope":2475,"src":"771:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":2072,"name":"address","nodeType":"ElementaryTypeName","src":"771:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2073,"nodeType":"ArrayTypeName","src":"771:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"body":{"id":2090,"nodeType":"Block","src":"893:56:13","statements":[{"expression":{"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2084,"name":"dappToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"904:9:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1200","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2086,"name":"_dappTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"923:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2085,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"916:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1200_$","typeString":"type(contract IERC20)"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"916:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1200","typeString":"contract IERC20"}},"src":"904:37:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1200","typeString":"contract IERC20"}},"id":2089,"nodeType":"ExpressionStatement","src":"904:37:13"}]},"id":2091,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2081,"name":"_dapiServer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"880:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2082,"kind":"baseConstructorSpecifier","modifierName":{"id":2080,"name":"DapiReader","nodeType":"IdentifierPath","referencedDeclaration":42,"src":"869:10:13"},"nodeType":"ModifierInvocation","src":"869:23:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2076,"mutability":"mutable","name":"_dapiServer","nameLocation":"829:11:13","nodeType":"VariableDeclaration","scope":2091,"src":"821:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2075,"name":"address","nodeType":"ElementaryTypeName","src":"821:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2078,"mutability":"mutable","name":"_dappTokenAddress","nameLocation":"850:17:13","nodeType":"VariableDeclaration","scope":2091,"src":"842:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2077,"name":"address","nodeType":"ElementaryTypeName","src":"842:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"820:48:13"},"returnParameters":{"id":2083,"nodeType":"ParameterList","parameters":[],"src":"893:0:13"},"scope":2475,"src":"809:140:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2104,"nodeType":"Block","src":"1015:44:13","statements":[{"expression":{"arguments":[{"id":2101,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"1045:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2098,"name":"allowedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"1026:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"1026:18:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1026:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2103,"nodeType":"ExpressionStatement","src":"1026:25:13"}]},"functionSelector":"171e44ea","id":2105,"implemented":true,"kind":"function","modifiers":[{"id":2096,"kind":"modifierInvocation","modifierName":{"id":2095,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":518,"src":"1005:9:13"},"nodeType":"ModifierInvocation","src":"1005:9:13"}],"name":"addAllowedTokens","nameLocation":"966:16:13","nodeType":"FunctionDefinition","parameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"token","nameLocation":"991:5:13","nodeType":"VariableDeclaration","scope":2105,"src":"983:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2092,"name":"address","nodeType":"ElementaryTypeName","src":"983:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"982:15:13"},"returnParameters":{"id":2097,"nodeType":"ParameterList","parameters":[],"src":"1015:0:13"},"scope":2475,"src":"957:102:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2120,"nodeType":"Block","src":"1161:53:13","statements":[{"expression":{"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2114,"name":"tokenDapiMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"1172:16:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"}},"id":2116,"indexExpression":{"id":2115,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"1189:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1172:23:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2117,"name":"DapiName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"1198:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1172:34:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2119,"nodeType":"ExpressionStatement","src":"1172:34:13"}]},"functionSelector":"6bf233d7","id":2121,"implemented":true,"kind":"function","modifiers":[{"id":2112,"kind":"modifierInvocation","modifierName":{"id":2111,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":518,"src":"1146:9:13"},"nodeType":"ModifierInvocation","src":"1146:9:13"}],"name":"setDapiName","nameLocation":"1076:11:13","nodeType":"FunctionDefinition","parameters":{"id":2110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2107,"mutability":"mutable","name":"token","nameLocation":"1096:5:13","nodeType":"VariableDeclaration","scope":2121,"src":"1088:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2106,"name":"address","nodeType":"ElementaryTypeName","src":"1088:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2109,"mutability":"mutable","name":"DapiName","nameLocation":"1111:8:13","nodeType":"VariableDeclaration","scope":2121,"src":"1103:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1103:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1087:33:13"},"returnParameters":{"id":2113,"nodeType":"ParameterList","parameters":[],"src":"1161:0:13"},"scope":2475,"src":"1067:147:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2190,"nodeType":"Block","src":"1282:529:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2129,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"1343:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1353:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1343:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"616d6f756e742063616e6e6f742062652030","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1356:20:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426","typeString":"literal_string \"amount cannot be 0\""},"value":"amount cannot be 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426","typeString":"literal_string \"amount cannot be 0\""}],"id":2128,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1335:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1335:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2134,"nodeType":"ExpressionStatement","src":"1335:42:13"},{"condition":{"arguments":[{"id":2136,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"1407:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2135,"name":"tokenIsAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"1392:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) returns (bool)"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1392:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2189,"nodeType":"IfStatement","src":"1388:416:13","trueBody":{"id":2188,"nodeType":"Block","src":"1415:389:13","statements":[{"expression":{"arguments":[{"expression":{"id":2139,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1455:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1455:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2141,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"1467:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2138,"name":"updateUniqueTokensStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"1430:24:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1430:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2143,"nodeType":"ExpressionStatement","src":"1430:43:13"},{"expression":{"arguments":[{"expression":{"id":2148,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1515:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1515:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2152,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1535:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_TokenFarm_$2475","typeString":"contract TokenFarm"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenFarm_$2475","typeString":"contract TokenFarm"}],"id":2151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1527:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2150,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:13","typeDescriptions":{}}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1527:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2154,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"1542:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2145,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"1495:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2144,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"1488:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1200_$","typeString":"type(contract IERC20)"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1488:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1200","typeString":"contract IERC20"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1181,"src":"1488:26:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1488:62:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2156,"nodeType":"ExpressionStatement","src":"1488:62:13"},{"expression":{"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2157,"name":"stakingBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"1565:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2161,"indexExpression":{"id":2158,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"1580:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1565:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2162,"indexExpression":{"expression":{"id":2159,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1587:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1587:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1565:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":2163,"name":"stakingBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"1618:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2165,"indexExpression":{"id":2164,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"1633:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1618:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2168,"indexExpression":{"expression":{"id":2166,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1640:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1640:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1618:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2169,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"1671:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1618:60:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1565:113:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2172,"nodeType":"ExpressionStatement","src":"1565:113:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2173,"name":"uniqueTokensStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"1697:18:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2176,"indexExpression":{"expression":{"id":2174,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1716:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1716:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1697:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1731:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1697:35:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2187,"nodeType":"IfStatement","src":"1693:100:13","trueBody":{"id":2186,"nodeType":"Block","src":"1734:59:13","statements":[{"expression":{"arguments":[{"expression":{"id":2182,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1766:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1766:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2179,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"1753:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"1753:12:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1753:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2185,"nodeType":"ExpressionStatement","src":"1753:24:13"}]}}]}}]},"functionSelector":"0bea440d","id":2191,"implemented":true,"kind":"function","modifiers":[],"name":"stakeTokens","nameLocation":"1231:11:13","nodeType":"FunctionDefinition","parameters":{"id":2126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2123,"mutability":"mutable","name":"_amount","nameLocation":"1251:7:13","nodeType":"VariableDeclaration","scope":2191,"src":"1243:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2122,"name":"uint256","nodeType":"ElementaryTypeName","src":"1243:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2125,"mutability":"mutable","name":"token","nameLocation":"1268:5:13","nodeType":"VariableDeclaration","scope":2191,"src":"1260:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2124,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1242:32:13"},"returnParameters":{"id":2127,"nodeType":"ParameterList","parameters":[],"src":"1282:0:13"},"scope":2475,"src":"1222:589:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2242,"nodeType":"Block","src":"1900:346:13","statements":[{"assignments":[2197],"declarations":[{"constant":false,"id":2197,"mutability":"mutable","name":"balance","nameLocation":"1953:7:13","nodeType":"VariableDeclaration","scope":2242,"src":"1945:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1945:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2204,"initialValue":{"baseExpression":{"baseExpression":{"id":2198,"name":"stakingBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"1963:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2200,"indexExpression":{"id":2199,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"1978:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1963:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2203,"indexExpression":{"expression":{"id":2201,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1985:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1985:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1963:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1945:51:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2206,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"2015:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2025:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2015:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7374616b696e672062616c616e63652063616e6e6f742062652030","id":2209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2028:29:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba","typeString":"literal_string \"staking balance cannot be 0\""},"value":"staking balance cannot be 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba","typeString":"literal_string \"staking balance cannot be 0\""}],"id":2205,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2007:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2007:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2211,"nodeType":"ExpressionStatement","src":"2007:51:13"},{"expression":{"arguments":[{"expression":{"id":2216,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2092:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2092:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2218,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"2104:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2213,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"2076:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2212,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"2069:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1200_$","typeString":"type(contract IERC20)"}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2069:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1200","typeString":"contract IERC20"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1149,"src":"2069:22:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2069:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2220,"nodeType":"ExpressionStatement","src":"2069:43:13"},{"expression":{"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2221,"name":"stakingBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"2123:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2225,"indexExpression":{"id":2222,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"2138:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2123:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2226,"indexExpression":{"expression":{"id":2223,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2145:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2145:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2123:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2159:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2123:37:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2229,"nodeType":"ExpressionStatement","src":"2123:37:13"},{"expression":{"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2230,"name":"uniqueTokensStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"2171:18:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2233,"indexExpression":{"expression":{"id":2231,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2190:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2190:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2171:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2234,"name":"uniqueTokensStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"2204:18:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2237,"indexExpression":{"expression":{"id":2235,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2223:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2223:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2204:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2237:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2204:34:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2171:67:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2241,"nodeType":"ExpressionStatement","src":"2171:67:13"}]},"functionSelector":"2d1ad8b8","id":2243,"implemented":true,"kind":"function","modifiers":[],"name":"unstakeTokens","nameLocation":"1864:13:13","nodeType":"FunctionDefinition","parameters":{"id":2194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"token","nameLocation":"1886:5:13","nodeType":"VariableDeclaration","scope":2243,"src":"1878:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2192,"name":"address","nodeType":"ElementaryTypeName","src":"1878:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1877:15:13"},"returnParameters":{"id":2195,"nodeType":"ParameterList","parameters":[],"src":"1900:0:13"},"scope":2475,"src":"1855:391:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2287,"nodeType":"Block","src":"2325:553:13","statements":[{"assignments":[2251],"declarations":[{"constant":false,"id":2251,"mutability":"mutable","name":"totalValue","nameLocation":"2344:10:13","nodeType":"VariableDeclaration","scope":2287,"src":"2336:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2250,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2253,"initialValue":{"hexValue":"30","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2357:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2336:22:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2254,"name":"uniqueTokensStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"2373:18:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2256,"indexExpression":{"id":2255,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"2392:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2373:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2400:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2373:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2284,"nodeType":"IfStatement","src":"2369:474:13","trueBody":{"id":2283,"nodeType":"Block","src":"2403:440:13","statements":[{"body":{"id":2281,"nodeType":"Block","src":"2586:246:13","statements":[{"expression":{"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2270,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"2605:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2271,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"2639:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":2273,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"2729:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2274,"name":"allowedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"2760:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2276,"indexExpression":{"id":2275,"name":"allowedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"2774:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2760:33:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2272,"name":"getUserStakingBalanceEthValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"2673:29:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2673:143:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2639:177:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2605:211:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2280,"nodeType":"ExpressionStatement","src":"2605:211:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2263,"name":"allowedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"2490:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2264,"name":"allowedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"2511:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2511:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2490:41:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2282,"initializationExpression":{"assignments":[2260],"declarations":[{"constant":false,"id":2260,"mutability":"mutable","name":"allowedTokensIndex","nameLocation":"2449:18:13","nodeType":"VariableDeclaration","scope":2282,"src":"2441:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2262,"initialValue":{"hexValue":"30","id":2261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2441:30:13"},"loopExpression":{"expression":{"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2550:20:13","subExpression":{"id":2267,"name":"allowedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"2550:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2269,"nodeType":"ExpressionStatement","src":"2550:20:13"},"nodeType":"ForStatement","src":"2418:414:13"}]}},{"expression":{"id":2285,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"2860:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2249,"id":2286,"nodeType":"Return","src":"2853:17:13"}]},"functionSelector":"af3f5e22","id":2288,"implemented":true,"kind":"function","modifiers":[],"name":"getUserTotalValue","nameLocation":"2263:17:13","nodeType":"FunctionDefinition","parameters":{"id":2246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2245,"mutability":"mutable","name":"user","nameLocation":"2289:4:13","nodeType":"VariableDeclaration","scope":2288,"src":"2281:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2244,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2280:14:13"},"returnParameters":{"id":2249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2288,"src":"2316:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2247,"name":"uint256","nodeType":"ElementaryTypeName","src":"2316:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2315:9:13"},"scope":2475,"src":"2254:624:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2319,"nodeType":"Block","src":"2947:313:13","statements":[{"body":{"id":2315,"nodeType":"Block","src":"3110:120:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2306,"name":"allowedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"3129:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2308,"indexExpression":{"id":2307,"name":"allowedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"3143:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3129:33:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2309,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"3166:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3129:42:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2314,"nodeType":"IfStatement","src":"3125:94:13","trueBody":{"id":2313,"nodeType":"Block","src":"3173:46:13","statements":[{"expression":{"hexValue":"74727565","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3199:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2294,"id":2312,"nodeType":"Return","src":"3192:11:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2299,"name":"allowedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"3022:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2300,"name":"allowedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"3043:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3043:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3022:41:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2316,"initializationExpression":{"assignments":[2296],"declarations":[{"constant":false,"id":2296,"mutability":"mutable","name":"allowedTokensIndex","nameLocation":"2985:18:13","nodeType":"VariableDeclaration","scope":2316,"src":"2977:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"2977:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2298,"initialValue":{"hexValue":"30","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3006:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2977:30:13"},"loopExpression":{"expression":{"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3078:20:13","subExpression":{"id":2303,"name":"allowedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"3078:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2305,"nodeType":"ExpressionStatement","src":"3078:20:13"},"nodeType":"ForStatement","src":"2958:272:13"},{"expression":{"hexValue":"66616c7365","id":2317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3247:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2294,"id":2318,"nodeType":"Return","src":"3240:12:13"}]},"functionSelector":"dd5b8467","id":2320,"implemented":true,"kind":"function","modifiers":[],"name":"tokenIsAllowed","nameLocation":"2895:14:13","nodeType":"FunctionDefinition","parameters":{"id":2291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2290,"mutability":"mutable","name":"token","nameLocation":"2918:5:13","nodeType":"VariableDeclaration","scope":2320,"src":"2910:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2289,"name":"address","nodeType":"ElementaryTypeName","src":"2910:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2909:15:13"},"returnParameters":{"id":2294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2320,"src":"2941:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2292,"name":"bool","nodeType":"ElementaryTypeName","src":"2941:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2940:6:13"},"scope":2475,"src":"2886:374:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2346,"nodeType":"Block","src":"3340:138:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":2327,"name":"stakingBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"3355:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2329,"indexExpression":{"id":2328,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"3370:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3355:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2331,"indexExpression":{"id":2330,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"3377:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3355:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":2332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3386:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3355:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2345,"nodeType":"IfStatement","src":"3351:120:13","trueBody":{"id":2344,"nodeType":"Block","src":"3389:82:13","statements":[{"expression":{"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2334,"name":"uniqueTokensStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"3404:18:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2336,"indexExpression":{"id":2335,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"3423:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3404:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2337,"name":"uniqueTokensStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"3431:18:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2339,"indexExpression":{"id":2338,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"3450:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3431:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3458:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3431:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3404:55:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2343,"nodeType":"ExpressionStatement","src":"3404:55:13"}]}}]},"id":2347,"implemented":true,"kind":"function","modifiers":[],"name":"updateUniqueTokensStaked","nameLocation":"3277:24:13","nodeType":"FunctionDefinition","parameters":{"id":2325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2322,"mutability":"mutable","name":"user","nameLocation":"3310:4:13","nodeType":"VariableDeclaration","scope":2347,"src":"3302:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2321,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2324,"mutability":"mutable","name":"token","nameLocation":"3324:5:13","nodeType":"VariableDeclaration","scope":2347,"src":"3316:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2323,"name":"address","nodeType":"ElementaryTypeName","src":"3316:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3301:29:13"},"returnParameters":{"id":2326,"nodeType":"ParameterList","parameters":[],"src":"3340:0:13"},"scope":2475,"src":"3268:210:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2370,"nodeType":"Block","src":"3577:151:13","statements":[{"assignments":[2355],"declarations":[{"constant":false,"id":2355,"mutability":"mutable","name":"tokenPrice","nameLocation":"3595:10:13","nodeType":"VariableDeclaration","scope":2370,"src":"3588:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":2354,"name":"int224","nodeType":"ElementaryTypeName","src":"3588:6:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"id":2360,"initialValue":{"components":[{"arguments":[{"id":2357,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"3626:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2356,"name":"getTokenEthPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"3609:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_int224_$","typeString":"function (address) view returns (int224)"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3609:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}}],"id":2359,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3608:25:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"VariableDeclarationStatement","src":"3588:45:13"},{"assignments":[2362],"declarations":[{"constant":false,"id":2362,"mutability":"mutable","name":"newTokenPrice","nameLocation":"3652:13:13","nodeType":"VariableDeclaration","scope":2370,"src":"3644:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":2361,"name":"uint224","nodeType":"ElementaryTypeName","src":"3644:7:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"id":2367,"initialValue":{"arguments":[{"id":2365,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"3676:10:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int224","typeString":"int224"}],"id":2364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3668:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2363,"name":"uint224","nodeType":"ElementaryTypeName","src":"3668:7:13","typeDescriptions":{}}},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3668:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"VariableDeclarationStatement","src":"3644:43:13"},{"expression":{"id":2368,"name":"newTokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"3705:13:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2353,"id":2369,"nodeType":"Return","src":"3698:20:13"}]},"functionSelector":"f5588385","id":2371,"implemented":true,"kind":"function","modifiers":[],"name":"int224ToUint256","nameLocation":"3495:15:13","nodeType":"FunctionDefinition","parameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"token","nameLocation":"3519:5:13","nodeType":"VariableDeclaration","scope":2371,"src":"3511:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2348,"name":"address","nodeType":"ElementaryTypeName","src":"3511:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3510:15:13"},"returnParameters":{"id":2353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2371,"src":"3563:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2351,"name":"uint256","nodeType":"ElementaryTypeName","src":"3563:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3562:9:13"},"scope":2475,"src":"3486:242:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2415,"nodeType":"Block","src":"3866:272:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2380,"name":"uniqueTokensStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"3881:18:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2382,"indexExpression":{"id":2381,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"3900:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3881:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":2383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3909:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3881:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2388,"nodeType":"IfStatement","src":"3877:70:13","trueBody":{"id":2387,"nodeType":"Block","src":"3912:35:13","statements":[{"expression":{"hexValue":"30","id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3934:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2379,"id":2386,"nodeType":"Return","src":"3927:8:13"}]}},{"assignments":[2390],"declarations":[{"constant":false,"id":2390,"mutability":"mutable","name":"newTokenPrice","nameLocation":"3965:13:13","nodeType":"VariableDeclaration","scope":2415,"src":"3957:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2389,"name":"uint256","nodeType":"ElementaryTypeName","src":"3957:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2395,"initialValue":{"components":[{"arguments":[{"id":2392,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"3998:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2391,"name":"int224ToUint256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"3982:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3982:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2394,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3981:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3957:48:13"},{"assignments":[2397],"declarations":[{"constant":false,"id":2397,"mutability":"mutable","name":"stakBal","nameLocation":"4024:7:13","nodeType":"VariableDeclaration","scope":2415,"src":"4016:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"4016:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2404,"initialValue":{"components":[{"baseExpression":{"baseExpression":{"id":2398,"name":"stakingBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"4035:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2400,"indexExpression":{"id":2399,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"4050:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4035:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2402,"indexExpression":{"id":2401,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"4057:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4035:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2403,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4034:29:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4016:47:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2405,"name":"stakBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"4095:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2406,"name":"newTokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"4105:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4095:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4094:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":2411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4123:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4127:2:13","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"4123:6:13","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}}],"id":2412,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4122:8:13","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"4094:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2379,"id":2414,"nodeType":"Return","src":"4074:56:13"}]},"functionSelector":"cc81e060","id":2416,"implemented":true,"kind":"function","modifiers":[],"name":"getUserStakingBalanceEthValue","nameLocation":"3745:29:13","nodeType":"FunctionDefinition","parameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"user","nameLocation":"3783:4:13","nodeType":"VariableDeclaration","scope":2416,"src":"3775:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2372,"name":"address","nodeType":"ElementaryTypeName","src":"3775:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2375,"mutability":"mutable","name":"token","nameLocation":"3797:5:13","nodeType":"VariableDeclaration","scope":2416,"src":"3789:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2374,"name":"address","nodeType":"ElementaryTypeName","src":"3789:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3774:29:13"},"returnParameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2416,"src":"3852:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3852:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3851:9:13"},"scope":2475,"src":"3736:402:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2449,"nodeType":"Block","src":"4209:328:13","statements":[{"body":{"id":2447,"nodeType":"Block","src":"4388:142:13","statements":[{"assignments":[2433],"declarations":[{"constant":false,"id":2433,"mutability":"mutable","name":"recipient","nameLocation":"4411:9:13","nodeType":"VariableDeclaration","scope":2447,"src":"4403:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2432,"name":"address","nodeType":"ElementaryTypeName","src":"4403:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2437,"initialValue":{"baseExpression":{"id":2434,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"4423:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2436,"indexExpression":{"id":2435,"name":"stakersIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"4431:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4423:21:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4403:41:13"},{"expression":{"arguments":[{"id":2441,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"4478:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2443,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"4507:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2442,"name":"getUserTotalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"4489:17:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4489:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2438,"name":"dappToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"4459:9:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1200","typeString":"contract IERC20"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1149,"src":"4459:18:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4459:59:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2446,"nodeType":"ExpressionStatement","src":"4459:59:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2425,"name":"stakersIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"4318:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2426,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"4333:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4333:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4318:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2448,"initializationExpression":{"assignments":[2422],"declarations":[{"constant":false,"id":2422,"mutability":"mutable","name":"stakersIndex","nameLocation":"4287:12:13","nodeType":"VariableDeclaration","scope":2448,"src":"4279:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2421,"name":"uint256","nodeType":"ElementaryTypeName","src":"4279:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2424,"initialValue":{"hexValue":"30","id":2423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4302:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4279:24:13"},"loopExpression":{"expression":{"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4362:14:13","subExpression":{"id":2429,"name":"stakersIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"4362:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2431,"nodeType":"ExpressionStatement","src":"4362:14:13"},"nodeType":"ForStatement","src":"4260:270:13"}]},"functionSelector":"60ab5852","id":2450,"implemented":true,"kind":"function","modifiers":[{"id":2419,"kind":"modifierInvocation","modifierName":{"id":2418,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":518,"src":"4199:9:13"},"nodeType":"ModifierInvocation","src":"4199:9:13"}],"name":"issueTokens","nameLocation":"4178:11:13","nodeType":"FunctionDefinition","parameters":{"id":2417,"nodeType":"ParameterList","parameters":[],"src":"4189:2:13"},"returnParameters":{"id":2420,"nodeType":"ParameterList","parameters":[],"src":"4209:0:13"},"scope":2475,"src":"4169:368:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2473,"nodeType":"Block","src":"4621:169:13","statements":[{"assignments":[2458],"declarations":[{"constant":false,"id":2458,"mutability":"mutable","name":"DapiName","nameLocation":"4640:8:13","nodeType":"VariableDeclaration","scope":2473,"src":"4632:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4632:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2462,"initialValue":{"baseExpression":{"id":2459,"name":"tokenDapiMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"4651:16:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"}},"id":2461,"indexExpression":{"id":2460,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"4668:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4651:23:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4632:42:13"},{"expression":{"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"4686:5:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}}],"id":2464,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4685:7:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2469,"name":"DapiName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"4767:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"id":2466,"name":"dapiServer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"4707:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2465,"name":"IDapiServer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"4695:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDapiServer_$463_$","typeString":"type(contract IDapiServer)"}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4695:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IDapiServer_$463","typeString":"contract IDapiServer"}},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readDataFeedValueWithDapiName","nodeType":"MemberAccess","referencedDeclaration":383,"src":"4695:53:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_int224_$","typeString":"function (bytes32) view external returns (int224)"}},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4695:91:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"4685:101:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":2472,"nodeType":"ExpressionStatement","src":"4685:101:13"}]},"functionSelector":"df00018d","id":2474,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenEthPrice","nameLocation":"4554:16:13","nodeType":"FunctionDefinition","parameters":{"id":2453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2452,"mutability":"mutable","name":"token","nameLocation":"4579:5:13","nodeType":"VariableDeclaration","scope":2474,"src":"4571:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2451,"name":"address","nodeType":"ElementaryTypeName","src":"4571:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4570:15:13"},"returnParameters":{"id":2456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2455,"mutability":"mutable","name":"value","nameLocation":"4614:5:13","nodeType":"VariableDeclaration","scope":2474,"src":"4607:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":2454,"name":"int224","nodeType":"ElementaryTypeName","src":"4607:6:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"4606:14:13"},"scope":2475,"src":"4545:245:13","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":2476,"src":"396:4397:13","usedErrors":[]}],"src":"2:4815:13"},"id":13}},"contracts":{"@api3/airnode-protocol-v1/contracts/dapis/DapiReader.sol":{"DapiReader":{"abi":[{"inputs":[{"internalType":"address","name":"_dapiServer","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"dapiServer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"constructor":{"params":{"_dapiServer":"DapiServer contract address"}}},"title":"Contract to be inherited by contracts that will read from a DapiServer contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_20":{"entryPoint":null,"id":20,"parameterSlots":1,"returnSlots":0},"@setDapiServer_41":{"entryPoint":62,"id":41,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":186,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d85702f97c81e6e3d5e300d9d657ae8f2b8799c189bbf9c6f51791741d49abd5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:659:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:14","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:14"},"nodeType":"YulFunctionCall","src":"143:12:14"},"nodeType":"YulExpressionStatement","src":"143:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:14"},"nodeType":"YulFunctionCall","src":"112:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:14"},"nodeType":"YulFunctionCall","src":"108:32:14"},"nodeType":"YulIf","src":"105:52:14"},{"nodeType":"YulVariableDeclaration","src":"166:29:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:14"},"nodeType":"YulFunctionCall","src":"179:16:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:14"},"nodeType":"YulFunctionCall","src":"260:12:14"},"nodeType":"YulExpressionStatement","src":"260:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:14"},"nodeType":"YulFunctionCall","src":"239:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:14"},"nodeType":"YulFunctionCall","src":"235:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:14"},"nodeType":"YulFunctionCall","src":"224:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:14"},"nodeType":"YulFunctionCall","src":"214:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:14"},"nodeType":"YulFunctionCall","src":"207:50:14"},"nodeType":"YulIf","src":"204:70:14"},{"nodeType":"YulAssignment","src":"283:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:14"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:14","type":""}],"src":"14:290:14"},{"body":{"nodeType":"YulBlock","src":"483:174:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"500:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"511:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"493:6:14"},"nodeType":"YulFunctionCall","src":"493:21:14"},"nodeType":"YulExpressionStatement","src":"493:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"534:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"545:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"530:3:14"},"nodeType":"YulFunctionCall","src":"530:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"550:2:14","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"523:6:14"},"nodeType":"YulFunctionCall","src":"523:30:14"},"nodeType":"YulExpressionStatement","src":"523:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"573:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"584:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"569:3:14"},"nodeType":"YulFunctionCall","src":"569:18:14"},{"hexValue":"64415049207365727665722061646472657373207a65726f","kind":"string","nodeType":"YulLiteral","src":"589:26:14","type":"","value":"dAPI server address zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"562:6:14"},"nodeType":"YulFunctionCall","src":"562:54:14"},"nodeType":"YulExpressionStatement","src":"562:54:14"},{"nodeType":"YulAssignment","src":"625:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"637:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"648:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"633:3:14"},"nodeType":"YulFunctionCall","src":"633:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"625:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_d85702f97c81e6e3d5e300d9d657ae8f2b8799c189bbf9c6f51791741d49abd5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"460:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"474:4:14","type":""}],"src":"309:348:14"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_d85702f97c81e6e3d5e300d9d657ae8f2b8799c189bbf9c6f51791741d49abd5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"dAPI server address zero\")\n        tail := add(headStart, 96)\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5060405161018938038061018983398101604081905261002f916100ba565b6100388161003e565b506100ea565b6001600160a01b0381166100985760405162461bcd60e51b815260206004820152601860248201527f64415049207365727665722061646472657373207a65726f0000000000000000604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000602082840312156100cc57600080fd5b81516001600160a01b03811681146100e357600080fd5b9392505050565b6091806100f86000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80639f03866b14602d575b600080fd5b600054603f906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f3fea2646970667358221220f70cd66ce9707aba79221415e8988aa63bc614bc89607cb1d1f806e45cd272d564736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x189 CODESIZE SUB DUP1 PUSH2 0x189 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xBA JUMP JUMPDEST PUSH2 0x38 DUP2 PUSH2 0x3E JUMP JUMPDEST POP PUSH2 0xEA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x64415049207365727665722061646472657373207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x91 DUP1 PUSH2 0xF8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F03866B EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x3F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xC 0xD6 PUSH13 0xE9707ABA79221415E8988AA63B 0xC6 EQ 0xBC DUP10 PUSH1 0x7C 0xB1 0xD1 0xF8 MOD 0xE4 0x5C 0xD2 PUSH19 0xD564736F6C6343000809003300000000000000 ","sourceMap":"192:973:0:-:0;;;373:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;416:26;430:11;416:13;:26::i;:::-;373:76;192:973;;997:166;-1:-1:-1;;;;;1068:25:0;;1060:62;;;;-1:-1:-1;;;1060:62:0;;511:2:14;1060:62:0;;;493:21:14;550:2;530:18;;;523:30;589:26;569:18;;;562:54;633:18;;1060:62:0;;;;;;;;1132:10;:24;;-1:-1:-1;;;;;;1132:24:0;-1:-1:-1;;;;;1132:24:0;;;;;;;;;;997:166::o;14:290:14:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:14;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:14:o;309:348::-;192:973:0;;;;;;"},"deployedBytecode":{"functionDebugData":{"@dapiServer_9":{"entryPoint":null,"id":9,"parameterSlots":0,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:219:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:14","statements":[{"nodeType":"YulAssignment","src":"125:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:14"},"nodeType":"YulFunctionCall","src":"133:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:14"},"nodeType":"YulFunctionCall","src":"194:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:14"},"nodeType":"YulFunctionCall","src":"190:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:14"},"nodeType":"YulFunctionCall","src":"178:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:14"},"nodeType":"YulFunctionCall","src":"160:51:14"},"nodeType":"YulExpressionStatement","src":"160:51:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:14","type":""}],"src":"14:203:14"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052348015600f57600080fd5b506004361060285760003560e01c80639f03866b14602d575b600080fd5b600054603f906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f3fea2646970667358221220f70cd66ce9707aba79221415e8988aa63bc614bc89607cb1d1f806e45cd272d564736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F03866B EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x3F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xC 0xD6 PUSH13 0xE9707ABA79221415E8988AA63B 0xC6 EQ 0xBC DUP10 PUSH1 0x7C 0xB1 0xD1 0xF8 MOD 0xE4 0x5C 0xD2 PUSH19 0xD564736F6C6343000809003300000000000000 ","sourceMap":"192:973:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;277:34;;;;;-1:-1:-1;;;;;277:34:0;;;;;;-1:-1:-1;;;;;178:32:14;;;160:51;;148:2;133:18;277:34:0;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"29000","executionCost":"infinite","totalCost":"infinite"},"external":{"dapiServer()":"2303"},"internal":{"setDapiServer(address)":"infinite"}},"methodIdentifiers":{"dapiServer()":"9f03866b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dapiServer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"dapiServer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_dapiServer\":\"DapiServer contract address\"}}},\"title\":\"Contract to be inherited by contracts that will read from a DapiServer contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"dapiServer()\":{\"notice\":\"DapiServer contract address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@api3/airnode-protocol-v1/contracts/dapis/DapiReader.sol\":\"DapiReader\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@api3/airnode-protocol-v1/contracts/dapis/DapiReader.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/IDapiReader.sol\\\";\\n\\n/// @title Contract to be inherited by contracts that will read from a\\n/// DapiServer contract\\ncontract DapiReader is IDapiReader {\\n    /// @notice DapiServer contract address\\n    address public override dapiServer;\\n\\n    /// @param _dapiServer DapiServer contract address\\n    constructor(address _dapiServer) {\\n        setDapiServer(_dapiServer);\\n    }\\n\\n    /// @notice Called internally to update the DapiServer contract address\\n    /// @dev Inheriting contracts are highly recommended to expose this\\n    /// functionality to be able to migrate between DapiServer contracts.\\n    /// Otherwise, when the DapiServer goes out of service for any reason,\\n    /// the dependent contract will go defunct.\\n    /// Since this is a critical action, it needs to be protected behind\\n    /// mechanisms such as decentralized governance, timelocks, etc.\\n    /// @param _dapiServer DapiServer contract address\\n    function setDapiServer(address _dapiServer) internal {\\n        require(_dapiServer != address(0), \\\"dAPI server address zero\\\");\\n        dapiServer = _dapiServer;\\n    }\\n}\\n\",\"keccak256\":\"0xbbb143f391c0043cf3f508211982844e170b490e766fef3bfe14137c02d1bf57\",\"license\":\"MIT\"},\"@api3/airnode-protocol-v1/contracts/dapis/interfaces/IDapiReader.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IDapiServer.sol\\\";\\n\\ninterface IDapiReader {\\n    function dapiServer() external view returns (address);\\n}\\n\",\"keccak256\":\"0xbf5d638457b01dd6416a822b419b89a912b7886c786a44f3043b369b97e7d4e5\",\"license\":\"MIT\"},\"@api3/airnode-protocol-v1/contracts/dapis/interfaces/IDapiServer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../protocol/interfaces/IAirnodeRequester.sol\\\";\\n\\ninterface IDapiServer is IAirnodeRequester {\\n    event SetRrpBeaconUpdatePermissionStatus(\\n        address indexed sponsor,\\n        address indexed rrpBeaconUpdateRequester,\\n        bool status\\n    );\\n\\n    event RequestedRrpBeaconUpdate(\\n        bytes32 indexed beaconId,\\n        address indexed sponsor,\\n        address indexed requester,\\n        bytes32 requestId,\\n        address airnode,\\n        bytes32 templateId\\n    );\\n\\n    event RequestedRrpBeaconUpdateRelayed(\\n        bytes32 indexed beaconId,\\n        address indexed sponsor,\\n        address indexed requester,\\n        bytes32 requestId,\\n        address airnode,\\n        address relayer,\\n        bytes32 templateId\\n    );\\n\\n    event UpdatedBeaconWithRrp(\\n        bytes32 indexed beaconId,\\n        bytes32 requestId,\\n        int256 value,\\n        uint256 timestamp\\n    );\\n\\n    event RegisteredBeaconUpdateSubscription(\\n        bytes32 indexed subscriptionId,\\n        address airnode,\\n        bytes32 templateId,\\n        bytes parameters,\\n        bytes conditions,\\n        address relayer,\\n        address sponsor,\\n        address requester,\\n        bytes4 fulfillFunctionId\\n    );\\n\\n    event UpdatedBeaconWithPsp(\\n        bytes32 indexed beaconId,\\n        bytes32 subscriptionId,\\n        int224 value,\\n        uint32 timestamp\\n    );\\n\\n    event UpdatedBeaconWithSignedData(\\n        bytes32 indexed beaconId,\\n        int256 value,\\n        uint256 timestamp\\n    );\\n\\n    event UpdatedBeaconSetWithBeacons(\\n        bytes32 indexed beaconSetId,\\n        int224 value,\\n        uint32 timestamp\\n    );\\n\\n    event UpdatedBeaconSetWithSignedData(\\n        bytes32 indexed dapiId,\\n        int224 value,\\n        uint32 timestamp\\n    );\\n\\n    event AddedUnlimitedReader(address indexed unlimitedReader);\\n\\n    event SetDapiName(\\n        bytes32 indexed dapiName,\\n        bytes32 dataFeedId,\\n        address indexed sender\\n    );\\n\\n    function setRrpBeaconUpdatePermissionStatus(\\n        address rrpBeaconUpdateRequester,\\n        bool status\\n    ) external;\\n\\n    function requestRrpBeaconUpdate(\\n        address airnode,\\n        bytes32 templateId,\\n        address sponsor\\n    ) external returns (bytes32 requestId);\\n\\n    function requestRrpBeaconUpdateRelayed(\\n        address airnode,\\n        bytes32 templateId,\\n        address relayer,\\n        address sponsor\\n    ) external returns (bytes32 requestId);\\n\\n    function fulfillRrpBeaconUpdate(\\n        bytes32 requestId,\\n        uint256 timestamp,\\n        bytes calldata data\\n    ) external;\\n\\n    function registerBeaconUpdateSubscription(\\n        address airnode,\\n        bytes32 templateId,\\n        bytes memory conditions,\\n        address relayer,\\n        address sponsor\\n    ) external returns (bytes32 subscriptionId);\\n\\n    function conditionPspBeaconUpdate(\\n        bytes32 subscriptionId,\\n        bytes calldata data,\\n        bytes calldata conditionParameters\\n    ) external view returns (bool);\\n\\n    function fulfillPspBeaconUpdate(\\n        bytes32 subscriptionId,\\n        address airnode,\\n        address relayer,\\n        address sponsor,\\n        uint256 timestamp,\\n        bytes calldata data,\\n        bytes calldata signature\\n    ) external;\\n\\n    function updateBeaconWithSignedData(\\n        address airnode,\\n        bytes32 beaconId,\\n        uint256 timestamp,\\n        bytes calldata data,\\n        bytes calldata signature\\n    ) external;\\n\\n    function updateBeaconSetWithBeacons(bytes32[] memory beaconIds)\\n        external\\n        returns (bytes32 beaconSetId);\\n\\n    function updateBeaconSetWithBeaconsAndReturnCondition(\\n        bytes32[] memory beaconIds,\\n        uint256 updateThresholdInPercentage\\n    ) external returns (bool);\\n\\n    function conditionPspBeaconSetUpdate(\\n        bytes32 subscriptionId,\\n        bytes calldata data,\\n        bytes calldata conditionParameters\\n    ) external returns (bool);\\n\\n    function fulfillPspBeaconSetUpdate(\\n        bytes32 subscriptionId,\\n        address airnode,\\n        address relayer,\\n        address sponsor,\\n        uint256 timestamp,\\n        bytes calldata data,\\n        bytes calldata signature\\n    ) external;\\n\\n    function updateBeaconSetWithSignedData(\\n        address[] memory airnodes,\\n        bytes32[] memory templateIds,\\n        uint256[] memory timestamps,\\n        bytes[] memory data,\\n        bytes[] memory signatures\\n    ) external returns (bytes32 beaconSetId);\\n\\n    function addUnlimitedReader(address unlimitedReader) external;\\n\\n    function setDapiName(bytes32 dapiName, bytes32 dataFeedId) external;\\n\\n    function dapiNameToDataFeedId(bytes32 dapiName)\\n        external\\n        view\\n        returns (bytes32);\\n\\n    function readDataFeedWithId(bytes32 dataFeedId)\\n        external\\n        view\\n        returns (int224 value, uint32 timestamp);\\n\\n    function readDataFeedValueWithId(bytes32 dataFeedId)\\n        external\\n        view\\n        returns (int224 value);\\n\\n    function readDataFeedWithDapiName(bytes32 dapiName)\\n        external\\n        view\\n        returns (int224 value, uint32 timestamp);\\n\\n    function readDataFeedValueWithDapiName(bytes32 dapiName)\\n        external\\n        view\\n        returns (int224 value);\\n\\n    function readerCanReadDataFeed(bytes32 dataFeedId, address reader)\\n        external\\n        view\\n        returns (bool);\\n\\n    function dataFeedIdToReaderToWhitelistStatus(\\n        bytes32 dataFeedId,\\n        address reader\\n    )\\n        external\\n        view\\n        returns (uint64 expirationTimestamp, uint192 indefiniteWhitelistCount);\\n\\n    function dataFeedIdToReaderToSetterToIndefiniteWhitelistStatus(\\n        bytes32 dataFeedId,\\n        address reader,\\n        address setter\\n    ) external view returns (bool indefiniteWhitelistStatus);\\n\\n    function deriveBeaconId(address airnode, bytes32 templateId)\\n        external\\n        pure\\n        returns (bytes32 beaconId);\\n\\n    function deriveBeaconSetId(bytes32[] memory beaconIds)\\n        external\\n        pure\\n        returns (bytes32 beaconSetId);\\n\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DAPI_NAME_SETTER_ROLE_DESCRIPTION()\\n        external\\n        view\\n        returns (string memory);\\n\\n    // solhint-disable-next-line func-name-mixedcase\\n    function HUNDRED_PERCENT() external view returns (uint256);\\n\\n    function dapiNameSetterRole() external view returns (bytes32);\\n\\n    function sponsorToRrpBeaconUpdateRequesterToPermissionStatus(\\n        address sponsor,\\n        address updateRequester\\n    ) external view returns (bool);\\n\\n    function subscriptionIdToBeaconId(bytes32 subscriptionId)\\n        external\\n        view\\n        returns (bytes32);\\n}\\n\",\"keccak256\":\"0x6a09876c58ae7ba79531eb8276d6b9501add508c73b86a18b1bf641da194391f\",\"license\":\"MIT\"},\"@api3/airnode-protocol-v1/contracts/protocol/interfaces/IAirnodeRequester.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IAirnodeRequester {\\n    function airnodeProtocol() external view returns (address);\\n}\\n\",\"keccak256\":\"0xa2412446bb860cfaafa447d99d0f41ba6977e7f2b6b743a09c16b1ff58186309\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":9,"contract":"@api3/airnode-protocol-v1/contracts/dapis/DapiReader.sol:DapiReader","label":"dapiServer","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"dapiServer()":{"notice":"DapiServer contract address"}},"version":1}}},"@api3/airnode-protocol-v1/contracts/dapis/interfaces/IDapiReader.sol":{"IDapiReader":{"abi":[{"inputs":[],"name":"dapiServer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"dapiServer()":"9f03866b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"dapiServer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@api3/airnode-protocol-v1/contracts/dapis/interfaces/IDapiReader.sol\":\"IDapiReader\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@api3/airnode-protocol-v1/contracts/dapis/interfaces/IDapiReader.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IDapiServer.sol\\\";\\n\\ninterface IDapiReader {\\n    function dapiServer() external view returns (address);\\n}\\n\",\"keccak256\":\"0xbf5d638457b01dd6416a822b419b89a912b7886c786a44f3043b369b97e7d4e5\",\"license\":\"MIT\"},\"@api3/airnode-protocol-v1/contracts/dapis/interfaces/IDapiServer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../protocol/interfaces/IAirnodeRequester.sol\\\";\\n\\ninterface IDapiServer is IAirnodeRequester {\\n    event SetRrpBeaconUpdatePermissionStatus(\\n        address indexed sponsor,\\n        address indexed rrpBeaconUpdateRequester,\\n        bool status\\n    );\\n\\n    event RequestedRrpBeaconUpdate(\\n        bytes32 indexed beaconId,\\n        address indexed sponsor,\\n        address indexed requester,\\n        bytes32 requestId,\\n        address airnode,\\n        bytes32 templateId\\n    );\\n\\n    event RequestedRrpBeaconUpdateRelayed(\\n        bytes32 indexed beaconId,\\n        address indexed sponsor,\\n        address indexed requester,\\n        bytes32 requestId,\\n        address airnode,\\n        address relayer,\\n        bytes32 templateId\\n    );\\n\\n    event UpdatedBeaconWithRrp(\\n        bytes32 indexed beaconId,\\n        bytes32 requestId,\\n        int256 value,\\n        uint256 timestamp\\n    );\\n\\n    event RegisteredBeaconUpdateSubscription(\\n        bytes32 indexed subscriptionId,\\n        address airnode,\\n        bytes32 templateId,\\n        bytes parameters,\\n        bytes conditions,\\n        address relayer,\\n        address sponsor,\\n        address requester,\\n        bytes4 fulfillFunctionId\\n    );\\n\\n    event UpdatedBeaconWithPsp(\\n        bytes32 indexed beaconId,\\n        bytes32 subscriptionId,\\n        int224 value,\\n        uint32 timestamp\\n    );\\n\\n    event UpdatedBeaconWithSignedData(\\n        bytes32 indexed beaconId,\\n        int256 value,\\n        uint256 timestamp\\n    );\\n\\n    event UpdatedBeaconSetWithBeacons(\\n        bytes32 indexed beaconSetId,\\n        int224 value,\\n        uint32 timestamp\\n    );\\n\\n    event UpdatedBeaconSetWithSignedData(\\n        bytes32 indexed dapiId,\\n        int224 value,\\n        uint32 timestamp\\n    );\\n\\n    event AddedUnlimitedReader(address indexed unlimitedReader);\\n\\n    event SetDapiName(\\n        bytes32 indexed dapiName,\\n        bytes32 dataFeedId,\\n        address indexed sender\\n    );\\n\\n    function setRrpBeaconUpdatePermissionStatus(\\n        address rrpBeaconUpdateRequester,\\n        bool status\\n    ) external;\\n\\n    function requestRrpBeaconUpdate(\\n        address airnode,\\n        bytes32 templateId,\\n        address sponsor\\n    ) external returns (bytes32 requestId);\\n\\n    function requestRrpBeaconUpdateRelayed(\\n        address airnode,\\n        bytes32 templateId,\\n        address relayer,\\n        address sponsor\\n    ) external returns (bytes32 requestId);\\n\\n    function fulfillRrpBeaconUpdate(\\n        bytes32 requestId,\\n        uint256 timestamp,\\n        bytes calldata data\\n    ) external;\\n\\n    function registerBeaconUpdateSubscription(\\n        address airnode,\\n        bytes32 templateId,\\n        bytes memory conditions,\\n        address relayer,\\n        address sponsor\\n    ) external returns (bytes32 subscriptionId);\\n\\n    function conditionPspBeaconUpdate(\\n        bytes32 subscriptionId,\\n        bytes calldata data,\\n        bytes calldata conditionParameters\\n    ) external view returns (bool);\\n\\n    function fulfillPspBeaconUpdate(\\n        bytes32 subscriptionId,\\n        address airnode,\\n        address relayer,\\n        address sponsor,\\n        uint256 timestamp,\\n        bytes calldata data,\\n        bytes calldata signature\\n    ) external;\\n\\n    function updateBeaconWithSignedData(\\n        address airnode,\\n        bytes32 beaconId,\\n        uint256 timestamp,\\n        bytes calldata data,\\n        bytes calldata signature\\n    ) external;\\n\\n    function updateBeaconSetWithBeacons(bytes32[] memory beaconIds)\\n        external\\n        returns (bytes32 beaconSetId);\\n\\n    function updateBeaconSetWithBeaconsAndReturnCondition(\\n        bytes32[] memory beaconIds,\\n        uint256 updateThresholdInPercentage\\n    ) external returns (bool);\\n\\n    function conditionPspBeaconSetUpdate(\\n        bytes32 subscriptionId,\\n        bytes calldata data,\\n        bytes calldata conditionParameters\\n    ) external returns (bool);\\n\\n    function fulfillPspBeaconSetUpdate(\\n        bytes32 subscriptionId,\\n        address airnode,\\n        address relayer,\\n        address sponsor,\\n        uint256 timestamp,\\n        bytes calldata data,\\n        bytes calldata signature\\n    ) external;\\n\\n    function updateBeaconSetWithSignedData(\\n        address[] memory airnodes,\\n        bytes32[] memory templateIds,\\n        uint256[] memory timestamps,\\n        bytes[] memory data,\\n        bytes[] memory signatures\\n    ) external returns (bytes32 beaconSetId);\\n\\n    function addUnlimitedReader(address unlimitedReader) external;\\n\\n    function setDapiName(bytes32 dapiName, bytes32 dataFeedId) external;\\n\\n    function dapiNameToDataFeedId(bytes32 dapiName)\\n        external\\n        view\\n        returns (bytes32);\\n\\n    function readDataFeedWithId(bytes32 dataFeedId)\\n        external\\n        view\\n        returns (int224 value, uint32 timestamp);\\n\\n    function readDataFeedValueWithId(bytes32 dataFeedId)\\n        external\\n        view\\n        returns (int224 value);\\n\\n    function readDataFeedWithDapiName(bytes32 dapiName)\\n        external\\n        view\\n        returns (int224 value, uint32 timestamp);\\n\\n    function readDataFeedValueWithDapiName(bytes32 dapiName)\\n        external\\n        view\\n        returns (int224 value);\\n\\n    function readerCanReadDataFeed(bytes32 dataFeedId, address reader)\\n        external\\n        view\\n        returns (bool);\\n\\n    function dataFeedIdToReaderToWhitelistStatus(\\n        bytes32 dataFeedId,\\n        address reader\\n    )\\n        external\\n        view\\n        returns (uint64 expirationTimestamp, uint192 indefiniteWhitelistCount);\\n\\n    function dataFeedIdToReaderToSetterToIndefiniteWhitelistStatus(\\n        bytes32 dataFeedId,\\n        address reader,\\n        address setter\\n    ) external view returns (bool indefiniteWhitelistStatus);\\n\\n    function deriveBeaconId(address airnode, bytes32 templateId)\\n        external\\n        pure\\n        returns (bytes32 beaconId);\\n\\n    function deriveBeaconSetId(bytes32[] memory beaconIds)\\n        external\\n        pure\\n        returns (bytes32 beaconSetId);\\n\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DAPI_NAME_SETTER_ROLE_DESCRIPTION()\\n        external\\n        view\\n        returns (string memory);\\n\\n    // solhint-disable-next-line func-name-mixedcase\\n    function HUNDRED_PERCENT() external view returns (uint256);\\n\\n    function dapiNameSetterRole() external view returns (bytes32);\\n\\n    function sponsorToRrpBeaconUpdateRequesterToPermissionStatus(\\n        address sponsor,\\n        address updateRequester\\n    ) external view returns (bool);\\n\\n    function subscriptionIdToBeaconId(bytes32 subscriptionId)\\n        external\\n        view\\n        returns (bytes32);\\n}\\n\",\"keccak256\":\"0x6a09876c58ae7ba79531eb8276d6b9501add508c73b86a18b1bf641da194391f\",\"license\":\"MIT\"},\"@api3/airnode-protocol-v1/contracts/protocol/interfaces/IAirnodeRequester.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IAirnodeRequester {\\n    function airnodeProtocol() external view returns (address);\\n}\\n\",\"keccak256\":\"0xa2412446bb860cfaafa447d99d0f41ba6977e7f2b6b743a09c16b1ff58186309\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@api3/airnode-protocol-v1/contracts/dapis/interfaces/IDapiServer.sol":{"IDapiServer":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"unlimitedReader","type":"address"}],"name":"AddedUnlimitedReader","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"subscriptionId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"airnode","type":"address"},{"indexed":false,"internalType":"bytes32","name":"templateId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"parameters","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"conditions","type":"bytes"},{"indexed":false,"internalType":"address","name":"relayer","type":"address"},{"indexed":false,"internalType":"address","name":"sponsor","type":"address"},{"indexed":false,"internalType":"address","name":"requester","type":"address"},{"indexed":false,"internalType":"bytes4","name":"fulfillFunctionId","type":"bytes4"}],"name":"RegisteredBeaconUpdateSubscription","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"beaconId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sponsor","type":"address"},{"indexed":true,"internalType":"address","name":"requester","type":"address"},{"indexed":false,"internalType":"bytes32","name":"requestId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"airnode","type":"address"},{"indexed":false,"internalType":"bytes32","name":"templateId","type":"bytes32"}],"name":"RequestedRrpBeaconUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"beaconId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sponsor","type":"address"},{"indexed":true,"internalType":"address","name":"requester","type":"address"},{"indexed":false,"internalType":"bytes32","name":"requestId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"airnode","type":"address"},{"indexed":false,"internalType":"address","name":"relayer","type":"address"},{"indexed":false,"internalType":"bytes32","name":"templateId","type":"bytes32"}],"name":"RequestedRrpBeaconUpdateRelayed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dapiName","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"dataFeedId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"SetDapiName","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sponsor","type":"address"},{"indexed":true,"internalType":"address","name":"rrpBeaconUpdateRequester","type":"address"},{"indexed":false,"internalType":"bool","name":"status","type":"bool"}],"name":"SetRrpBeaconUpdatePermissionStatus","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"beaconSetId","type":"bytes32"},{"indexed":false,"internalType":"int224","name":"value","type":"int224"},{"indexed":false,"internalType":"uint32","name":"timestamp","type":"uint32"}],"name":"UpdatedBeaconSetWithBeacons","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dapiId","type":"bytes32"},{"indexed":false,"internalType":"int224","name":"value","type":"int224"},{"indexed":false,"internalType":"uint32","name":"timestamp","type":"uint32"}],"name":"UpdatedBeaconSetWithSignedData","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"beaconId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"subscriptionId","type":"bytes32"},{"indexed":false,"internalType":"int224","name":"value","type":"int224"},{"indexed":false,"internalType":"uint32","name":"timestamp","type":"uint32"}],"name":"UpdatedBeaconWithPsp","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"beaconId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"requestId","type":"bytes32"},{"indexed":false,"internalType":"int256","name":"value","type":"int256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"UpdatedBeaconWithRrp","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"beaconId","type":"bytes32"},{"indexed":false,"internalType":"int256","name":"value","type":"int256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"UpdatedBeaconWithSignedData","type":"event"},{"inputs":[],"name":"DAPI_NAME_SETTER_ROLE_DESCRIPTION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"HUNDRED_PERCENT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"unlimitedReader","type":"address"}],"name":"addUnlimitedReader","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"airnodeProtocol","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"subscriptionId","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"conditionParameters","type":"bytes"}],"name":"conditionPspBeaconSetUpdate","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"subscriptionId","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"conditionParameters","type":"bytes"}],"name":"conditionPspBeaconUpdate","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dapiNameSetterRole","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dapiName","type":"bytes32"}],"name":"dapiNameToDataFeedId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataFeedId","type":"bytes32"},{"internalType":"address","name":"reader","type":"address"},{"internalType":"address","name":"setter","type":"address"}],"name":"dataFeedIdToReaderToSetterToIndefiniteWhitelistStatus","outputs":[{"internalType":"bool","name":"indefiniteWhitelistStatus","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataFeedId","type":"bytes32"},{"internalType":"address","name":"reader","type":"address"}],"name":"dataFeedIdToReaderToWhitelistStatus","outputs":[{"internalType":"uint64","name":"expirationTimestamp","type":"uint64"},{"internalType":"uint192","name":"indefiniteWhitelistCount","type":"uint192"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"airnode","type":"address"},{"internalType":"bytes32","name":"templateId","type":"bytes32"}],"name":"deriveBeaconId","outputs":[{"internalType":"bytes32","name":"beaconId","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"beaconIds","type":"bytes32[]"}],"name":"deriveBeaconSetId","outputs":[{"internalType":"bytes32","name":"beaconSetId","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"subscriptionId","type":"bytes32"},{"internalType":"address","name":"airnode","type":"address"},{"internalType":"address","name":"relayer","type":"address"},{"internalType":"address","name":"sponsor","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"fulfillPspBeaconSetUpdate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"subscriptionId","type":"bytes32"},{"internalType":"address","name":"airnode","type":"address"},{"internalType":"address","name":"relayer","type":"address"},{"internalType":"address","name":"sponsor","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"fulfillPspBeaconUpdate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"fulfillRrpBeaconUpdate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dapiName","type":"bytes32"}],"name":"readDataFeedValueWithDapiName","outputs":[{"internalType":"int224","name":"value","type":"int224"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataFeedId","type":"bytes32"}],"name":"readDataFeedValueWithId","outputs":[{"internalType":"int224","name":"value","type":"int224"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dapiName","type":"bytes32"}],"name":"readDataFeedWithDapiName","outputs":[{"internalType":"int224","name":"value","type":"int224"},{"internalType":"uint32","name":"timestamp","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataFeedId","type":"bytes32"}],"name":"readDataFeedWithId","outputs":[{"internalType":"int224","name":"value","type":"int224"},{"internalType":"uint32","name":"timestamp","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataFeedId","type":"bytes32"},{"internalType":"address","name":"reader","type":"address"}],"name":"readerCanReadDataFeed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"airnode","type":"address"},{"internalType":"bytes32","name":"templateId","type":"bytes32"},{"internalType":"bytes","name":"conditions","type":"bytes"},{"internalType":"address","name":"relayer","type":"address"},{"internalType":"address","name":"sponsor","type":"address"}],"name":"registerBeaconUpdateSubscription","outputs":[{"internalType":"bytes32","name":"subscriptionId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"airnode","type":"address"},{"internalType":"bytes32","name":"templateId","type":"bytes32"},{"internalType":"address","name":"sponsor","type":"address"}],"name":"requestRrpBeaconUpdate","outputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"airnode","type":"address"},{"internalType":"bytes32","name":"templateId","type":"bytes32"},{"internalType":"address","name":"relayer","type":"address"},{"internalType":"address","name":"sponsor","type":"address"}],"name":"requestRrpBeaconUpdateRelayed","outputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dapiName","type":"bytes32"},{"internalType":"bytes32","name":"dataFeedId","type":"bytes32"}],"name":"setDapiName","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"rrpBeaconUpdateRequester","type":"address"},{"internalType":"bool","name":"status","type":"bool"}],"name":"setRrpBeaconUpdatePermissionStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sponsor","type":"address"},{"internalType":"address","name":"updateRequester","type":"address"}],"name":"sponsorToRrpBeaconUpdateRequesterToPermissionStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"subscriptionId","type":"bytes32"}],"name":"subscriptionIdToBeaconId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"beaconIds","type":"bytes32[]"}],"name":"updateBeaconSetWithBeacons","outputs":[{"internalType":"bytes32","name":"beaconSetId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"beaconIds","type":"bytes32[]"},{"internalType":"uint256","name":"updateThresholdInPercentage","type":"uint256"}],"name":"updateBeaconSetWithBeaconsAndReturnCondition","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"airnodes","type":"address[]"},{"internalType":"bytes32[]","name":"templateIds","type":"bytes32[]"},{"internalType":"uint256[]","name":"timestamps","type":"uint256[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"},{"internalType":"bytes[]","name":"signatures","type":"bytes[]"}],"name":"updateBeaconSetWithSignedData","outputs":[{"internalType":"bytes32","name":"beaconSetId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"airnode","type":"address"},{"internalType":"bytes32","name":"beaconId","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"updateBeaconWithSignedData","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DAPI_NAME_SETTER_ROLE_DESCRIPTION()":"fce90be8","HUNDRED_PERCENT()":"6ed93dd0","addUnlimitedReader(address)":"e406f3b2","airnodeProtocol()":"b76f3c15","conditionPspBeaconSetUpdate(bytes32,bytes,bytes)":"d7c0b879","conditionPspBeaconUpdate(bytes32,bytes,bytes)":"dc96acc8","dapiNameSetterRole()":"7512449b","dapiNameToDataFeedId(bytes32)":"8fca9ab9","dataFeedIdToReaderToSetterToIndefiniteWhitelistStatus(bytes32,address,address)":"f60e45d3","dataFeedIdToReaderToWhitelistStatus(bytes32,address)":"d39c8968","deriveBeaconId(address,bytes32)":"04dd3cee","deriveBeaconSetId(bytes32[])":"c4f95dd5","fulfillPspBeaconSetUpdate(bytes32,address,address,address,uint256,bytes,bytes)":"2ce010e3","fulfillPspBeaconUpdate(bytes32,address,address,address,uint256,bytes,bytes)":"206b48f4","fulfillRrpBeaconUpdate(bytes32,uint256,bytes)":"5bc8a5c8","readDataFeedValueWithDapiName(bytes32)":"70c927ca","readDataFeedValueWithId(bytes32)":"58c55edd","readDataFeedWithDapiName(bytes32)":"3af1dbfd","readDataFeedWithId(bytes32)":"a5fc076f","readerCanReadDataFeed(bytes32,address)":"bcb5daec","registerBeaconUpdateSubscription(address,bytes32,bytes,address,address)":"fc3c1f8b","requestRrpBeaconUpdate(address,bytes32,address)":"94212405","requestRrpBeaconUpdateRelayed(address,bytes32,address,address)":"e705882e","setDapiName(bytes32,bytes32)":"91eed085","setRrpBeaconUpdatePermissionStatus(address,bool)":"9e14caa8","sponsorToRrpBeaconUpdateRequesterToPermissionStatus(address,address)":"977cae01","subscriptionIdToBeaconId(bytes32)":"a026658f","updateBeaconSetWithBeacons(bytes32[])":"00aae33f","updateBeaconSetWithBeaconsAndReturnCondition(bytes32[],uint256)":"8e85afe0","updateBeaconSetWithSignedData(address[],bytes32[],uint256[],bytes[],bytes[])":"65101054","updateBeaconWithSignedData(address,bytes32,uint256,bytes,bytes)":"1a0a0b3e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"unlimitedReader\",\"type\":\"address\"}],\"name\":\"AddedUnlimitedReader\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"airnode\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"templateId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"parameters\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"conditions\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"fulfillFunctionId\",\"type\":\"bytes4\"}],\"name\":\"RegisteredBeaconUpdateSubscription\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"beaconId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"airnode\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"templateId\",\"type\":\"bytes32\"}],\"name\":\"RequestedRrpBeaconUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"beaconId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"airnode\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"templateId\",\"type\":\"bytes32\"}],\"name\":\"RequestedRrpBeaconUpdateRelayed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dapiName\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"dataFeedId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SetDapiName\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rrpBeaconUpdateRequester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"SetRrpBeaconUpdatePermissionStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"beaconSetId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"int224\",\"name\":\"value\",\"type\":\"int224\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"}],\"name\":\"UpdatedBeaconSetWithBeacons\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dapiId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"int224\",\"name\":\"value\",\"type\":\"int224\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"}],\"name\":\"UpdatedBeaconSetWithSignedData\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"beaconId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"int224\",\"name\":\"value\",\"type\":\"int224\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"}],\"name\":\"UpdatedBeaconWithPsp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"beaconId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"UpdatedBeaconWithRrp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"beaconId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"UpdatedBeaconWithSignedData\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DAPI_NAME_SETTER_ROLE_DESCRIPTION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HUNDRED_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"unlimitedReader\",\"type\":\"address\"}],\"name\":\"addUnlimitedReader\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airnodeProtocol\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"conditionParameters\",\"type\":\"bytes\"}],\"name\":\"conditionPspBeaconSetUpdate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"conditionParameters\",\"type\":\"bytes\"}],\"name\":\"conditionPspBeaconUpdate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dapiNameSetterRole\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dapiName\",\"type\":\"bytes32\"}],\"name\":\"dapiNameToDataFeedId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataFeedId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"reader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"}],\"name\":\"dataFeedIdToReaderToSetterToIndefiniteWhitelistStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"indefiniteWhitelistStatus\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataFeedId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"reader\",\"type\":\"address\"}],\"name\":\"dataFeedIdToReaderToWhitelistStatus\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"expirationTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint192\",\"name\":\"indefiniteWhitelistCount\",\"type\":\"uint192\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"airnode\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"templateId\",\"type\":\"bytes32\"}],\"name\":\"deriveBeaconId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"beaconId\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"beaconIds\",\"type\":\"bytes32[]\"}],\"name\":\"deriveBeaconSetId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"beaconSetId\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"airnode\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"fulfillPspBeaconSetUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"airnode\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"fulfillPspBeaconUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"fulfillRrpBeaconUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dapiName\",\"type\":\"bytes32\"}],\"name\":\"readDataFeedValueWithDapiName\",\"outputs\":[{\"internalType\":\"int224\",\"name\":\"value\",\"type\":\"int224\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataFeedId\",\"type\":\"bytes32\"}],\"name\":\"readDataFeedValueWithId\",\"outputs\":[{\"internalType\":\"int224\",\"name\":\"value\",\"type\":\"int224\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dapiName\",\"type\":\"bytes32\"}],\"name\":\"readDataFeedWithDapiName\",\"outputs\":[{\"internalType\":\"int224\",\"name\":\"value\",\"type\":\"int224\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataFeedId\",\"type\":\"bytes32\"}],\"name\":\"readDataFeedWithId\",\"outputs\":[{\"internalType\":\"int224\",\"name\":\"value\",\"type\":\"int224\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataFeedId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"reader\",\"type\":\"address\"}],\"name\":\"readerCanReadDataFeed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"airnode\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"templateId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"conditions\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"registerBeaconUpdateSubscription\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"airnode\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"templateId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"requestRrpBeaconUpdate\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"airnode\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"templateId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"requestRrpBeaconUpdateRelayed\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dapiName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataFeedId\",\"type\":\"bytes32\"}],\"name\":\"setDapiName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rrpBeaconUpdateRequester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setRrpBeaconUpdatePermissionStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"updateRequester\",\"type\":\"address\"}],\"name\":\"sponsorToRrpBeaconUpdateRequesterToPermissionStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"}],\"name\":\"subscriptionIdToBeaconId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"beaconIds\",\"type\":\"bytes32[]\"}],\"name\":\"updateBeaconSetWithBeacons\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"beaconSetId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"beaconIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"updateThresholdInPercentage\",\"type\":\"uint256\"}],\"name\":\"updateBeaconSetWithBeaconsAndReturnCondition\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"airnodes\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"templateIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"timestamps\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"}],\"name\":\"updateBeaconSetWithSignedData\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"beaconSetId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"airnode\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"beaconId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"updateBeaconWithSignedData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@api3/airnode-protocol-v1/contracts/dapis/interfaces/IDapiServer.sol\":\"IDapiServer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@api3/airnode-protocol-v1/contracts/dapis/interfaces/IDapiServer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../protocol/interfaces/IAirnodeRequester.sol\\\";\\n\\ninterface IDapiServer is IAirnodeRequester {\\n    event SetRrpBeaconUpdatePermissionStatus(\\n        address indexed sponsor,\\n        address indexed rrpBeaconUpdateRequester,\\n        bool status\\n    );\\n\\n    event RequestedRrpBeaconUpdate(\\n        bytes32 indexed beaconId,\\n        address indexed sponsor,\\n        address indexed requester,\\n        bytes32 requestId,\\n        address airnode,\\n        bytes32 templateId\\n    );\\n\\n    event RequestedRrpBeaconUpdateRelayed(\\n        bytes32 indexed beaconId,\\n        address indexed sponsor,\\n        address indexed requester,\\n        bytes32 requestId,\\n        address airnode,\\n        address relayer,\\n        bytes32 templateId\\n    );\\n\\n    event UpdatedBeaconWithRrp(\\n        bytes32 indexed beaconId,\\n        bytes32 requestId,\\n        int256 value,\\n        uint256 timestamp\\n    );\\n\\n    event RegisteredBeaconUpdateSubscription(\\n        bytes32 indexed subscriptionId,\\n        address airnode,\\n        bytes32 templateId,\\n        bytes parameters,\\n        bytes conditions,\\n        address relayer,\\n        address sponsor,\\n        address requester,\\n        bytes4 fulfillFunctionId\\n    );\\n\\n    event UpdatedBeaconWithPsp(\\n        bytes32 indexed beaconId,\\n        bytes32 subscriptionId,\\n        int224 value,\\n        uint32 timestamp\\n    );\\n\\n    event UpdatedBeaconWithSignedData(\\n        bytes32 indexed beaconId,\\n        int256 value,\\n        uint256 timestamp\\n    );\\n\\n    event UpdatedBeaconSetWithBeacons(\\n        bytes32 indexed beaconSetId,\\n        int224 value,\\n        uint32 timestamp\\n    );\\n\\n    event UpdatedBeaconSetWithSignedData(\\n        bytes32 indexed dapiId,\\n        int224 value,\\n        uint32 timestamp\\n    );\\n\\n    event AddedUnlimitedReader(address indexed unlimitedReader);\\n\\n    event SetDapiName(\\n        bytes32 indexed dapiName,\\n        bytes32 dataFeedId,\\n        address indexed sender\\n    );\\n\\n    function setRrpBeaconUpdatePermissionStatus(\\n        address rrpBeaconUpdateRequester,\\n        bool status\\n    ) external;\\n\\n    function requestRrpBeaconUpdate(\\n        address airnode,\\n        bytes32 templateId,\\n        address sponsor\\n    ) external returns (bytes32 requestId);\\n\\n    function requestRrpBeaconUpdateRelayed(\\n        address airnode,\\n        bytes32 templateId,\\n        address relayer,\\n        address sponsor\\n    ) external returns (bytes32 requestId);\\n\\n    function fulfillRrpBeaconUpdate(\\n        bytes32 requestId,\\n        uint256 timestamp,\\n        bytes calldata data\\n    ) external;\\n\\n    function registerBeaconUpdateSubscription(\\n        address airnode,\\n        bytes32 templateId,\\n        bytes memory conditions,\\n        address relayer,\\n        address sponsor\\n    ) external returns (bytes32 subscriptionId);\\n\\n    function conditionPspBeaconUpdate(\\n        bytes32 subscriptionId,\\n        bytes calldata data,\\n        bytes calldata conditionParameters\\n    ) external view returns (bool);\\n\\n    function fulfillPspBeaconUpdate(\\n        bytes32 subscriptionId,\\n        address airnode,\\n        address relayer,\\n        address sponsor,\\n        uint256 timestamp,\\n        bytes calldata data,\\n        bytes calldata signature\\n    ) external;\\n\\n    function updateBeaconWithSignedData(\\n        address airnode,\\n        bytes32 beaconId,\\n        uint256 timestamp,\\n        bytes calldata data,\\n        bytes calldata signature\\n    ) external;\\n\\n    function updateBeaconSetWithBeacons(bytes32[] memory beaconIds)\\n        external\\n        returns (bytes32 beaconSetId);\\n\\n    function updateBeaconSetWithBeaconsAndReturnCondition(\\n        bytes32[] memory beaconIds,\\n        uint256 updateThresholdInPercentage\\n    ) external returns (bool);\\n\\n    function conditionPspBeaconSetUpdate(\\n        bytes32 subscriptionId,\\n        bytes calldata data,\\n        bytes calldata conditionParameters\\n    ) external returns (bool);\\n\\n    function fulfillPspBeaconSetUpdate(\\n        bytes32 subscriptionId,\\n        address airnode,\\n        address relayer,\\n        address sponsor,\\n        uint256 timestamp,\\n        bytes calldata data,\\n        bytes calldata signature\\n    ) external;\\n\\n    function updateBeaconSetWithSignedData(\\n        address[] memory airnodes,\\n        bytes32[] memory templateIds,\\n        uint256[] memory timestamps,\\n        bytes[] memory data,\\n        bytes[] memory signatures\\n    ) external returns (bytes32 beaconSetId);\\n\\n    function addUnlimitedReader(address unlimitedReader) external;\\n\\n    function setDapiName(bytes32 dapiName, bytes32 dataFeedId) external;\\n\\n    function dapiNameToDataFeedId(bytes32 dapiName)\\n        external\\n        view\\n        returns (bytes32);\\n\\n    function readDataFeedWithId(bytes32 dataFeedId)\\n        external\\n        view\\n        returns (int224 value, uint32 timestamp);\\n\\n    function readDataFeedValueWithId(bytes32 dataFeedId)\\n        external\\n        view\\n        returns (int224 value);\\n\\n    function readDataFeedWithDapiName(bytes32 dapiName)\\n        external\\n        view\\n        returns (int224 value, uint32 timestamp);\\n\\n    function readDataFeedValueWithDapiName(bytes32 dapiName)\\n        external\\n        view\\n        returns (int224 value);\\n\\n    function readerCanReadDataFeed(bytes32 dataFeedId, address reader)\\n        external\\n        view\\n        returns (bool);\\n\\n    function dataFeedIdToReaderToWhitelistStatus(\\n        bytes32 dataFeedId,\\n        address reader\\n    )\\n        external\\n        view\\n        returns (uint64 expirationTimestamp, uint192 indefiniteWhitelistCount);\\n\\n    function dataFeedIdToReaderToSetterToIndefiniteWhitelistStatus(\\n        bytes32 dataFeedId,\\n        address reader,\\n        address setter\\n    ) external view returns (bool indefiniteWhitelistStatus);\\n\\n    function deriveBeaconId(address airnode, bytes32 templateId)\\n        external\\n        pure\\n        returns (bytes32 beaconId);\\n\\n    function deriveBeaconSetId(bytes32[] memory beaconIds)\\n        external\\n        pure\\n        returns (bytes32 beaconSetId);\\n\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DAPI_NAME_SETTER_ROLE_DESCRIPTION()\\n        external\\n        view\\n        returns (string memory);\\n\\n    // solhint-disable-next-line func-name-mixedcase\\n    function HUNDRED_PERCENT() external view returns (uint256);\\n\\n    function dapiNameSetterRole() external view returns (bytes32);\\n\\n    function sponsorToRrpBeaconUpdateRequesterToPermissionStatus(\\n        address sponsor,\\n        address updateRequester\\n    ) external view returns (bool);\\n\\n    function subscriptionIdToBeaconId(bytes32 subscriptionId)\\n        external\\n        view\\n        returns (bytes32);\\n}\\n\",\"keccak256\":\"0x6a09876c58ae7ba79531eb8276d6b9501add508c73b86a18b1bf641da194391f\",\"license\":\"MIT\"},\"@api3/airnode-protocol-v1/contracts/protocol/interfaces/IAirnodeRequester.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IAirnodeRequester {\\n    function airnodeProtocol() external view returns (address);\\n}\\n\",\"keccak256\":\"0xa2412446bb860cfaafa447d99d0f41ba6977e7f2b6b743a09c16b1ff58186309\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@api3/airnode-protocol-v1/contracts/protocol/interfaces/IAirnodeRequester.sol":{"IAirnodeRequester":{"abi":[{"inputs":[],"name":"airnodeProtocol","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"airnodeProtocol()":"b76f3c15"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"airnodeProtocol\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@api3/airnode-protocol-v1/contracts/protocol/interfaces/IAirnodeRequester.sol\":\"IAirnodeRequester\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@api3/airnode-protocol-v1/contracts/protocol/interfaces/IAirnodeRequester.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IAirnodeRequester {\\n    function airnodeProtocol() external view returns (address);\\n}\\n\",\"keccak256\":\"0xa2412446bb860cfaafa447d99d0f41ba6977e7f2b6b743a09c16b1ff58186309\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":479,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_621":{"entryPoint":null,"id":621,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":292,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":475,"id":null,"parameterSlots":2,"returnSlots":2},"extract_byte_array_length":{"entryPoint":581,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":270,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1985:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:14"},"nodeType":"YulFunctionCall","src":"66:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:14"},"nodeType":"YulFunctionCall","src":"56:31:14"},"nodeType":"YulExpressionStatement","src":"56:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:14"},"nodeType":"YulFunctionCall","src":"96:15:14"},"nodeType":"YulExpressionStatement","src":"96:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:14"},"nodeType":"YulFunctionCall","src":"120:15:14"},"nodeType":"YulExpressionStatement","src":"120:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:14"},{"body":{"nodeType":"YulBlock","src":"210:821:14","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:14"},"nodeType":"YulFunctionCall","src":"261:12:14"},"nodeType":"YulExpressionStatement","src":"261:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:14"},"nodeType":"YulFunctionCall","src":"234:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:14"},"nodeType":"YulFunctionCall","src":"230:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:14"},"nodeType":"YulFunctionCall","src":"223:35:14"},"nodeType":"YulIf","src":"220:55:14"},{"nodeType":"YulVariableDeclaration","src":"284:23:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:14"},"nodeType":"YulFunctionCall","src":"294:13:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:14","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:14"},"nodeType":"YulFunctionCall","src":"330:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:14"},"nodeType":"YulFunctionCall","src":"326:18:14"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:14"},"nodeType":"YulFunctionCall","src":"369:18:14"},"nodeType":"YulExpressionStatement","src":"369:18:14"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:14"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:14"},"nodeType":"YulFunctionCall","src":"356:10:14"},"nodeType":"YulIf","src":"353:36:14"},{"nodeType":"YulVariableDeclaration","src":"398:17:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:14"},"nodeType":"YulFunctionCall","src":"408:7:14"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:14"},"nodeType":"YulFunctionCall","src":"438:9:14"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:14"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:14"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:14"},"nodeType":"YulFunctionCall","src":"498:13:14"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:14"},"nodeType":"YulFunctionCall","src":"494:22:14"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:14","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:14"},"nodeType":"YulFunctionCall","src":"490:31:14"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:14"},"nodeType":"YulFunctionCall","src":"486:40:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:14"},"nodeType":"YulFunctionCall","src":"474:53:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:14"},"nodeType":"YulFunctionCall","src":"588:18:14"},"nodeType":"YulExpressionStatement","src":"588:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:14"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:14"},"nodeType":"YulFunctionCall","src":"542:18:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:14"},"nodeType":"YulFunctionCall","src":"562:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:14"},"nodeType":"YulFunctionCall","src":"539:46:14"},"nodeType":"YulIf","src":"536:72:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:14"},"nodeType":"YulFunctionCall","src":"617:22:14"},"nodeType":"YulExpressionStatement","src":"617:22:14"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:14"},"nodeType":"YulFunctionCall","src":"648:18:14"},"nodeType":"YulExpressionStatement","src":"648:18:14"},{"nodeType":"YulVariableDeclaration","src":"675:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:14","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:14"},"nodeType":"YulFunctionCall","src":"737:12:14"},"nodeType":"YulExpressionStatement","src":"737:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:14"},"nodeType":"YulFunctionCall","src":"708:15:14"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:14"},"nodeType":"YulFunctionCall","src":"704:24:14"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:14"},"nodeType":"YulFunctionCall","src":"701:33:14"},"nodeType":"YulIf","src":"698:53:14"},{"nodeType":"YulVariableDeclaration","src":"760:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:14"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:14"},"nodeType":"YulFunctionCall","src":"850:14:14"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:14"},"nodeType":"YulFunctionCall","src":"846:23:14"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:14"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:14"},"nodeType":"YulFunctionCall","src":"881:14:14"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:14"},"nodeType":"YulFunctionCall","src":"877:23:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:14"},"nodeType":"YulFunctionCall","src":"871:30:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:14"},"nodeType":"YulFunctionCall","src":"839:63:14"},"nodeType":"YulExpressionStatement","src":"839:63:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:14"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:14"},"nodeType":"YulFunctionCall","src":"787:9:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:14","statements":[{"nodeType":"YulAssignment","src":"799:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:14"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:14"},"nodeType":"YulFunctionCall","src":"804:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:14","statements":[]},"src":"779:133:14"},{"body":{"nodeType":"YulBlock","src":"942:59:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"971:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"979:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:14"},"nodeType":"YulFunctionCall","src":"967:15:14"},{"name":"_4","nodeType":"YulIdentifier","src":"984:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"963:3:14"},"nodeType":"YulFunctionCall","src":"963:24:14"},{"kind":"number","nodeType":"YulLiteral","src":"989:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"956:6:14"},"nodeType":"YulFunctionCall","src":"956:35:14"},"nodeType":"YulExpressionStatement","src":"956:35:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"927:1:14"},{"name":"_1","nodeType":"YulIdentifier","src":"930:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"924:2:14"},"nodeType":"YulFunctionCall","src":"924:9:14"},"nodeType":"YulIf","src":"921:80:14"},{"nodeType":"YulAssignment","src":"1010:15:14","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1019:6:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1010:5:14"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:14","type":""}],"src":"146:885:14"},{"body":{"nodeType":"YulBlock","src":"1154:444:14","statements":[{"body":{"nodeType":"YulBlock","src":"1200:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1209:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1212:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1202:6:14"},"nodeType":"YulFunctionCall","src":"1202:12:14"},"nodeType":"YulExpressionStatement","src":"1202:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1175:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1184:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1171:3:14"},"nodeType":"YulFunctionCall","src":"1171:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1196:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1167:3:14"},"nodeType":"YulFunctionCall","src":"1167:32:14"},"nodeType":"YulIf","src":"1164:52:14"},{"nodeType":"YulVariableDeclaration","src":"1225:30:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1245:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1239:5:14"},"nodeType":"YulFunctionCall","src":"1239:16:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1229:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1264:28:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1282:2:14","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1278:3:14"},"nodeType":"YulFunctionCall","src":"1278:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"1290:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1274:3:14"},"nodeType":"YulFunctionCall","src":"1274:18:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1268:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1319:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1328:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1331:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1321:6:14"},"nodeType":"YulFunctionCall","src":"1321:12:14"},"nodeType":"YulExpressionStatement","src":"1321:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1307:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1315:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1304:2:14"},"nodeType":"YulFunctionCall","src":"1304:14:14"},"nodeType":"YulIf","src":"1301:34:14"},{"nodeType":"YulAssignment","src":"1344:71:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1387:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"1398:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1383:3:14"},"nodeType":"YulFunctionCall","src":"1383:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1407:7:14"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1354:28:14"},"nodeType":"YulFunctionCall","src":"1354:61:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1344:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"1424:41:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1450:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1461:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1446:3:14"},"nodeType":"YulFunctionCall","src":"1446:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1440:5:14"},"nodeType":"YulFunctionCall","src":"1440:25:14"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1428:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1494:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1503:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1506:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1496:6:14"},"nodeType":"YulFunctionCall","src":"1496:12:14"},"nodeType":"YulExpressionStatement","src":"1496:12:14"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1480:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1490:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1477:2:14"},"nodeType":"YulFunctionCall","src":"1477:16:14"},"nodeType":"YulIf","src":"1474:36:14"},{"nodeType":"YulAssignment","src":"1519:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1562:9:14"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1573:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1558:3:14"},"nodeType":"YulFunctionCall","src":"1558:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1584:7:14"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1529:28:14"},"nodeType":"YulFunctionCall","src":"1529:63:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1519:6:14"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1112:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1123:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1135:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1143:6:14","type":""}],"src":"1036:562:14"},{"body":{"nodeType":"YulBlock","src":"1658:325:14","statements":[{"nodeType":"YulAssignment","src":"1668:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1682:1:14","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1685:4:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1678:3:14"},"nodeType":"YulFunctionCall","src":"1678:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1668:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"1699:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1729:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"1735:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1725:3:14"},"nodeType":"YulFunctionCall","src":"1725:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1703:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1776:31:14","statements":[{"nodeType":"YulAssignment","src":"1778:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1792:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1800:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1788:3:14"},"nodeType":"YulFunctionCall","src":"1788:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1778:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1756:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1749:6:14"},"nodeType":"YulFunctionCall","src":"1749:26:14"},"nodeType":"YulIf","src":"1746:61:14"},{"body":{"nodeType":"YulBlock","src":"1866:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1887:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1894:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1899:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1890:3:14"},"nodeType":"YulFunctionCall","src":"1890:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1880:6:14"},"nodeType":"YulFunctionCall","src":"1880:31:14"},"nodeType":"YulExpressionStatement","src":"1880:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1931:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1934:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1924:6:14"},"nodeType":"YulFunctionCall","src":"1924:15:14"},"nodeType":"YulExpressionStatement","src":"1924:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1959:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1962:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1952:6:14"},"nodeType":"YulFunctionCall","src":"1952:15:14"},"nodeType":"YulExpressionStatement","src":"1952:15:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1822:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1845:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1853:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1842:2:14"},"nodeType":"YulFunctionCall","src":"1842:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1819:2:14"},"nodeType":"YulFunctionCall","src":"1819:38:14"},"nodeType":"YulIf","src":"1816:161:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1638:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1647:6:14","type":""}],"src":"1603:380:14"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000b5638038062000b568339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b6108c480620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610701565b60405180910390f35b6100df6100da366004610772565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461079c565b61026e565b604051601281526020016100c3565b6100df610131366004610772565b61031d565b6100f36101443660046107d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df610175366004610772565b610368565b6100df610188366004610772565b610401565b6100f361019b3660046107fa565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061082d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061082d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610354908690610868565b61040e565b6060600480546101d59061082d565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a7908490610868565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072e57858101830151858201604001528201610712565b81811115610740576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461076d57600080fd5b919050565b6000806040838503121561078557600080fd5b61078e83610756565b946020939093013593505050565b6000806000606084860312156107b157600080fd5b6107ba84610756565b92506107c860208501610756565b9150604084013590509250925092565b6000602082840312156107ea57600080fd5b6107f382610756565b9392505050565b6000806040838503121561080d57600080fd5b61081683610756565b915061082460208401610756565b90509250929050565b600181811c9082168061084157607f821691505b6020821081141561086257634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561088957634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220d0a033f0b8202e53791d6cab7e6df2a6b512bfd76d3ab1661aeb5aa0b788b22864736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB56 CODESIZE SUB DUP1 PUSH3 0xB56 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x245 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH3 0x153 PUSH3 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x17E JUMPI PUSH3 0x17E PUSH3 0x10E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1BF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x215 DUP7 DUP4 DUP8 ADD PUSH3 0x124 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x23B DUP6 DUP3 DUP7 ADD PUSH3 0x124 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x27C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C4 DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x868 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x712 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78E DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7BA DUP5 PUSH2 0x756 JUMP JUMPDEST SWAP3 POP PUSH2 0x7C8 PUSH1 0x20 DUP6 ADD PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F3 DUP3 PUSH2 0x756 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x816 DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH2 0x824 PUSH1 0x20 DUP5 ADD PUSH2 0x756 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x841 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x862 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x889 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 LOG0 CALLER CREATE 0xB8 KECCAK256 0x2E MSTORE8 PUSH26 0x1D6CAB7E6DF2A6B512BFD76D3AB1661AEB5AA0B788B22864736F PUSH13 0x63430008090033000000000000 ","sourceMap":"1388:10416:5:-:0;;;1963:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2029:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2052:17:5;;;;:7;;:17;;;;;:::i;:::-;;1963:113;;1388:10416;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1388:10416:5;;;-1:-1:-1;1388:10416:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:14;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:14;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:14;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:14:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:14;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;1388:10416:5;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1121":{"entryPoint":null,"id":1121,"parameterSlots":3,"returnSlots":0},"@_approve_1099":{"entryPoint":1038,"id":1099,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1110":{"entryPoint":null,"id":1110,"parameterSlots":3,"returnSlots":0},"@_msgSender_1237":{"entryPoint":null,"id":1237,"parameterSlots":0,"returnSlots":1},"@_transfer_926":{"entryPoint":1330,"id":926,"parameterSlots":3,"returnSlots":0},"@allowance_714":{"entryPoint":null,"id":714,"parameterSlots":2,"returnSlots":1},"@approve_735":{"entryPoint":600,"id":735,"parameterSlots":2,"returnSlots":1},"@balanceOf_675":{"entryPoint":null,"id":675,"parameterSlots":1,"returnSlots":1},"@decimals_651":{"entryPoint":null,"id":651,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_849":{"entryPoint":872,"id":849,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_810":{"entryPoint":797,"id":810,"parameterSlots":2,"returnSlots":1},"@name_631":{"entryPoint":454,"id":631,"parameterSlots":0,"returnSlots":1},"@symbol_641":{"entryPoint":857,"id":641,"parameterSlots":0,"returnSlots":1},"@totalSupply_661":{"entryPoint":null,"id":661,"parameterSlots":0,"returnSlots":1},"@transferFrom_783":{"entryPoint":622,"id":783,"parameterSlots":3,"returnSlots":1},"@transfer_696":{"entryPoint":1025,"id":696,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1878,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2008,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2042,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1948,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1906,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1793,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2152,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2093,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5857:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:476:14","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:14","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:14","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:14"},"nodeType":"YulFunctionCall","src":"166:21:14"},"nodeType":"YulExpressionStatement","src":"166:21:14"},{"nodeType":"YulVariableDeclaration","src":"196:27:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:14"},"nodeType":"YulFunctionCall","src":"210:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:14"},"nodeType":"YulFunctionCall","src":"239:18:14"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:14"},"nodeType":"YulFunctionCall","src":"232:34:14"},"nodeType":"YulExpressionStatement","src":"232:34:14"},{"nodeType":"YulVariableDeclaration","src":"275:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:14"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:14"},"nodeType":"YulFunctionCall","src":"369:17:14"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:14"},"nodeType":"YulFunctionCall","src":"365:26:14"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:14"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:14"},"nodeType":"YulFunctionCall","src":"403:14:14"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:14"},"nodeType":"YulFunctionCall","src":"399:23:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:14"},"nodeType":"YulFunctionCall","src":"393:30:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:14"},"nodeType":"YulFunctionCall","src":"358:66:14"},"nodeType":"YulExpressionStatement","src":"358:66:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:14"},"nodeType":"YulFunctionCall","src":"302:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:14","statements":[{"nodeType":"YulAssignment","src":"318:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:14"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:14"},"nodeType":"YulFunctionCall","src":"323:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:14","statements":[]},"src":"294:140:14"},{"body":{"nodeType":"YulBlock","src":"468:66:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"497:9:14"},{"name":"length","nodeType":"YulIdentifier","src":"508:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"493:3:14"},"nodeType":"YulFunctionCall","src":"493:22:14"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"489:3:14"},"nodeType":"YulFunctionCall","src":"489:31:14"},{"kind":"number","nodeType":"YulLiteral","src":"522:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"482:6:14"},"nodeType":"YulFunctionCall","src":"482:42:14"},"nodeType":"YulExpressionStatement","src":"482:42:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"449:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"452:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"446:2:14"},"nodeType":"YulFunctionCall","src":"446:13:14"},"nodeType":"YulIf","src":"443:91:14"},{"nodeType":"YulAssignment","src":"543:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:14"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"578:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"586:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"574:3:14"},"nodeType":"YulFunctionCall","src":"574:15:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"595:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"591:3:14"},"nodeType":"YulFunctionCall","src":"591:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"570:3:14"},"nodeType":"YulFunctionCall","src":"570:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"555:3:14"},"nodeType":"YulFunctionCall","src":"555:45:14"},{"kind":"number","nodeType":"YulLiteral","src":"602:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"551:3:14"},"nodeType":"YulFunctionCall","src":"551:54:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"543:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:14","type":""}],"src":"14:597:14"},{"body":{"nodeType":"YulBlock","src":"665:124:14","statements":[{"nodeType":"YulAssignment","src":"675:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"697:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"684:12:14"},"nodeType":"YulFunctionCall","src":"684:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"675:5:14"}]},{"body":{"nodeType":"YulBlock","src":"767:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"776:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"779:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"769:6:14"},"nodeType":"YulFunctionCall","src":"769:12:14"},"nodeType":"YulExpressionStatement","src":"769:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"726:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"737:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"757:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"748:3:14"},"nodeType":"YulFunctionCall","src":"748:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"761:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"744:3:14"},"nodeType":"YulFunctionCall","src":"744:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"733:3:14"},"nodeType":"YulFunctionCall","src":"733:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"723:2:14"},"nodeType":"YulFunctionCall","src":"723:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"716:6:14"},"nodeType":"YulFunctionCall","src":"716:50:14"},"nodeType":"YulIf","src":"713:70:14"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"655:5:14","type":""}],"src":"616:173:14"},{"body":{"nodeType":"YulBlock","src":"881:167:14","statements":[{"body":{"nodeType":"YulBlock","src":"927:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"929:6:14"},"nodeType":"YulFunctionCall","src":"929:12:14"},"nodeType":"YulExpressionStatement","src":"929:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"902:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"911:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"898:3:14"},"nodeType":"YulFunctionCall","src":"898:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"923:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"894:3:14"},"nodeType":"YulFunctionCall","src":"894:32:14"},"nodeType":"YulIf","src":"891:52:14"},{"nodeType":"YulAssignment","src":"952:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"981:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"962:18:14"},"nodeType":"YulFunctionCall","src":"962:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"952:6:14"}]},{"nodeType":"YulAssignment","src":"1000:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1027:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1038:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:14"},"nodeType":"YulFunctionCall","src":"1023:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1010:12:14"},"nodeType":"YulFunctionCall","src":"1010:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1000:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"839:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"850:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"862:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"870:6:14","type":""}],"src":"794:254:14"},{"body":{"nodeType":"YulBlock","src":"1148:92:14","statements":[{"nodeType":"YulAssignment","src":"1158:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:14"},"nodeType":"YulFunctionCall","src":"1166:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:14"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1225:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1218:6:14"},"nodeType":"YulFunctionCall","src":"1218:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1211:6:14"},"nodeType":"YulFunctionCall","src":"1211:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1193:6:14"},"nodeType":"YulFunctionCall","src":"1193:41:14"},"nodeType":"YulExpressionStatement","src":"1193:41:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1117:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1128:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1139:4:14","type":""}],"src":"1053:187:14"},{"body":{"nodeType":"YulBlock","src":"1346:76:14","statements":[{"nodeType":"YulAssignment","src":"1356:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1368:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1379:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1364:3:14"},"nodeType":"YulFunctionCall","src":"1364:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1356:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1398:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"1409:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1391:6:14"},"nodeType":"YulFunctionCall","src":"1391:25:14"},"nodeType":"YulExpressionStatement","src":"1391:25:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1315:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1326:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1337:4:14","type":""}],"src":"1245:177:14"},{"body":{"nodeType":"YulBlock","src":"1531:224:14","statements":[{"body":{"nodeType":"YulBlock","src":"1577:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1586:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1589:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1579:6:14"},"nodeType":"YulFunctionCall","src":"1579:12:14"},"nodeType":"YulExpressionStatement","src":"1579:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1552:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1561:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1548:3:14"},"nodeType":"YulFunctionCall","src":"1548:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1573:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1544:3:14"},"nodeType":"YulFunctionCall","src":"1544:32:14"},"nodeType":"YulIf","src":"1541:52:14"},{"nodeType":"YulAssignment","src":"1602:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1631:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1612:18:14"},"nodeType":"YulFunctionCall","src":"1612:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1602:6:14"}]},{"nodeType":"YulAssignment","src":"1650:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1683:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1694:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1679:3:14"},"nodeType":"YulFunctionCall","src":"1679:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1660:18:14"},"nodeType":"YulFunctionCall","src":"1660:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1650:6:14"}]},{"nodeType":"YulAssignment","src":"1707:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1734:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1745:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:14"},"nodeType":"YulFunctionCall","src":"1730:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1717:12:14"},"nodeType":"YulFunctionCall","src":"1717:32:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1707:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1481:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1492:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1504:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1512:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1520:6:14","type":""}],"src":"1427:328:14"},{"body":{"nodeType":"YulBlock","src":"1857:87:14","statements":[{"nodeType":"YulAssignment","src":"1867:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1879:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1890:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1875:3:14"},"nodeType":"YulFunctionCall","src":"1875:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1867:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1909:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1924:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1932:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1920:3:14"},"nodeType":"YulFunctionCall","src":"1920:17:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1902:6:14"},"nodeType":"YulFunctionCall","src":"1902:36:14"},"nodeType":"YulExpressionStatement","src":"1902:36:14"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1826:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1837:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1848:4:14","type":""}],"src":"1760:184:14"},{"body":{"nodeType":"YulBlock","src":"2019:116:14","statements":[{"body":{"nodeType":"YulBlock","src":"2065:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2074:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2077:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2067:6:14"},"nodeType":"YulFunctionCall","src":"2067:12:14"},"nodeType":"YulExpressionStatement","src":"2067:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2040:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2049:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2036:3:14"},"nodeType":"YulFunctionCall","src":"2036:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2061:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2032:3:14"},"nodeType":"YulFunctionCall","src":"2032:32:14"},"nodeType":"YulIf","src":"2029:52:14"},{"nodeType":"YulAssignment","src":"2090:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2119:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2100:18:14"},"nodeType":"YulFunctionCall","src":"2100:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2090:6:14"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1985:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1996:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2008:6:14","type":""}],"src":"1949:186:14"},{"body":{"nodeType":"YulBlock","src":"2227:173:14","statements":[{"body":{"nodeType":"YulBlock","src":"2273:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2282:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2285:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2275:6:14"},"nodeType":"YulFunctionCall","src":"2275:12:14"},"nodeType":"YulExpressionStatement","src":"2275:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2248:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2257:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2244:3:14"},"nodeType":"YulFunctionCall","src":"2244:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2269:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2240:3:14"},"nodeType":"YulFunctionCall","src":"2240:32:14"},"nodeType":"YulIf","src":"2237:52:14"},{"nodeType":"YulAssignment","src":"2298:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2327:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2308:18:14"},"nodeType":"YulFunctionCall","src":"2308:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2298:6:14"}]},{"nodeType":"YulAssignment","src":"2346:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2379:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2390:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2375:3:14"},"nodeType":"YulFunctionCall","src":"2375:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2356:18:14"},"nodeType":"YulFunctionCall","src":"2356:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2346:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2185:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2196:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2208:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2216:6:14","type":""}],"src":"2140:260:14"},{"body":{"nodeType":"YulBlock","src":"2460:325:14","statements":[{"nodeType":"YulAssignment","src":"2470:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2484:1:14","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2487:4:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2480:3:14"},"nodeType":"YulFunctionCall","src":"2480:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2470:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"2501:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2531:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"2537:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2527:3:14"},"nodeType":"YulFunctionCall","src":"2527:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2505:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2578:31:14","statements":[{"nodeType":"YulAssignment","src":"2580:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2594:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2602:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2590:3:14"},"nodeType":"YulFunctionCall","src":"2590:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2580:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2558:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2551:6:14"},"nodeType":"YulFunctionCall","src":"2551:26:14"},"nodeType":"YulIf","src":"2548:61:14"},{"body":{"nodeType":"YulBlock","src":"2668:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2689:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2696:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2701:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2692:3:14"},"nodeType":"YulFunctionCall","src":"2692:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2682:6:14"},"nodeType":"YulFunctionCall","src":"2682:31:14"},"nodeType":"YulExpressionStatement","src":"2682:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2733:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2736:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2726:6:14"},"nodeType":"YulFunctionCall","src":"2726:15:14"},"nodeType":"YulExpressionStatement","src":"2726:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2761:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2764:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2754:6:14"},"nodeType":"YulFunctionCall","src":"2754:15:14"},"nodeType":"YulExpressionStatement","src":"2754:15:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2624:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2647:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2655:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2644:2:14"},"nodeType":"YulFunctionCall","src":"2644:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2621:2:14"},"nodeType":"YulFunctionCall","src":"2621:38:14"},"nodeType":"YulIf","src":"2618:161:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2440:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2449:6:14","type":""}],"src":"2405:380:14"},{"body":{"nodeType":"YulBlock","src":"2964:230:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2981:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2992:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2974:6:14"},"nodeType":"YulFunctionCall","src":"2974:21:14"},"nodeType":"YulExpressionStatement","src":"2974:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3015:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3026:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3011:3:14"},"nodeType":"YulFunctionCall","src":"3011:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"3031:2:14","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3004:6:14"},"nodeType":"YulFunctionCall","src":"3004:30:14"},"nodeType":"YulExpressionStatement","src":"3004:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3054:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3065:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3050:3:14"},"nodeType":"YulFunctionCall","src":"3050:18:14"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732061","kind":"string","nodeType":"YulLiteral","src":"3070:34:14","type":"","value":"ERC20: transfer amount exceeds a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3043:6:14"},"nodeType":"YulFunctionCall","src":"3043:62:14"},"nodeType":"YulExpressionStatement","src":"3043:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3125:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3136:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3121:3:14"},"nodeType":"YulFunctionCall","src":"3121:18:14"},{"hexValue":"6c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"3141:10:14","type":"","value":"llowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3114:6:14"},"nodeType":"YulFunctionCall","src":"3114:38:14"},"nodeType":"YulExpressionStatement","src":"3114:38:14"},{"nodeType":"YulAssignment","src":"3161:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3173:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3184:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3169:3:14"},"nodeType":"YulFunctionCall","src":"3169:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3161:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2941:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2955:4:14","type":""}],"src":"2790:404:14"},{"body":{"nodeType":"YulBlock","src":"3247:177:14","statements":[{"body":{"nodeType":"YulBlock","src":"3282:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3303:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3310:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3315:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3306:3:14"},"nodeType":"YulFunctionCall","src":"3306:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3296:6:14"},"nodeType":"YulFunctionCall","src":"3296:31:14"},"nodeType":"YulExpressionStatement","src":"3296:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3347:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3350:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3340:6:14"},"nodeType":"YulFunctionCall","src":"3340:15:14"},"nodeType":"YulExpressionStatement","src":"3340:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3375:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3378:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3368:6:14"},"nodeType":"YulFunctionCall","src":"3368:15:14"},"nodeType":"YulExpressionStatement","src":"3368:15:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3263:1:14"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3270:1:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3266:3:14"},"nodeType":"YulFunctionCall","src":"3266:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3260:2:14"},"nodeType":"YulFunctionCall","src":"3260:13:14"},"nodeType":"YulIf","src":"3257:136:14"},{"nodeType":"YulAssignment","src":"3402:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3413:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"3416:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3409:3:14"},"nodeType":"YulFunctionCall","src":"3409:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3402:3:14"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3230:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"3233:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3239:3:14","type":""}],"src":"3199:225:14"},{"body":{"nodeType":"YulBlock","src":"3603:227:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3620:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3631:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3613:6:14"},"nodeType":"YulFunctionCall","src":"3613:21:14"},"nodeType":"YulExpressionStatement","src":"3613:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3654:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3665:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3650:3:14"},"nodeType":"YulFunctionCall","src":"3650:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"3670:2:14","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3643:6:14"},"nodeType":"YulFunctionCall","src":"3643:30:14"},"nodeType":"YulExpressionStatement","src":"3643:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3693:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3704:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3689:3:14"},"nodeType":"YulFunctionCall","src":"3689:18:14"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3709:34:14","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3682:6:14"},"nodeType":"YulFunctionCall","src":"3682:62:14"},"nodeType":"YulExpressionStatement","src":"3682:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3764:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3775:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3760:3:14"},"nodeType":"YulFunctionCall","src":"3760:18:14"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3780:7:14","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3753:6:14"},"nodeType":"YulFunctionCall","src":"3753:35:14"},"nodeType":"YulExpressionStatement","src":"3753:35:14"},{"nodeType":"YulAssignment","src":"3797:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3809:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3820:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3805:3:14"},"nodeType":"YulFunctionCall","src":"3805:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3797:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3580:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3594:4:14","type":""}],"src":"3429:401:14"},{"body":{"nodeType":"YulBlock","src":"4009:226:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4026:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4037:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4019:6:14"},"nodeType":"YulFunctionCall","src":"4019:21:14"},"nodeType":"YulExpressionStatement","src":"4019:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4060:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4071:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4056:3:14"},"nodeType":"YulFunctionCall","src":"4056:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"4076:2:14","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4049:6:14"},"nodeType":"YulFunctionCall","src":"4049:30:14"},"nodeType":"YulExpressionStatement","src":"4049:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4099:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4110:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4095:3:14"},"nodeType":"YulFunctionCall","src":"4095:18:14"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"4115:34:14","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4088:6:14"},"nodeType":"YulFunctionCall","src":"4088:62:14"},"nodeType":"YulExpressionStatement","src":"4088:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4170:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4181:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4166:3:14"},"nodeType":"YulFunctionCall","src":"4166:18:14"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"4186:6:14","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4159:6:14"},"nodeType":"YulFunctionCall","src":"4159:34:14"},"nodeType":"YulExpressionStatement","src":"4159:34:14"},{"nodeType":"YulAssignment","src":"4202:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4214:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4225:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4210:3:14"},"nodeType":"YulFunctionCall","src":"4210:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4202:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3986:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4000:4:14","type":""}],"src":"3835:400:14"},{"body":{"nodeType":"YulBlock","src":"4414:224:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4431:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4442:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4424:6:14"},"nodeType":"YulFunctionCall","src":"4424:21:14"},"nodeType":"YulExpressionStatement","src":"4424:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4465:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4476:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4461:3:14"},"nodeType":"YulFunctionCall","src":"4461:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"4481:2:14","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4454:6:14"},"nodeType":"YulFunctionCall","src":"4454:30:14"},"nodeType":"YulExpressionStatement","src":"4454:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4504:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4515:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4500:3:14"},"nodeType":"YulFunctionCall","src":"4500:18:14"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4520:34:14","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4493:6:14"},"nodeType":"YulFunctionCall","src":"4493:62:14"},"nodeType":"YulExpressionStatement","src":"4493:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4575:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4586:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4571:3:14"},"nodeType":"YulFunctionCall","src":"4571:18:14"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4591:4:14","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4564:6:14"},"nodeType":"YulFunctionCall","src":"4564:32:14"},"nodeType":"YulExpressionStatement","src":"4564:32:14"},{"nodeType":"YulAssignment","src":"4605:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4617:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4628:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4613:3:14"},"nodeType":"YulFunctionCall","src":"4613:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4605:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4391:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4405:4:14","type":""}],"src":"4240:398:14"},{"body":{"nodeType":"YulBlock","src":"4817:227:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4834:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4845:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4827:6:14"},"nodeType":"YulFunctionCall","src":"4827:21:14"},"nodeType":"YulExpressionStatement","src":"4827:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4868:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4879:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4864:3:14"},"nodeType":"YulFunctionCall","src":"4864:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"4884:2:14","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4857:6:14"},"nodeType":"YulFunctionCall","src":"4857:30:14"},"nodeType":"YulExpressionStatement","src":"4857:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4907:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4918:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4903:3:14"},"nodeType":"YulFunctionCall","src":"4903:18:14"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"4923:34:14","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4896:6:14"},"nodeType":"YulFunctionCall","src":"4896:62:14"},"nodeType":"YulExpressionStatement","src":"4896:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4978:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4989:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4974:3:14"},"nodeType":"YulFunctionCall","src":"4974:18:14"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"4994:7:14","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4967:6:14"},"nodeType":"YulFunctionCall","src":"4967:35:14"},"nodeType":"YulExpressionStatement","src":"4967:35:14"},{"nodeType":"YulAssignment","src":"5011:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5023:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5034:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5019:3:14"},"nodeType":"YulFunctionCall","src":"5019:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5011:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4794:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4808:4:14","type":""}],"src":"4643:401:14"},{"body":{"nodeType":"YulBlock","src":"5223:225:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5240:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5251:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5233:6:14"},"nodeType":"YulFunctionCall","src":"5233:21:14"},"nodeType":"YulExpressionStatement","src":"5233:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5274:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5285:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5270:3:14"},"nodeType":"YulFunctionCall","src":"5270:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"5290:2:14","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5263:6:14"},"nodeType":"YulFunctionCall","src":"5263:30:14"},"nodeType":"YulExpressionStatement","src":"5263:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5313:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5324:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5309:3:14"},"nodeType":"YulFunctionCall","src":"5309:18:14"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5329:34:14","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5302:6:14"},"nodeType":"YulFunctionCall","src":"5302:62:14"},"nodeType":"YulExpressionStatement","src":"5302:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5395:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5380:3:14"},"nodeType":"YulFunctionCall","src":"5380:18:14"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5400:5:14","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5373:6:14"},"nodeType":"YulFunctionCall","src":"5373:33:14"},"nodeType":"YulExpressionStatement","src":"5373:33:14"},{"nodeType":"YulAssignment","src":"5415:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5427:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5438:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5423:3:14"},"nodeType":"YulFunctionCall","src":"5423:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5415:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5200:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5214:4:14","type":""}],"src":"5049:399:14"},{"body":{"nodeType":"YulBlock","src":"5627:228:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5644:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5655:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5637:6:14"},"nodeType":"YulFunctionCall","src":"5637:21:14"},"nodeType":"YulExpressionStatement","src":"5637:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5678:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5689:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5674:3:14"},"nodeType":"YulFunctionCall","src":"5674:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"5694:2:14","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5667:6:14"},"nodeType":"YulFunctionCall","src":"5667:30:14"},"nodeType":"YulExpressionStatement","src":"5667:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5717:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5728:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5713:3:14"},"nodeType":"YulFunctionCall","src":"5713:18:14"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5733:34:14","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:14"},"nodeType":"YulFunctionCall","src":"5706:62:14"},"nodeType":"YulExpressionStatement","src":"5706:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5788:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5799:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5784:3:14"},"nodeType":"YulFunctionCall","src":"5784:18:14"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5804:8:14","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5777:6:14"},"nodeType":"YulFunctionCall","src":"5777:36:14"},"nodeType":"YulExpressionStatement","src":"5777:36:14"},{"nodeType":"YulAssignment","src":"5822:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5834:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5845:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5830:3:14"},"nodeType":"YulFunctionCall","src":"5830:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5822:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5604:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5618:4:14","type":""}],"src":"5453:402:14"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610701565b60405180910390f35b6100df6100da366004610772565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461079c565b61026e565b604051601281526020016100c3565b6100df610131366004610772565b61031d565b6100f36101443660046107d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df610175366004610772565b610368565b6100df610188366004610772565b610401565b6100f361019b3660046107fa565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061082d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061082d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610354908690610868565b61040e565b6060600480546101d59061082d565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a7908490610868565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072e57858101830151858201604001528201610712565b81811115610740576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461076d57600080fd5b919050565b6000806040838503121561078557600080fd5b61078e83610756565b946020939093013593505050565b6000806000606084860312156107b157600080fd5b6107ba84610756565b92506107c860208501610756565b9150604084013590509250925092565b6000602082840312156107ea57600080fd5b6107f382610756565b9392505050565b6000806040838503121561080d57600080fd5b61081683610756565b915061082460208401610756565b90509250929050565b600181811c9082168061084157607f821691505b6020821081141561086257634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561088957634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220d0a033f0b8202e53791d6cab7e6df2a6b512bfd76d3ab1661aeb5aa0b788b22864736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x868 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x712 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78E DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7BA DUP5 PUSH2 0x756 JUMP JUMPDEST SWAP3 POP PUSH2 0x7C8 PUSH1 0x20 DUP6 ADD PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F3 DUP3 PUSH2 0x756 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x816 DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH2 0x824 PUSH1 0x20 DUP5 ADD PUSH2 0x756 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x841 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x862 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x889 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 LOG0 CALLER CREATE 0xB8 KECCAK256 0x2E MSTORE8 PUSH26 0x1D6CAB7E6DF2A6B512BFD76D3AB1661AEB5AA0B788B22864736F PUSH13 0x63430008090033000000000000 ","sourceMap":"1388:10416:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4238:166;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:14;;1211:22;1193:41;;1181:2;1166:18;4238:166:5;1053:187:14;3229:106:5;3316:12;;3229:106;;;1391:25:14;;;1379:2;1364:18;3229:106:5;1245:177:14;4871:478:5;;;;;;:::i;:::-;;:::i;3078:91::-;;;3160:2;1902:36:14;;1890:2;1875:18;3078:91:5;1760:184:14;5744:212:5;;;;;;:::i;:::-;;:::i;3393:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3493:18:5;3467:7;3493:18;;;;;;;;;;;;3393:125;2352:102;;;:::i;6443:405::-;;;;;;:::i;:::-;;:::i;3721:172::-;;;;;;:::i;:::-;;:::i;3951:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4066:18:5;;;4040:7;4066:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3951:149;2141:98;2195:13;2227:5;2220:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98;:::o;4238:166::-;4321:4;4337:39;719:10:8;4360:7:5;4369:6;4337:8;:39::i;:::-;-1:-1:-1;4393:4:5;4238:166;;;;:::o;4871:478::-;5007:4;5023:36;5033:6;5041:9;5052:6;5023:9;:36::i;:::-;-1:-1:-1;;;;;5097:19:5;;5070:24;5097:19;;;:11;:19;;;;;;;;719:10:8;5097:33:5;;;;;;;;5148:26;;;;5140:79;;;;-1:-1:-1;;;5140:79:5;;2992:2:14;5140:79:5;;;2974:21:14;3031:2;3011:18;;;3004:30;3070:34;3050:18;;;3043:62;-1:-1:-1;;;3121:18:14;;;3114:38;3169:19;;5140:79:5;;;;;;;;;5253:57;5262:6;719:10:8;5303:6:5;5284:16;:25;5253:8;:57::i;:::-;-1:-1:-1;5338:4:5;;4871:478;-1:-1:-1;;;;4871:478:5:o;5744:212::-;719:10:8;5832:4:5;5880:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5880:34:5;;;;;;;;;;5832:4;;5848:80;;5871:7;;5880:47;;5917:10;;5880:47;:::i;:::-;5848:8;:80::i;2352:102::-;2408:13;2440:7;2433:14;;;;;:::i;6443:405::-;719:10:8;6536:4:5;6579:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6579:34:5;;;;;;;;;;6631:35;;;;6623:85;;;;-1:-1:-1;;;6623:85:5;;3631:2:14;6623:85:5;;;3613:21:14;3670:2;3650:18;;;3643:30;3709:34;3689:18;;;3682:62;-1:-1:-1;;;3760:18:14;;;3753:35;3805:19;;6623:85:5;3429:401:14;6623:85:5;6742:67;719:10:8;6765:7:5;6793:15;6774:16;:34;6742:8;:67::i;:::-;-1:-1:-1;6837:4:5;;6443:405;-1:-1:-1;;;6443:405:5:o;3721:172::-;3807:4;3823:42;719:10:8;3847:9:5;3858:6;3823:9;:42::i;10019:370::-;-1:-1:-1;;;;;10150:19:5;;10142:68;;;;-1:-1:-1;;;10142:68:5;;4037:2:14;10142:68:5;;;4019:21:14;4076:2;4056:18;;;4049:30;4115:34;4095:18;;;4088:62;-1:-1:-1;;;4166:18:14;;;4159:34;4210:19;;10142:68:5;3835:400:14;10142:68:5;-1:-1:-1;;;;;10228:21:5;;10220:68;;;;-1:-1:-1;;;10220:68:5;;4442:2:14;10220:68:5;;;4424:21:14;4481:2;4461:18;;;4454:30;4520:34;4500:18;;;4493:62;-1:-1:-1;;;4571:18:14;;;4564:32;4613:19;;10220:68:5;4240:398:14;10220:68:5;-1:-1:-1;;;;;10299:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10350:32;;1391:25:14;;;10350:32:5;;1364:18:14;10350:32:5;;;;;;;10019:370;;;:::o;7322:713::-;-1:-1:-1;;;;;7457:20:5;;7449:70;;;;-1:-1:-1;;;7449:70:5;;4845:2:14;7449:70:5;;;4827:21:14;4884:2;4864:18;;;4857:30;4923:34;4903:18;;;4896:62;-1:-1:-1;;;4974:18:14;;;4967:35;5019:19;;7449:70:5;4643:401:14;7449:70:5;-1:-1:-1;;;;;7537:23:5;;7529:71;;;;-1:-1:-1;;;7529:71:5;;5251:2:14;7529:71:5;;;5233:21:14;5290:2;5270:18;;;5263:30;5329:34;5309:18;;;5302:62;-1:-1:-1;;;5380:18:14;;;5373:33;5423:19;;7529:71:5;5049:399:14;7529:71:5;-1:-1:-1;;;;;7693:17:5;;7669:21;7693:17;;;;;;;;;;;7728:23;;;;7720:74;;;;-1:-1:-1;;;7720:74:5;;5655:2:14;7720:74:5;;;5637:21:14;5694:2;5674:18;;;5667:30;5733:34;5713:18;;;5706:62;-1:-1:-1;;;5784:18:14;;;5777:36;5830:19;;7720:74:5;5453:402:14;7720:74:5;-1:-1:-1;;;;;7828:17:5;;;:9;:17;;;;;;;;;;;7848:22;;;7828:42;;7890:20;;;;;;;;:30;;7864:6;;7828:9;7890:30;;7864:6;;7890:30;:::i;:::-;;;;;;;;7953:9;-1:-1:-1;;;;;7936:35:5;7945:6;-1:-1:-1;;;;;7936:35:5;;7964:6;7936:35;;;;1391:25:14;;1379:2;1364:18;;1245:177;7936:35:5;;;;;;;;7439:596;7322:713;;;:::o;14:597:14:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:14;574:15;-1:-1:-1;;570:29:14;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:14:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:14;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:14:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:14:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;3199:225::-;3239:3;3270:1;3266:6;3263:1;3260:13;3257:136;;;3315:10;3310:3;3306:20;3303:1;3296:31;3350:4;3347:1;3340:15;3378:4;3375:1;3368:15;3257:136;-1:-1:-1;3409:9:14;;3199:225::o"},"gasEstimates":{"creation":{"codeDepositCost":"448800","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24619","balanceOf(address)":"2562","decimals()":"266","decreaseAllowance(address,uint256)":"26954","increaseAllowance(address,uint256)":"26934","name()":"infinite","symbol()":"infinite","totalSupply()":"2326","transfer(address,uint256)":"51253","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(sender, _msgSender(), currentAllowance - amount);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":592,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":598,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":600,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":602,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":604,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[],"devdoc":{"details":"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122016e23f3fc7a7f3ec1b46550b096fbf264bfc0bd7f1234336bc252018078e1db664736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xE2 EXTCODEHASH EXTCODEHASH 0xC7 0xA7 RETURN 0xEC SHL CHAINID SSTORE SIGNEXTEND MULMOD PUSH16 0xBF264BFC0BD7F1234336BC252018078E SAR 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"827:6990:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;827:6990:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122016e23f3fc7a7f3ec1b46550b096fbf264bfc0bd7f1234336bc252018078e1db664736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xE2 EXTCODEHASH EXTCODEHASH 0xC7 0xA7 RETURN 0xEC SHL CHAINID SSTORE SIGNEXTEND MULMOD PUSH16 0xBF264BFC0BD7F1234336BC252018078E SAR 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"827:6990:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"toInt128(int256)":"infinite","toInt16(int256)":"infinite","toInt256(uint256)":"infinite","toInt32(int256)":"infinite","toInt64(int256)":"infinite","toInt8(int256)":"infinite","toUint128(uint256)":"infinite","toUint16(uint256)":"infinite","toUint224(uint256)":"infinite","toUint256(int256)":"infinite","toUint32(uint256)":"infinite","toUint64(uint256)":"infinite","toUint8(uint256)":"infinite","toUint96(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeCast.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\\n * checks.\\n *\\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\\n * easily result in undesired exploitation or bugs, since developers usually\\n * assume that overflows raise errors. `SafeCast` restores this intuition by\\n * reverting the transaction when such an operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n *\\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\\n * all math on `uint256` and `int256` and then downcasting.\\n */\\nlibrary SafeCast {\\n    /**\\n     * @dev Returns the downcasted uint224 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint224).\\n     *\\n     * Counterpart to Solidity's `uint224` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 224 bits\\n     */\\n    function toUint224(uint256 value) internal pure returns (uint224) {\\n        require(value <= type(uint224).max, \\\"SafeCast: value doesn't fit in 224 bits\\\");\\n        return uint224(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint128 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint128).\\n     *\\n     * Counterpart to Solidity's `uint128` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 128 bits\\n     */\\n    function toUint128(uint256 value) internal pure returns (uint128) {\\n        require(value <= type(uint128).max, \\\"SafeCast: value doesn't fit in 128 bits\\\");\\n        return uint128(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint96 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint96).\\n     *\\n     * Counterpart to Solidity's `uint96` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 96 bits\\n     */\\n    function toUint96(uint256 value) internal pure returns (uint96) {\\n        require(value <= type(uint96).max, \\\"SafeCast: value doesn't fit in 96 bits\\\");\\n        return uint96(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint64 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint64).\\n     *\\n     * Counterpart to Solidity's `uint64` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 64 bits\\n     */\\n    function toUint64(uint256 value) internal pure returns (uint64) {\\n        require(value <= type(uint64).max, \\\"SafeCast: value doesn't fit in 64 bits\\\");\\n        return uint64(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint32 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint32).\\n     *\\n     * Counterpart to Solidity's `uint32` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 32 bits\\n     */\\n    function toUint32(uint256 value) internal pure returns (uint32) {\\n        require(value <= type(uint32).max, \\\"SafeCast: value doesn't fit in 32 bits\\\");\\n        return uint32(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint16 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint16).\\n     *\\n     * Counterpart to Solidity's `uint16` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 16 bits\\n     */\\n    function toUint16(uint256 value) internal pure returns (uint16) {\\n        require(value <= type(uint16).max, \\\"SafeCast: value doesn't fit in 16 bits\\\");\\n        return uint16(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint8 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint8).\\n     *\\n     * Counterpart to Solidity's `uint8` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 8 bits.\\n     */\\n    function toUint8(uint256 value) internal pure returns (uint8) {\\n        require(value <= type(uint8).max, \\\"SafeCast: value doesn't fit in 8 bits\\\");\\n        return uint8(value);\\n    }\\n\\n    /**\\n     * @dev Converts a signed int256 into an unsigned uint256.\\n     *\\n     * Requirements:\\n     *\\n     * - input must be greater than or equal to 0.\\n     */\\n    function toUint256(int256 value) internal pure returns (uint256) {\\n        require(value >= 0, \\\"SafeCast: value must be positive\\\");\\n        return uint256(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int128 from int256, reverting on\\n     * overflow (when the input is less than smallest int128 or\\n     * greater than largest int128).\\n     *\\n     * Counterpart to Solidity's `int128` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 128 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt128(int256 value) internal pure returns (int128) {\\n        require(value >= type(int128).min && value <= type(int128).max, \\\"SafeCast: value doesn't fit in 128 bits\\\");\\n        return int128(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int64 from int256, reverting on\\n     * overflow (when the input is less than smallest int64 or\\n     * greater than largest int64).\\n     *\\n     * Counterpart to Solidity's `int64` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 64 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt64(int256 value) internal pure returns (int64) {\\n        require(value >= type(int64).min && value <= type(int64).max, \\\"SafeCast: value doesn't fit in 64 bits\\\");\\n        return int64(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int32 from int256, reverting on\\n     * overflow (when the input is less than smallest int32 or\\n     * greater than largest int32).\\n     *\\n     * Counterpart to Solidity's `int32` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 32 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt32(int256 value) internal pure returns (int32) {\\n        require(value >= type(int32).min && value <= type(int32).max, \\\"SafeCast: value doesn't fit in 32 bits\\\");\\n        return int32(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int16 from int256, reverting on\\n     * overflow (when the input is less than smallest int16 or\\n     * greater than largest int16).\\n     *\\n     * Counterpart to Solidity's `int16` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 16 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt16(int256 value) internal pure returns (int16) {\\n        require(value >= type(int16).min && value <= type(int16).max, \\\"SafeCast: value doesn't fit in 16 bits\\\");\\n        return int16(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int8 from int256, reverting on\\n     * overflow (when the input is less than smallest int8 or\\n     * greater than largest int8).\\n     *\\n     * Counterpart to Solidity's `int8` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 8 bits.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt8(int256 value) internal pure returns (int8) {\\n        require(value >= type(int8).min && value <= type(int8).max, \\\"SafeCast: value doesn't fit in 8 bits\\\");\\n        return int8(value);\\n    }\\n\\n    /**\\n     * @dev Converts an unsigned uint256 into a signed int256.\\n     *\\n     * Requirements:\\n     *\\n     * - input must be less than or equal to maxInt256.\\n     */\\n    function toInt256(uint256 value) internal pure returns (int256) {\\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\\n        require(value <= uint256(type(int256).max), \\\"SafeCast: value doesn't fit in an int256\\\");\\n        return int256(value);\\n    }\\n}\\n\",\"keccak256\":\"0x5c6caab697d302ad7eb59c234a4d2dbc965c1bae87709bd2850060b7695b28c7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"devdoc":{"details":"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b173409fb38be32d16f737d12bf45c4c71b26309ce9cc6fbdaeb9c2778ab3e3f64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 PUSH20 0x409FB38BE32D16F737D12BF45C4C71B26309CE9C 0xC6 0xFB 0xDA 0xEB SWAP13 0x27 PUSH25 0xAB3E3F64736F6C634300080900330000000000000000000000 ","sourceMap":"467:6301:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6301:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b173409fb38be32d16f737d12bf45c4c71b26309ce9cc6fbdaeb9c2778ab3e3f64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 PUSH20 0x409FB38BE32D16F737D12BF45C4C71B26309CE9C 0xC6 0xFB 0xDA 0xEB SWAP13 0x27 PUSH25 0xAB3E3F64736F6C634300080900330000000000000000000000 ","sourceMap":"467:6301:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SignedSafeMath.sol":{"SignedSafeMath":{"abi":[],"devdoc":{"details":"Wrappers over Solidity's arithmetic operations. NOTE: `SignedSafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208cf3b982b7f21c9e8f4f2b8fbe5c0a727c43e1564561497644aec17614a3669864736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 RETURN 0xB9 DUP3 0xB7 CALLCODE SHR SWAP15 DUP16 0x4F 0x2B DUP16 0xBE 0x5C EXP PUSH19 0x7C43E1564561497644AEC17614A3669864736F PUSH13 0x63430008090033000000000000 ","sourceMap":"316:1399:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;316:1399:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208cf3b982b7f21c9e8f4f2b8fbe5c0a727c43e1564561497644aec17614a3669864736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 RETURN 0xB9 DUP3 0xB7 CALLCODE SHR SWAP15 DUP16 0x4F 0x2B DUP16 0xBE 0x5C EXP PUSH19 0x7C43E1564561497644AEC17614A3669864736F PUSH13 0x63430008090033000000000000 ","sourceMap":"316:1399:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"add(int256,int256)":"infinite","div(int256,int256)":"infinite","mul(int256,int256)":"infinite","sub(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SignedSafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":\"SignedSafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SignedSafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SignedSafeMath` is no longer needed starting with Solidity 0.8. The compiler\\n * now has built in overflow checking.\\n */\\nlibrary SignedSafeMath {\\n    /**\\n     * @dev Returns the multiplication of two signed integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(int256 a, int256 b) internal pure returns (int256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two signed integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(int256 a, int256 b) internal pure returns (int256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two signed integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(int256 a, int256 b) internal pure returns (int256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two signed integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(int256 a, int256 b) internal pure returns (int256) {\\n        return a + b;\\n    }\\n}\\n\",\"keccak256\":\"0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/DappToken.sol":{"DappToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2035":{"entryPoint":null,"id":2035,"parameterSlots":0,"returnSlots":0},"@_621":{"entryPoint":null,"id":621,"parameterSlots":2,"returnSlots":0},"@_afterTokenTransfer_1121":{"entryPoint":null,"id":1121,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1110":{"entryPoint":null,"id":1110,"parameterSlots":3,"returnSlots":0},"@_mint_982":{"entryPoint":155,"id":982,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":553,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":592,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1168:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"188:181:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"205:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"216:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"198:6:14"},"nodeType":"YulFunctionCall","src":"198:21:14"},"nodeType":"YulExpressionStatement","src":"198:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"239:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"250:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"235:3:14"},"nodeType":"YulFunctionCall","src":"235:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"255:2:14","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"228:6:14"},"nodeType":"YulFunctionCall","src":"228:30:14"},"nodeType":"YulExpressionStatement","src":"228:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"278:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"289:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"274:3:14"},"nodeType":"YulFunctionCall","src":"274:18:14"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"294:33:14","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"267:6:14"},"nodeType":"YulFunctionCall","src":"267:61:14"},"nodeType":"YulExpressionStatement","src":"267:61:14"},{"nodeType":"YulAssignment","src":"337:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"349:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"360:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"345:3:14"},"nodeType":"YulFunctionCall","src":"345:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"337:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"165:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"179:4:14","type":""}],"src":"14:355:14"},{"body":{"nodeType":"YulBlock","src":"422:177:14","statements":[{"body":{"nodeType":"YulBlock","src":"457:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"478:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"485:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"490:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"481:3:14"},"nodeType":"YulFunctionCall","src":"481:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"471:6:14"},"nodeType":"YulFunctionCall","src":"471:31:14"},"nodeType":"YulExpressionStatement","src":"471:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"522:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"525:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"515:6:14"},"nodeType":"YulFunctionCall","src":"515:15:14"},"nodeType":"YulExpressionStatement","src":"515:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"550:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"553:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"543:6:14"},"nodeType":"YulFunctionCall","src":"543:15:14"},"nodeType":"YulExpressionStatement","src":"543:15:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"438:1:14"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"445:1:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"441:3:14"},"nodeType":"YulFunctionCall","src":"441:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"435:2:14"},"nodeType":"YulFunctionCall","src":"435:13:14"},"nodeType":"YulIf","src":"432:136:14"},{"nodeType":"YulAssignment","src":"577:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"588:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"591:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"584:3:14"},"nodeType":"YulFunctionCall","src":"584:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"577:3:14"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"405:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"408:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"414:3:14","type":""}],"src":"374:225:14"},{"body":{"nodeType":"YulBlock","src":"705:76:14","statements":[{"nodeType":"YulAssignment","src":"715:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"727:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"738:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"723:3:14"},"nodeType":"YulFunctionCall","src":"723:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"715:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"757:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"768:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"750:6:14"},"nodeType":"YulFunctionCall","src":"750:25:14"},"nodeType":"YulExpressionStatement","src":"750:25:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"674:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"685:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"696:4:14","type":""}],"src":"604:177:14"},{"body":{"nodeType":"YulBlock","src":"841:325:14","statements":[{"nodeType":"YulAssignment","src":"851:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"865:1:14","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"868:4:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"861:3:14"},"nodeType":"YulFunctionCall","src":"861:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"851:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"882:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"912:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"918:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"908:3:14"},"nodeType":"YulFunctionCall","src":"908:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"886:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"959:31:14","statements":[{"nodeType":"YulAssignment","src":"961:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"975:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"983:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"971:3:14"},"nodeType":"YulFunctionCall","src":"971:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"961:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"939:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"932:6:14"},"nodeType":"YulFunctionCall","src":"932:26:14"},"nodeType":"YulIf","src":"929:61:14"},{"body":{"nodeType":"YulBlock","src":"1049:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1070:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1077:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1082:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1073:3:14"},"nodeType":"YulFunctionCall","src":"1073:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1063:6:14"},"nodeType":"YulFunctionCall","src":"1063:31:14"},"nodeType":"YulExpressionStatement","src":"1063:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1114:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1117:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1107:6:14"},"nodeType":"YulFunctionCall","src":"1107:15:14"},"nodeType":"YulExpressionStatement","src":"1107:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1142:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1145:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1135:6:14"},"nodeType":"YulFunctionCall","src":"1135:15:14"},"nodeType":"YulExpressionStatement","src":"1135:15:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1005:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1028:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1025:2:14"},"nodeType":"YulFunctionCall","src":"1025:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1002:2:14"},"nodeType":"YulFunctionCall","src":"1002:38:14"},"nodeType":"YulIf","src":"999:161:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"821:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"830:6:14","type":""}],"src":"786:380:14"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604080518082018252600a8152692220b838102a37b5b2b760b11b6020808301918252835180850190945260048452630444150560e41b908401528151919291620000609160039162000183565b5080516200007690600490602084019062000183565b505050620000953369d3c21bcecceda10000006200009b60201b60201c565b6200028d565b6001600160a01b038216620000f65760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200010a919062000229565b90915550506001600160a01b038216600090815260208190526040812080548392906200013990849062000229565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001919062000250565b90600052602060002090601f016020900481019282620001b5576000855562000200565b82601f10620001d057805160ff191683800117855562000200565b8280016001018555821562000200579182015b8281111562000200578251825591602001919060010190620001e3565b506200020e92915062000212565b5090565b5b808211156200020e576000815560010162000213565b600082198211156200024b57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200026557607f821691505b602082108114156200028757634e487b7160e01b600052602260045260246000fd5b50919050565b6108c4806200029d6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610701565b60405180910390f35b6100df6100da366004610772565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461079c565b61026e565b604051601281526020016100c3565b6100df610131366004610772565b61031d565b6100f36101443660046107d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df610175366004610772565b610368565b6100df610188366004610772565b610401565b6100f361019b3660046107fa565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061082d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061082d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610354908690610868565b61040e565b6060600480546101d59061082d565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a7908490610868565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072e57858101830151858201604001528201610712565b81811115610740576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461076d57600080fd5b919050565b6000806040838503121561078557600080fd5b61078e83610756565b946020939093013593505050565b6000806000606084860312156107b157600080fd5b6107ba84610756565b92506107c860208501610756565b9150604084013590509250925092565b6000602082840312156107ea57600080fd5b6107f382610756565b9392505050565b6000806040838503121561080d57600080fd5b61081683610756565b915061082460208401610756565b90509250929050565b600181811c9082168061084157607f821691505b6020821081141561086257634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561088957634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220f2ae25be6c5263262569474a2b70a89f2637c7118b0b59fdb6320934d930b70364736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x2220B838102A37B5B2B7 PUSH1 0xB1 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x4 DUP5 MSTORE PUSH4 0x4441505 PUSH1 0xE4 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x60 SWAP2 PUSH1 0x3 SWAP2 PUSH3 0x183 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x76 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x183 JUMP JUMPDEST POP POP POP PUSH3 0x95 CALLER PUSH10 0xD3C21BCECCEDA1000000 PUSH3 0x9B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x28D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x10A SWAP2 SWAP1 PUSH3 0x229 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x139 SWAP1 DUP5 SWAP1 PUSH3 0x229 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x191 SWAP1 PUSH3 0x250 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1B5 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x200 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1D0 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x200 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x200 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x200 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1E3 JUMP JUMPDEST POP PUSH3 0x20E SWAP3 SWAP2 POP PUSH3 0x212 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x20E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x213 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x24B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x265 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x287 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C4 DUP1 PUSH3 0x29D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x868 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x712 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78E DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7BA DUP5 PUSH2 0x756 JUMP JUMPDEST SWAP3 POP PUSH2 0x7C8 PUSH1 0x20 DUP6 ADD PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F3 DUP3 PUSH2 0x756 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x816 DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH2 0x824 PUSH1 0x20 DUP5 ADD PUSH2 0x756 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x841 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x862 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x889 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xAE 0x25 0xBE PUSH13 0x5263262569474A2B70A89F2637 0xC7 GT DUP12 SIGNEXTEND MSIZE REVERT 0xB6 ORIGIN MULMOD CALLVALUE 0xD9 ADDRESS 0xB7 SUB PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"86:150:12:-:0;;;121:112;;;;;;;;;-1:-1:-1;1963:113:5;;;;;;;;;;;-1:-1:-1;;;1963:113:5;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1963:113:5;;;;2029:13;;1963:113;;;2029:13;;:5;;:13;:::i;:::-;-1:-1:-1;2052:17:5;;;;:7;;:17;;;;;:::i;:::-;;1963:113;;181:44:12::1;187:10;199:25;181:5;;;:44;;:::i;:::-;86:150:::0;;8311:389:5;-1:-1:-1;;;;;8394:21:5;;8386:65;;;;-1:-1:-1;;;8386:65:5;;216:2:14;8386:65:5;;;198:21:14;255:2;235:18;;;228:30;294:33;274:18;;;267:61;345:18;;8386:65:5;;;;;;;;8538:6;8522:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8554:18:5;;:9;:18;;;;;;;;;;:28;;8576:6;;8554:9;:28;;8576:6;;8554:28;:::i;:::-;;;;-1:-1:-1;;8597:37:5;;750:25:14;;;-1:-1:-1;;;;;8597:37:5;;;8614:1;;8597:37;;738:2:14;723:18;8597:37:5;;;;;;;8311:389;;:::o;86:150:12:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;86:150:12;;;-1:-1:-1;86:150:12;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;374:225:14;414:3;445:1;441:6;438:1;435:13;432:136;;;490:10;485:3;481:20;478:1;471:31;525:4;522:1;515:15;553:4;550:1;543:15;432:136;-1:-1:-1;584:9:14;;374:225::o;786:380::-;865:1;861:12;;;;908;;;929:61;;983:4;975:6;971:17;961:27;;929:61;1036:2;1028:6;1025:14;1005:18;1002:38;999:161;;;1082:10;1077:3;1073:20;1070:1;1063:31;1117:4;1114:1;1107:15;1145:4;1142:1;1135:15;999:161;;786:380;;;:::o;:::-;86:150:12;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1121":{"entryPoint":null,"id":1121,"parameterSlots":3,"returnSlots":0},"@_approve_1099":{"entryPoint":1038,"id":1099,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1110":{"entryPoint":null,"id":1110,"parameterSlots":3,"returnSlots":0},"@_msgSender_1237":{"entryPoint":null,"id":1237,"parameterSlots":0,"returnSlots":1},"@_transfer_926":{"entryPoint":1330,"id":926,"parameterSlots":3,"returnSlots":0},"@allowance_714":{"entryPoint":null,"id":714,"parameterSlots":2,"returnSlots":1},"@approve_735":{"entryPoint":600,"id":735,"parameterSlots":2,"returnSlots":1},"@balanceOf_675":{"entryPoint":null,"id":675,"parameterSlots":1,"returnSlots":1},"@decimals_651":{"entryPoint":null,"id":651,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_849":{"entryPoint":872,"id":849,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_810":{"entryPoint":797,"id":810,"parameterSlots":2,"returnSlots":1},"@name_631":{"entryPoint":454,"id":631,"parameterSlots":0,"returnSlots":1},"@symbol_641":{"entryPoint":857,"id":641,"parameterSlots":0,"returnSlots":1},"@totalSupply_661":{"entryPoint":null,"id":661,"parameterSlots":0,"returnSlots":1},"@transferFrom_783":{"entryPoint":622,"id":783,"parameterSlots":3,"returnSlots":1},"@transfer_696":{"entryPoint":1025,"id":696,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1878,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2008,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2042,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1948,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1906,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1793,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2152,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2093,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5857:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:476:14","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:14","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:14","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:14"},"nodeType":"YulFunctionCall","src":"166:21:14"},"nodeType":"YulExpressionStatement","src":"166:21:14"},{"nodeType":"YulVariableDeclaration","src":"196:27:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:14"},"nodeType":"YulFunctionCall","src":"210:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:14"},"nodeType":"YulFunctionCall","src":"239:18:14"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:14"},"nodeType":"YulFunctionCall","src":"232:34:14"},"nodeType":"YulExpressionStatement","src":"232:34:14"},{"nodeType":"YulVariableDeclaration","src":"275:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:14"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:14"},"nodeType":"YulFunctionCall","src":"369:17:14"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:14"},"nodeType":"YulFunctionCall","src":"365:26:14"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:14"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:14"},"nodeType":"YulFunctionCall","src":"403:14:14"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:14"},"nodeType":"YulFunctionCall","src":"399:23:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:14"},"nodeType":"YulFunctionCall","src":"393:30:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:14"},"nodeType":"YulFunctionCall","src":"358:66:14"},"nodeType":"YulExpressionStatement","src":"358:66:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:14"},"nodeType":"YulFunctionCall","src":"302:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:14","statements":[{"nodeType":"YulAssignment","src":"318:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:14"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:14"},"nodeType":"YulFunctionCall","src":"323:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:14","statements":[]},"src":"294:140:14"},{"body":{"nodeType":"YulBlock","src":"468:66:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"497:9:14"},{"name":"length","nodeType":"YulIdentifier","src":"508:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"493:3:14"},"nodeType":"YulFunctionCall","src":"493:22:14"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"489:3:14"},"nodeType":"YulFunctionCall","src":"489:31:14"},{"kind":"number","nodeType":"YulLiteral","src":"522:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"482:6:14"},"nodeType":"YulFunctionCall","src":"482:42:14"},"nodeType":"YulExpressionStatement","src":"482:42:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"449:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"452:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"446:2:14"},"nodeType":"YulFunctionCall","src":"446:13:14"},"nodeType":"YulIf","src":"443:91:14"},{"nodeType":"YulAssignment","src":"543:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:14"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"578:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"586:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"574:3:14"},"nodeType":"YulFunctionCall","src":"574:15:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"595:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"591:3:14"},"nodeType":"YulFunctionCall","src":"591:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"570:3:14"},"nodeType":"YulFunctionCall","src":"570:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"555:3:14"},"nodeType":"YulFunctionCall","src":"555:45:14"},{"kind":"number","nodeType":"YulLiteral","src":"602:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"551:3:14"},"nodeType":"YulFunctionCall","src":"551:54:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"543:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:14","type":""}],"src":"14:597:14"},{"body":{"nodeType":"YulBlock","src":"665:124:14","statements":[{"nodeType":"YulAssignment","src":"675:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"697:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"684:12:14"},"nodeType":"YulFunctionCall","src":"684:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"675:5:14"}]},{"body":{"nodeType":"YulBlock","src":"767:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"776:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"779:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"769:6:14"},"nodeType":"YulFunctionCall","src":"769:12:14"},"nodeType":"YulExpressionStatement","src":"769:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"726:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"737:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"757:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"748:3:14"},"nodeType":"YulFunctionCall","src":"748:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"761:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"744:3:14"},"nodeType":"YulFunctionCall","src":"744:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"733:3:14"},"nodeType":"YulFunctionCall","src":"733:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"723:2:14"},"nodeType":"YulFunctionCall","src":"723:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"716:6:14"},"nodeType":"YulFunctionCall","src":"716:50:14"},"nodeType":"YulIf","src":"713:70:14"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"655:5:14","type":""}],"src":"616:173:14"},{"body":{"nodeType":"YulBlock","src":"881:167:14","statements":[{"body":{"nodeType":"YulBlock","src":"927:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"929:6:14"},"nodeType":"YulFunctionCall","src":"929:12:14"},"nodeType":"YulExpressionStatement","src":"929:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"902:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"911:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"898:3:14"},"nodeType":"YulFunctionCall","src":"898:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"923:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"894:3:14"},"nodeType":"YulFunctionCall","src":"894:32:14"},"nodeType":"YulIf","src":"891:52:14"},{"nodeType":"YulAssignment","src":"952:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"981:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"962:18:14"},"nodeType":"YulFunctionCall","src":"962:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"952:6:14"}]},{"nodeType":"YulAssignment","src":"1000:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1027:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1038:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:14"},"nodeType":"YulFunctionCall","src":"1023:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1010:12:14"},"nodeType":"YulFunctionCall","src":"1010:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1000:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"839:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"850:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"862:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"870:6:14","type":""}],"src":"794:254:14"},{"body":{"nodeType":"YulBlock","src":"1148:92:14","statements":[{"nodeType":"YulAssignment","src":"1158:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:14"},"nodeType":"YulFunctionCall","src":"1166:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:14"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1225:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1218:6:14"},"nodeType":"YulFunctionCall","src":"1218:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1211:6:14"},"nodeType":"YulFunctionCall","src":"1211:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1193:6:14"},"nodeType":"YulFunctionCall","src":"1193:41:14"},"nodeType":"YulExpressionStatement","src":"1193:41:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1117:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1128:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1139:4:14","type":""}],"src":"1053:187:14"},{"body":{"nodeType":"YulBlock","src":"1346:76:14","statements":[{"nodeType":"YulAssignment","src":"1356:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1368:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1379:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1364:3:14"},"nodeType":"YulFunctionCall","src":"1364:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1356:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1398:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"1409:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1391:6:14"},"nodeType":"YulFunctionCall","src":"1391:25:14"},"nodeType":"YulExpressionStatement","src":"1391:25:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1315:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1326:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1337:4:14","type":""}],"src":"1245:177:14"},{"body":{"nodeType":"YulBlock","src":"1531:224:14","statements":[{"body":{"nodeType":"YulBlock","src":"1577:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1586:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1589:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1579:6:14"},"nodeType":"YulFunctionCall","src":"1579:12:14"},"nodeType":"YulExpressionStatement","src":"1579:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1552:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1561:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1548:3:14"},"nodeType":"YulFunctionCall","src":"1548:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1573:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1544:3:14"},"nodeType":"YulFunctionCall","src":"1544:32:14"},"nodeType":"YulIf","src":"1541:52:14"},{"nodeType":"YulAssignment","src":"1602:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1631:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1612:18:14"},"nodeType":"YulFunctionCall","src":"1612:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1602:6:14"}]},{"nodeType":"YulAssignment","src":"1650:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1683:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1694:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1679:3:14"},"nodeType":"YulFunctionCall","src":"1679:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1660:18:14"},"nodeType":"YulFunctionCall","src":"1660:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1650:6:14"}]},{"nodeType":"YulAssignment","src":"1707:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1734:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1745:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:14"},"nodeType":"YulFunctionCall","src":"1730:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1717:12:14"},"nodeType":"YulFunctionCall","src":"1717:32:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1707:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1481:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1492:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1504:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1512:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1520:6:14","type":""}],"src":"1427:328:14"},{"body":{"nodeType":"YulBlock","src":"1857:87:14","statements":[{"nodeType":"YulAssignment","src":"1867:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1879:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1890:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1875:3:14"},"nodeType":"YulFunctionCall","src":"1875:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1867:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1909:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1924:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1932:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1920:3:14"},"nodeType":"YulFunctionCall","src":"1920:17:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1902:6:14"},"nodeType":"YulFunctionCall","src":"1902:36:14"},"nodeType":"YulExpressionStatement","src":"1902:36:14"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1826:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1837:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1848:4:14","type":""}],"src":"1760:184:14"},{"body":{"nodeType":"YulBlock","src":"2019:116:14","statements":[{"body":{"nodeType":"YulBlock","src":"2065:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2074:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2077:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2067:6:14"},"nodeType":"YulFunctionCall","src":"2067:12:14"},"nodeType":"YulExpressionStatement","src":"2067:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2040:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2049:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2036:3:14"},"nodeType":"YulFunctionCall","src":"2036:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2061:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2032:3:14"},"nodeType":"YulFunctionCall","src":"2032:32:14"},"nodeType":"YulIf","src":"2029:52:14"},{"nodeType":"YulAssignment","src":"2090:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2119:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2100:18:14"},"nodeType":"YulFunctionCall","src":"2100:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2090:6:14"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1985:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1996:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2008:6:14","type":""}],"src":"1949:186:14"},{"body":{"nodeType":"YulBlock","src":"2227:173:14","statements":[{"body":{"nodeType":"YulBlock","src":"2273:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2282:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2285:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2275:6:14"},"nodeType":"YulFunctionCall","src":"2275:12:14"},"nodeType":"YulExpressionStatement","src":"2275:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2248:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2257:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2244:3:14"},"nodeType":"YulFunctionCall","src":"2244:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2269:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2240:3:14"},"nodeType":"YulFunctionCall","src":"2240:32:14"},"nodeType":"YulIf","src":"2237:52:14"},{"nodeType":"YulAssignment","src":"2298:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2327:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2308:18:14"},"nodeType":"YulFunctionCall","src":"2308:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2298:6:14"}]},{"nodeType":"YulAssignment","src":"2346:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2379:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2390:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2375:3:14"},"nodeType":"YulFunctionCall","src":"2375:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2356:18:14"},"nodeType":"YulFunctionCall","src":"2356:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2346:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2185:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2196:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2208:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2216:6:14","type":""}],"src":"2140:260:14"},{"body":{"nodeType":"YulBlock","src":"2460:325:14","statements":[{"nodeType":"YulAssignment","src":"2470:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2484:1:14","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2487:4:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2480:3:14"},"nodeType":"YulFunctionCall","src":"2480:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2470:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"2501:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2531:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"2537:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2527:3:14"},"nodeType":"YulFunctionCall","src":"2527:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2505:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2578:31:14","statements":[{"nodeType":"YulAssignment","src":"2580:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2594:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2602:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2590:3:14"},"nodeType":"YulFunctionCall","src":"2590:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2580:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2558:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2551:6:14"},"nodeType":"YulFunctionCall","src":"2551:26:14"},"nodeType":"YulIf","src":"2548:61:14"},{"body":{"nodeType":"YulBlock","src":"2668:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2689:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2696:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2701:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2692:3:14"},"nodeType":"YulFunctionCall","src":"2692:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2682:6:14"},"nodeType":"YulFunctionCall","src":"2682:31:14"},"nodeType":"YulExpressionStatement","src":"2682:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2733:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2736:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2726:6:14"},"nodeType":"YulFunctionCall","src":"2726:15:14"},"nodeType":"YulExpressionStatement","src":"2726:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2761:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2764:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2754:6:14"},"nodeType":"YulFunctionCall","src":"2754:15:14"},"nodeType":"YulExpressionStatement","src":"2754:15:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2624:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2647:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2655:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2644:2:14"},"nodeType":"YulFunctionCall","src":"2644:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2621:2:14"},"nodeType":"YulFunctionCall","src":"2621:38:14"},"nodeType":"YulIf","src":"2618:161:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2440:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2449:6:14","type":""}],"src":"2405:380:14"},{"body":{"nodeType":"YulBlock","src":"2964:230:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2981:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2992:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2974:6:14"},"nodeType":"YulFunctionCall","src":"2974:21:14"},"nodeType":"YulExpressionStatement","src":"2974:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3015:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3026:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3011:3:14"},"nodeType":"YulFunctionCall","src":"3011:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"3031:2:14","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3004:6:14"},"nodeType":"YulFunctionCall","src":"3004:30:14"},"nodeType":"YulExpressionStatement","src":"3004:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3054:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3065:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3050:3:14"},"nodeType":"YulFunctionCall","src":"3050:18:14"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732061","kind":"string","nodeType":"YulLiteral","src":"3070:34:14","type":"","value":"ERC20: transfer amount exceeds a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3043:6:14"},"nodeType":"YulFunctionCall","src":"3043:62:14"},"nodeType":"YulExpressionStatement","src":"3043:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3125:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3136:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3121:3:14"},"nodeType":"YulFunctionCall","src":"3121:18:14"},{"hexValue":"6c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"3141:10:14","type":"","value":"llowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3114:6:14"},"nodeType":"YulFunctionCall","src":"3114:38:14"},"nodeType":"YulExpressionStatement","src":"3114:38:14"},{"nodeType":"YulAssignment","src":"3161:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3173:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3184:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3169:3:14"},"nodeType":"YulFunctionCall","src":"3169:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3161:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2941:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2955:4:14","type":""}],"src":"2790:404:14"},{"body":{"nodeType":"YulBlock","src":"3247:177:14","statements":[{"body":{"nodeType":"YulBlock","src":"3282:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3303:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3310:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3315:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3306:3:14"},"nodeType":"YulFunctionCall","src":"3306:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3296:6:14"},"nodeType":"YulFunctionCall","src":"3296:31:14"},"nodeType":"YulExpressionStatement","src":"3296:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3347:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3350:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3340:6:14"},"nodeType":"YulFunctionCall","src":"3340:15:14"},"nodeType":"YulExpressionStatement","src":"3340:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3375:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3378:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3368:6:14"},"nodeType":"YulFunctionCall","src":"3368:15:14"},"nodeType":"YulExpressionStatement","src":"3368:15:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3263:1:14"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3270:1:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3266:3:14"},"nodeType":"YulFunctionCall","src":"3266:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3260:2:14"},"nodeType":"YulFunctionCall","src":"3260:13:14"},"nodeType":"YulIf","src":"3257:136:14"},{"nodeType":"YulAssignment","src":"3402:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3413:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"3416:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3409:3:14"},"nodeType":"YulFunctionCall","src":"3409:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3402:3:14"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3230:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"3233:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3239:3:14","type":""}],"src":"3199:225:14"},{"body":{"nodeType":"YulBlock","src":"3603:227:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3620:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3631:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3613:6:14"},"nodeType":"YulFunctionCall","src":"3613:21:14"},"nodeType":"YulExpressionStatement","src":"3613:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3654:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3665:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3650:3:14"},"nodeType":"YulFunctionCall","src":"3650:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"3670:2:14","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3643:6:14"},"nodeType":"YulFunctionCall","src":"3643:30:14"},"nodeType":"YulExpressionStatement","src":"3643:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3693:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3704:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3689:3:14"},"nodeType":"YulFunctionCall","src":"3689:18:14"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3709:34:14","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3682:6:14"},"nodeType":"YulFunctionCall","src":"3682:62:14"},"nodeType":"YulExpressionStatement","src":"3682:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3764:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3775:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3760:3:14"},"nodeType":"YulFunctionCall","src":"3760:18:14"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3780:7:14","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3753:6:14"},"nodeType":"YulFunctionCall","src":"3753:35:14"},"nodeType":"YulExpressionStatement","src":"3753:35:14"},{"nodeType":"YulAssignment","src":"3797:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3809:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3820:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3805:3:14"},"nodeType":"YulFunctionCall","src":"3805:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3797:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3580:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3594:4:14","type":""}],"src":"3429:401:14"},{"body":{"nodeType":"YulBlock","src":"4009:226:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4026:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4037:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4019:6:14"},"nodeType":"YulFunctionCall","src":"4019:21:14"},"nodeType":"YulExpressionStatement","src":"4019:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4060:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4071:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4056:3:14"},"nodeType":"YulFunctionCall","src":"4056:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"4076:2:14","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4049:6:14"},"nodeType":"YulFunctionCall","src":"4049:30:14"},"nodeType":"YulExpressionStatement","src":"4049:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4099:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4110:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4095:3:14"},"nodeType":"YulFunctionCall","src":"4095:18:14"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"4115:34:14","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4088:6:14"},"nodeType":"YulFunctionCall","src":"4088:62:14"},"nodeType":"YulExpressionStatement","src":"4088:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4170:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4181:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4166:3:14"},"nodeType":"YulFunctionCall","src":"4166:18:14"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"4186:6:14","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4159:6:14"},"nodeType":"YulFunctionCall","src":"4159:34:14"},"nodeType":"YulExpressionStatement","src":"4159:34:14"},{"nodeType":"YulAssignment","src":"4202:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4214:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4225:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4210:3:14"},"nodeType":"YulFunctionCall","src":"4210:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4202:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3986:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4000:4:14","type":""}],"src":"3835:400:14"},{"body":{"nodeType":"YulBlock","src":"4414:224:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4431:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4442:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4424:6:14"},"nodeType":"YulFunctionCall","src":"4424:21:14"},"nodeType":"YulExpressionStatement","src":"4424:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4465:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4476:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4461:3:14"},"nodeType":"YulFunctionCall","src":"4461:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"4481:2:14","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4454:6:14"},"nodeType":"YulFunctionCall","src":"4454:30:14"},"nodeType":"YulExpressionStatement","src":"4454:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4504:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4515:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4500:3:14"},"nodeType":"YulFunctionCall","src":"4500:18:14"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4520:34:14","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4493:6:14"},"nodeType":"YulFunctionCall","src":"4493:62:14"},"nodeType":"YulExpressionStatement","src":"4493:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4575:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4586:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4571:3:14"},"nodeType":"YulFunctionCall","src":"4571:18:14"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4591:4:14","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4564:6:14"},"nodeType":"YulFunctionCall","src":"4564:32:14"},"nodeType":"YulExpressionStatement","src":"4564:32:14"},{"nodeType":"YulAssignment","src":"4605:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4617:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4628:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4613:3:14"},"nodeType":"YulFunctionCall","src":"4613:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4605:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4391:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4405:4:14","type":""}],"src":"4240:398:14"},{"body":{"nodeType":"YulBlock","src":"4817:227:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4834:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4845:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4827:6:14"},"nodeType":"YulFunctionCall","src":"4827:21:14"},"nodeType":"YulExpressionStatement","src":"4827:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4868:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4879:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4864:3:14"},"nodeType":"YulFunctionCall","src":"4864:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"4884:2:14","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4857:6:14"},"nodeType":"YulFunctionCall","src":"4857:30:14"},"nodeType":"YulExpressionStatement","src":"4857:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4907:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4918:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4903:3:14"},"nodeType":"YulFunctionCall","src":"4903:18:14"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"4923:34:14","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4896:6:14"},"nodeType":"YulFunctionCall","src":"4896:62:14"},"nodeType":"YulExpressionStatement","src":"4896:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4978:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4989:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4974:3:14"},"nodeType":"YulFunctionCall","src":"4974:18:14"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"4994:7:14","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4967:6:14"},"nodeType":"YulFunctionCall","src":"4967:35:14"},"nodeType":"YulExpressionStatement","src":"4967:35:14"},{"nodeType":"YulAssignment","src":"5011:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5023:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5034:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5019:3:14"},"nodeType":"YulFunctionCall","src":"5019:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5011:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4794:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4808:4:14","type":""}],"src":"4643:401:14"},{"body":{"nodeType":"YulBlock","src":"5223:225:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5240:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5251:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5233:6:14"},"nodeType":"YulFunctionCall","src":"5233:21:14"},"nodeType":"YulExpressionStatement","src":"5233:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5274:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5285:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5270:3:14"},"nodeType":"YulFunctionCall","src":"5270:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"5290:2:14","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5263:6:14"},"nodeType":"YulFunctionCall","src":"5263:30:14"},"nodeType":"YulExpressionStatement","src":"5263:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5313:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5324:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5309:3:14"},"nodeType":"YulFunctionCall","src":"5309:18:14"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5329:34:14","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5302:6:14"},"nodeType":"YulFunctionCall","src":"5302:62:14"},"nodeType":"YulExpressionStatement","src":"5302:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5395:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5380:3:14"},"nodeType":"YulFunctionCall","src":"5380:18:14"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5400:5:14","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5373:6:14"},"nodeType":"YulFunctionCall","src":"5373:33:14"},"nodeType":"YulExpressionStatement","src":"5373:33:14"},{"nodeType":"YulAssignment","src":"5415:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5427:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5438:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5423:3:14"},"nodeType":"YulFunctionCall","src":"5423:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5415:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5200:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5214:4:14","type":""}],"src":"5049:399:14"},{"body":{"nodeType":"YulBlock","src":"5627:228:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5644:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5655:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5637:6:14"},"nodeType":"YulFunctionCall","src":"5637:21:14"},"nodeType":"YulExpressionStatement","src":"5637:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5678:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5689:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5674:3:14"},"nodeType":"YulFunctionCall","src":"5674:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"5694:2:14","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5667:6:14"},"nodeType":"YulFunctionCall","src":"5667:30:14"},"nodeType":"YulExpressionStatement","src":"5667:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5717:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5728:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5713:3:14"},"nodeType":"YulFunctionCall","src":"5713:18:14"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5733:34:14","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:14"},"nodeType":"YulFunctionCall","src":"5706:62:14"},"nodeType":"YulExpressionStatement","src":"5706:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5788:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5799:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5784:3:14"},"nodeType":"YulFunctionCall","src":"5784:18:14"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5804:8:14","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5777:6:14"},"nodeType":"YulFunctionCall","src":"5777:36:14"},"nodeType":"YulExpressionStatement","src":"5777:36:14"},{"nodeType":"YulAssignment","src":"5822:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5834:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5845:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5830:3:14"},"nodeType":"YulFunctionCall","src":"5830:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5822:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5604:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5618:4:14","type":""}],"src":"5453:402:14"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610701565b60405180910390f35b6100df6100da366004610772565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461079c565b61026e565b604051601281526020016100c3565b6100df610131366004610772565b61031d565b6100f36101443660046107d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df610175366004610772565b610368565b6100df610188366004610772565b610401565b6100f361019b3660046107fa565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061082d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061082d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610354908690610868565b61040e565b6060600480546101d59061082d565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a7908490610868565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072e57858101830151858201604001528201610712565b81811115610740576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461076d57600080fd5b919050565b6000806040838503121561078557600080fd5b61078e83610756565b946020939093013593505050565b6000806000606084860312156107b157600080fd5b6107ba84610756565b92506107c860208501610756565b9150604084013590509250925092565b6000602082840312156107ea57600080fd5b6107f382610756565b9392505050565b6000806040838503121561080d57600080fd5b61081683610756565b915061082460208401610756565b90509250929050565b600181811c9082168061084157607f821691505b6020821081141561086257634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561088957634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220f2ae25be6c5263262569474a2b70a89f2637c7118b0b59fdb6320934d930b70364736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x868 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x712 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78E DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7BA DUP5 PUSH2 0x756 JUMP JUMPDEST SWAP3 POP PUSH2 0x7C8 PUSH1 0x20 DUP6 ADD PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F3 DUP3 PUSH2 0x756 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x816 DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH2 0x824 PUSH1 0x20 DUP5 ADD PUSH2 0x756 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x841 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x862 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x889 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xAE 0x25 0xBE PUSH13 0x5263262569474A2B70A89F2637 0xC7 GT DUP12 SIGNEXTEND MSIZE REVERT 0xB6 ORIGIN MULMOD CALLVALUE 0xD9 ADDRESS 0xB7 SUB PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"86:150:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4238:166;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:14;;1211:22;1193:41;;1181:2;1166:18;4238:166:5;1053:187:14;3229:106:5;3316:12;;3229:106;;;1391:25:14;;;1379:2;1364:18;3229:106:5;1245:177:14;4871:478:5;;;;;;:::i;:::-;;:::i;3078:91::-;;;3160:2;1902:36:14;;1890:2;1875:18;3078:91:5;1760:184:14;5744:212:5;;;;;;:::i;:::-;;:::i;3393:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3493:18:5;3467:7;3493:18;;;;;;;;;;;;3393:125;2352:102;;;:::i;6443:405::-;;;;;;:::i;:::-;;:::i;3721:172::-;;;;;;:::i;:::-;;:::i;3951:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4066:18:5;;;4040:7;4066:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3951:149;2141:98;2195:13;2227:5;2220:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98;:::o;4238:166::-;4321:4;4337:39;719:10:8;4360:7:5;4369:6;4337:8;:39::i;:::-;-1:-1:-1;4393:4:5;4238:166;;;;:::o;4871:478::-;5007:4;5023:36;5033:6;5041:9;5052:6;5023:9;:36::i;:::-;-1:-1:-1;;;;;5097:19:5;;5070:24;5097:19;;;:11;:19;;;;;;;;719:10:8;5097:33:5;;;;;;;;5148:26;;;;5140:79;;;;-1:-1:-1;;;5140:79:5;;2992:2:14;5140:79:5;;;2974:21:14;3031:2;3011:18;;;3004:30;3070:34;3050:18;;;3043:62;-1:-1:-1;;;3121:18:14;;;3114:38;3169:19;;5140:79:5;;;;;;;;;5253:57;5262:6;719:10:8;5303:6:5;5284:16;:25;5253:8;:57::i;:::-;-1:-1:-1;5338:4:5;;4871:478;-1:-1:-1;;;;4871:478:5:o;5744:212::-;719:10:8;5832:4:5;5880:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5880:34:5;;;;;;;;;;5832:4;;5848:80;;5871:7;;5880:47;;5917:10;;5880:47;:::i;:::-;5848:8;:80::i;2352:102::-;2408:13;2440:7;2433:14;;;;;:::i;6443:405::-;719:10:8;6536:4:5;6579:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6579:34:5;;;;;;;;;;6631:35;;;;6623:85;;;;-1:-1:-1;;;6623:85:5;;3631:2:14;6623:85:5;;;3613:21:14;3670:2;3650:18;;;3643:30;3709:34;3689:18;;;3682:62;-1:-1:-1;;;3760:18:14;;;3753:35;3805:19;;6623:85:5;3429:401:14;6623:85:5;6742:67;719:10:8;6765:7:5;6793:15;6774:16;:34;6742:8;:67::i;:::-;-1:-1:-1;6837:4:5;;6443:405;-1:-1:-1;;;6443:405:5:o;3721:172::-;3807:4;3823:42;719:10:8;3847:9:5;3858:6;3823:9;:42::i;10019:370::-;-1:-1:-1;;;;;10150:19:5;;10142:68;;;;-1:-1:-1;;;10142:68:5;;4037:2:14;10142:68:5;;;4019:21:14;4076:2;4056:18;;;4049:30;4115:34;4095:18;;;4088:62;-1:-1:-1;;;4166:18:14;;;4159:34;4210:19;;10142:68:5;3835:400:14;10142:68:5;-1:-1:-1;;;;;10228:21:5;;10220:68;;;;-1:-1:-1;;;10220:68:5;;4442:2:14;10220:68:5;;;4424:21:14;4481:2;4461:18;;;4454:30;4520:34;4500:18;;;4493:62;-1:-1:-1;;;4571:18:14;;;4564:32;4613:19;;10220:68:5;4240:398:14;10220:68:5;-1:-1:-1;;;;;10299:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10350:32;;1391:25:14;;;10350:32:5;;1364:18:14;10350:32:5;;;;;;;10019:370;;;:::o;7322:713::-;-1:-1:-1;;;;;7457:20:5;;7449:70;;;;-1:-1:-1;;;7449:70:5;;4845:2:14;7449:70:5;;;4827:21:14;4884:2;4864:18;;;4857:30;4923:34;4903:18;;;4896:62;-1:-1:-1;;;4974:18:14;;;4967:35;5019:19;;7449:70:5;4643:401:14;7449:70:5;-1:-1:-1;;;;;7537:23:5;;7529:71;;;;-1:-1:-1;;;7529:71:5;;5251:2:14;7529:71:5;;;5233:21:14;5290:2;5270:18;;;5263:30;5329:34;5309:18;;;5302:62;-1:-1:-1;;;5380:18:14;;;5373:33;5423:19;;7529:71:5;5049:399:14;7529:71:5;-1:-1:-1;;;;;7693:17:5;;7669:21;7693:17;;;;;;;;;;;7728:23;;;;7720:74;;;;-1:-1:-1;;;7720:74:5;;5655:2:14;7720:74:5;;;5637:21:14;5694:2;5674:18;;;5667:30;5733:34;5713:18;;;5706:62;-1:-1:-1;;;5784:18:14;;;5777:36;5830:19;;7720:74:5;5453:402:14;7720:74:5;-1:-1:-1;;;;;7828:17:5;;;:9;:17;;;;;;;;;;;7848:22;;;7828:42;;7890:20;;;;;;;;:30;;7864:6;;7828:9;7890:30;;7864:6;;7890:30;:::i;:::-;;;;;;;;7953:9;-1:-1:-1;;;;;7936:35:5;7945:6;-1:-1:-1;;;;;7936:35:5;;7964:6;7936:35;;;;1391:25:14;;1379:2;1364:18;;1245:177;7936:35:5;;;;;;;;7439:596;7322:713;;;:::o;14:597:14:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:14;574:15;-1:-1:-1;;570:29:14;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:14:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:14;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:14:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:14:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;3199:225::-;3239:3;3270:1;3266:6;3263:1;3260:13;3257:136;;;3315:10;3310:3;3306:20;3303:1;3296:31;3350:4;3347:1;3340:15;3378:4;3375:1;3368:15;3257:136;-1:-1:-1;3409:9:14;;3199:225::o"},"gasEstimates":{"creation":{"codeDepositCost":"448800","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24619","balanceOf(address)":"2562","decimals()":"266","decreaseAllowance(address,uint256)":"26954","increaseAllowance(address,uint256)":"26934","name()":"infinite","symbol()":"infinite","totalSupply()":"2326","transfer(address,uint256)":"51253","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DappToken.sol\":\"DappToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(sender, _msgSender(), currentAllowance - amount);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/DappToken.sol\":{\"content\":\"pragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\n\\r\\ncontract DappToken is ERC20 {\\r\\n    constructor() public ERC20(\\\"DApp Token\\\", \\\"DAPP\\\") {\\r\\n        _mint(msg.sender, 1000000000000000000000000);\\r\\n    }\\r\\n}\",\"keccak256\":\"0x2ad76883d74a214eaadb7553d880d769b31d91ba4a08785cecfdeb444a2fb44d\"}},\"version\":1}","storageLayout":{"storage":[{"astId":592,"contract":"contracts/DappToken.sol:DappToken","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":598,"contract":"contracts/DappToken.sol:DappToken","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":600,"contract":"contracts/DappToken.sol:DappToken","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":602,"contract":"contracts/DappToken.sol:DappToken","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":604,"contract":"contracts/DappToken.sol:DappToken","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Staking.sol":{"TokenFarm":{"abi":[{"inputs":[{"internalType":"address","name":"_dapiServer","type":"address"},{"internalType":"address","name":"_dappTokenAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"addAllowedTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"dapiServer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dappToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getTokenEthPrice","outputs":[{"internalType":"int224","name":"value","type":"int224"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"token","type":"address"}],"name":"getUserStakingBalanceEthValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserTotalValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"int224ToUint256","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"issueTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"bytes32","name":"DapiName","type":"bytes32"}],"name":"setDapiName","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"token","type":"address"}],"name":"stakeTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"stakers","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"stakingBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tokenDapiMapping","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"tokenIsAllowed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"uniqueTokensStaked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"unstakeTokens","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_20":{"entryPoint":null,"id":20,"parameterSlots":1,"returnSlots":0},"@_2091":{"entryPoint":null,"id":2091,"parameterSlots":2,"returnSlots":0},"@_495":{"entryPoint":null,"id":495,"parameterSlots":0,"returnSlots":0},"@_msgSender_1237":{"entryPoint":null,"id":1237,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_575":{"entryPoint":287,"id":575,"parameterSlots":1,"returnSlots":0},"@setDapiServer_41":{"entryPoint":162,"id":41,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":535,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":564,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_stringliteral_d85702f97c81e6e3d5e300d9d657ae8f2b8799c189bbf9c6f51791741d49abd5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":620,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1229:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:14","statements":[{"nodeType":"YulAssignment","src":"84:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:14"},"nodeType":"YulFunctionCall","src":"93:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:14"}]},{"body":{"nodeType":"YulBlock","src":"169:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:14"},"nodeType":"YulFunctionCall","src":"171:12:14"},"nodeType":"YulExpressionStatement","src":"171:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:14"},"nodeType":"YulFunctionCall","src":"150:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:14"},"nodeType":"YulFunctionCall","src":"146:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:14"},"nodeType":"YulFunctionCall","src":"135:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:14"},"nodeType":"YulFunctionCall","src":"125:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:14"},"nodeType":"YulFunctionCall","src":"118:50:14"},"nodeType":"YulIf","src":"115:70:14"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:14","type":""}],"src":"14:177:14"},{"body":{"nodeType":"YulBlock","src":"294:195:14","statements":[{"body":{"nodeType":"YulBlock","src":"340:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"349:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"352:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"342:6:14"},"nodeType":"YulFunctionCall","src":"342:12:14"},"nodeType":"YulExpressionStatement","src":"342:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"315:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"324:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"311:3:14"},"nodeType":"YulFunctionCall","src":"311:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"336:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"307:3:14"},"nodeType":"YulFunctionCall","src":"307:32:14"},"nodeType":"YulIf","src":"304:52:14"},{"nodeType":"YulAssignment","src":"365:50:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"405:9:14"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"375:29:14"},"nodeType":"YulFunctionCall","src":"375:40:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"365:6:14"}]},{"nodeType":"YulAssignment","src":"424:59:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"468:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"479:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"464:3:14"},"nodeType":"YulFunctionCall","src":"464:18:14"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"434:29:14"},"nodeType":"YulFunctionCall","src":"434:49:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"424:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"252:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"263:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"275:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"283:6:14","type":""}],"src":"196:293:14"},{"body":{"nodeType":"YulBlock","src":"668:174:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"685:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"696:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"678:6:14"},"nodeType":"YulFunctionCall","src":"678:21:14"},"nodeType":"YulExpressionStatement","src":"678:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"719:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"730:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"715:3:14"},"nodeType":"YulFunctionCall","src":"715:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"735:2:14","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"708:6:14"},"nodeType":"YulFunctionCall","src":"708:30:14"},"nodeType":"YulExpressionStatement","src":"708:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"758:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"769:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"754:3:14"},"nodeType":"YulFunctionCall","src":"754:18:14"},{"hexValue":"64415049207365727665722061646472657373207a65726f","kind":"string","nodeType":"YulLiteral","src":"774:26:14","type":"","value":"dAPI server address zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"747:6:14"},"nodeType":"YulFunctionCall","src":"747:54:14"},"nodeType":"YulExpressionStatement","src":"747:54:14"},{"nodeType":"YulAssignment","src":"810:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"822:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"833:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"818:3:14"},"nodeType":"YulFunctionCall","src":"818:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"810:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_d85702f97c81e6e3d5e300d9d657ae8f2b8799c189bbf9c6f51791741d49abd5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"645:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"659:4:14","type":""}],"src":"494:348:14"},{"body":{"nodeType":"YulBlock","src":"902:325:14","statements":[{"nodeType":"YulAssignment","src":"912:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"926:1:14","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"929:4:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"922:3:14"},"nodeType":"YulFunctionCall","src":"922:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"912:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"943:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"973:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"979:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"969:3:14"},"nodeType":"YulFunctionCall","src":"969:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"947:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1020:31:14","statements":[{"nodeType":"YulAssignment","src":"1022:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1036:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1044:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1032:3:14"},"nodeType":"YulFunctionCall","src":"1032:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1022:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1000:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"993:6:14"},"nodeType":"YulFunctionCall","src":"993:26:14"},"nodeType":"YulIf","src":"990:61:14"},{"body":{"nodeType":"YulBlock","src":"1110:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1131:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1138:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1143:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1134:3:14"},"nodeType":"YulFunctionCall","src":"1134:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1124:6:14"},"nodeType":"YulFunctionCall","src":"1124:31:14"},"nodeType":"YulExpressionStatement","src":"1124:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1175:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1178:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1168:6:14"},"nodeType":"YulFunctionCall","src":"1168:15:14"},"nodeType":"YulExpressionStatement","src":"1168:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1203:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1206:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1196:6:14"},"nodeType":"YulFunctionCall","src":"1196:15:14"},"nodeType":"YulExpressionStatement","src":"1196:15:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1066:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1089:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1097:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1086:2:14"},"nodeType":"YulFunctionCall","src":"1086:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1063:2:14"},"nodeType":"YulFunctionCall","src":"1063:38:14"},"nodeType":"YulIf","src":"1060:161:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"882:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"891:6:14","type":""}],"src":"847:380:14"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_d85702f97c81e6e3d5e300d9d657ae8f2b8799c189bbf9c6f51791741d49abd5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"dAPI server address zero\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c0604052600f60808190526e4461707020546f6b656e204661726d60881b60a090815262000032916002919062000171565b503480156200004057600080fd5b50604051620011a4380380620011a4833981016040819052620000639162000234565b816200006f81620000a2565b506200007b336200011f565b600380546001600160a01b0319166001600160a01b039290921691909117905550620002a9565b6001600160a01b038116620000fd5760405162461bcd60e51b815260206004820152601860248201527f64415049207365727665722061646472657373207a65726f0000000000000000604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200017f906200026c565b90600052602060002090601f016020900481019282620001a35760008555620001ee565b82601f10620001be57805160ff1916838001178555620001ee565b82800160010185558215620001ee579182015b82811115620001ee578251825591602001919060010190620001d1565b50620001fc92915062000200565b5090565b5b80821115620001fc576000815560010162000201565b80516001600160a01b03811681146200022f57600080fd5b919050565b600080604083850312156200024857600080fd5b620002538362000217565b9150620002636020840162000217565b90509250929050565b600181811c908216806200028157607f821691505b60208210811415620002a357634e487b7160e01b600052602260045260246000fd5b50919050565b610eeb80620002b96000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80639f03866b116100ad578063dd5b846711610071578063dd5b84671461029b578063df00018d146102be578063f2fde38b146102e4578063f5588385146102f7578063fd5e6dd11461030a57600080fd5b80639f03866b14610222578063af3f5e2214610235578063b83e023414610248578063cc81e06014610268578063d4a56d1e1461027b57600080fd5b80635eb186f8116100f45780635eb186f8146101c357806360ab5852146101ee5780636bf233d7146101f6578063715018a6146102095780638da5cb5b1461021157600080fd5b806306fdde03146101315780630bea440d1461014f578063171e44ea1461016457806329161a00146101775780632d1ad8b8146101b0575b600080fd5b61013961031d565b6040516101469190610c24565b60405180910390f35b61016261015d366004610c95565b6103ab565b005b610162610172366004610cc1565b61053f565b6101a2610185366004610cdc565b600560209081526000928352604080842090915290825290205481565b604051908152602001610146565b6101626101be366004610cc1565b6105bb565b6003546101d6906001600160a01b031681565b6040516001600160a01b039091168152602001610146565b6101626106fb565b610162610204366004610d06565b610809565b61016261084f565b6001546001600160a01b03166101d6565b6000546101d6906001600160a01b031681565b6101a2610243366004610cc1565b610885565b6101a2610256366004610cc1565b60066020526000908152604090205481565b6101a2610276366004610cdc565b610909565b6101a2610289366004610cc1565b60076020526000908152604090205481565b6102ae6102a9366004610cc1565b610988565b6040519015158152602001610146565b6102d16102cc366004610cc1565b6109f2565b604051601b9190910b8152602001610146565b6101626102f2366004610cc1565b610a89565b6101a2610305366004610cc1565b610b21565b6101d6610318366004610d30565b610b3d565b6002805461032a90610d49565b80601f016020809104026020016040519081016040528092919081815260200182805461035690610d49565b80156103a35780601f10610378576101008083540402835291602001916103a3565b820191906000526020600020905b81548152906001019060200180831161038657829003601f168201915b505050505081565b600082116103f55760405162461bcd60e51b81526020600482015260126024820152710616d6f756e742063616e6e6f7420626520360741b60448201526064015b60405180910390fd5b6103fe81610988565b1561053b5761040d3382610b67565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd90606401602060405180830381600087803b15801561045b57600080fd5b505af115801561046f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104939190610d84565b506001600160a01b03811660009081526005602090815260408083203384529091529020546104c3908390610dbc565b6001600160a01b03821660009081526005602090815260408083203384528252808320939093556006905220546001141561053b57600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b031916331790555b5050565b6001546001600160a01b031633146105695760405162461bcd60e51b81526004016103ec90610dd4565b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081526005602090815260408083203384529091529020548061062c5760405162461bcd60e51b815260206004820152601b60248201527f7374616b696e672062616c616e63652063616e6e6f742062652030000000000060448201526064016103ec565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb90604401602060405180830381600087803b15801561067457600080fd5b505af1158015610688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ac9190610d84565b506001600160a01b0382166000908152600560209081526040808320338452825280832083905560069091529020546106e790600190610e09565b336000908152600660205260409020555050565b6001546001600160a01b031633146107255760405162461bcd60e51b81526004016103ec90610dd4565b60005b6004548110156108065760006004828154811061074757610747610e20565b6000918252602090912001546003546001600160a01b0391821692501663a9059cbb8261077381610885565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156107b957600080fd5b505af11580156107cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f19190610d84565b505080806107fe90610e36565b915050610728565b50565b6001546001600160a01b031633146108335760405162461bcd60e51b81526004016103ec90610dd4565b6001600160a01b03909116600090815260076020526040902055565b6001546001600160a01b031633146108795760405162461bcd60e51b81526004016103ec90610dd4565b6108836000610bd2565b565b6001600160a01b0381166000908152600660205260408120548190156109035760005b600854811015610901576108e384600883815481106108c9576108c9610e20565b6000918252602090912001546001600160a01b0316610909565b6108ed9083610dbc565b9150806108f981610e36565b9150506108a8565b505b92915050565b6001600160a01b03821660009081526006602052604081205461092e57506000610903565b600061093983610b21565b6001600160a01b03808516600090815260056020908152604080832093891683529290522054909150670de0b6b3a76400006109758383610e51565b61097f9190610e70565b95945050505050565b6000805b6008548110156109e957826001600160a01b0316600882815481106109b3576109b3610e20565b6000918252602090912001546001600160a01b031614156109d75750600192915050565b806109e181610e36565b91505061098c565b50600092915050565b6001600160a01b03818116600090815260076020526040808220548254915163386493e560e11b815260048101829052929390929116906370c927ca9060240160206040518083038186803b158015610a4a57600080fd5b505afa158015610a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a829190610e92565b9392505050565b6001546001600160a01b03163314610ab35760405162461bcd60e51b81526004016103ec90610dd4565b6001600160a01b038116610b185760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103ec565b61080681610bd2565b600080610b2d836109f2565b6001600160e01b03169392505050565b60048181548110610b4d57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0380821660009081526005602090815260408083209386168352929052205461053b576001600160a01b038216600090815260066020526040902054610bb5906001610dbc565b6001600160a01b0383166000908152600660205260409020555050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610c5157858101830151858201604001528201610c35565b81811115610c63576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610c9057600080fd5b919050565b60008060408385031215610ca857600080fd5b82359150610cb860208401610c79565b90509250929050565b600060208284031215610cd357600080fd5b610a8282610c79565b60008060408385031215610cef57600080fd5b610cf883610c79565b9150610cb860208401610c79565b60008060408385031215610d1957600080fd5b610d2283610c79565b946020939093013593505050565b600060208284031215610d4257600080fd5b5035919050565b600181811c90821680610d5d57607f821691505b60208210811415610d7e57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610d9657600080fd5b81518015158114610a8257600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610dcf57610dcf610da6565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015610e1b57610e1b610da6565b500390565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610e4a57610e4a610da6565b5060010190565b6000816000190483118215151615610e6b57610e6b610da6565b500290565b600082610e8d57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610ea457600080fd5b815180601b0b8114610a8257600080fdfea26469706673582212201bd1a392adaff6ee68f6f2d07094505cb259e642f3bc9fcc99a48973666603ad64736f6c63430008090033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0xF PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH15 0x4461707020546F6B656E204661726D PUSH1 0x88 SHL PUSH1 0xA0 SWAP1 DUP2 MSTORE PUSH3 0x32 SWAP2 PUSH1 0x2 SWAP2 SWAP1 PUSH3 0x171 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x11A4 CODESIZE SUB DUP1 PUSH3 0x11A4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x63 SWAP2 PUSH3 0x234 JUMP JUMPDEST DUP2 PUSH3 0x6F DUP2 PUSH3 0xA2 JUMP JUMPDEST POP PUSH3 0x7B CALLER PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0x2A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x64415049207365727665722061646472657373207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x17F SWAP1 PUSH3 0x26C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1A3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1EE JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1BE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1EE JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1EE JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1EE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1D1 JUMP JUMPDEST POP PUSH3 0x1FC SWAP3 SWAP2 POP PUSH3 0x200 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1FC JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x201 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x253 DUP4 PUSH3 0x217 JUMP JUMPDEST SWAP2 POP PUSH3 0x263 PUSH1 0x20 DUP5 ADD PUSH3 0x217 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x281 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2A3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEEB DUP1 PUSH3 0x2B9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F03866B GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xDD5B8467 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD5B8467 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xDF00018D EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xF5588385 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9F03866B EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xAF3F5E22 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xB83E0234 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xCC81E060 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xD4A56D1E EQ PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5EB186F8 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5EB186F8 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x60AB5852 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x6BF233D7 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xBEA440D EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x171E44EA EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x29161A00 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x2D1AD8B8 EQ PUSH2 0x1B0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xC24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0xC95 JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x53F JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xCDC JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1D6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x162 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0xD06 JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x84F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1D6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x885 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x276 CALLDATASIZE PUSH1 0x4 PUSH2 0xCDC JUMP JUMPDEST PUSH2 0x909 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AE PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x988 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1B SWAP2 SWAP1 SWAP2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0xA89 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0xB21 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0xD30 JUMP JUMPDEST PUSH2 0xB3D JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x32A SWAP1 PUSH2 0xD49 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x356 SWAP1 PUSH2 0xD49 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x378 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x386 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x616D6F756E742063616E6E6F74206265203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3FE DUP2 PUSH2 0x988 JUMP JUMPDEST ISZERO PUSH2 0x53B JUMPI PUSH2 0x40D CALLER DUP3 PUSH2 0xB67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x46F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x493 SWAP2 SWAP1 PUSH2 0xD84 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x4C3 SWAP1 DUP4 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x6 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x1 EQ ISZERO PUSH2 0x53B JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC SWAP1 PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7374616B696E672062616C616E63652063616E6E6F7420626520300000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x688 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0xD84 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x6E7 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0xE09 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x725 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC SWAP1 PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x806 JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x747 JUMPI PUSH2 0x747 PUSH2 0xE20 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 POP AND PUSH4 0xA9059CBB DUP3 PUSH2 0x773 DUP2 PUSH2 0x885 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0xD84 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x7FE SWAP1 PUSH2 0xE36 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x728 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC SWAP1 PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC SWAP1 PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0x883 PUSH1 0x0 PUSH2 0xBD2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 ISZERO PUSH2 0x903 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x901 JUMPI PUSH2 0x8E3 DUP5 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x8C9 JUMPI PUSH2 0x8C9 PUSH2 0xE20 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x909 JUMP JUMPDEST PUSH2 0x8ED SWAP1 DUP4 PUSH2 0xDBC JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x8F9 DUP2 PUSH2 0xE36 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8A8 JUMP JUMPDEST POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x92E JUMPI POP PUSH1 0x0 PUSH2 0x903 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x939 DUP4 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x975 DUP4 DUP4 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0x97F SWAP2 SWAP1 PUSH2 0xE70 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x9E9 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9B3 JUMPI PUSH2 0x9B3 PUSH2 0xE20 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x9D7 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x9E1 DUP2 PUSH2 0xE36 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x98C JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP3 SLOAD SWAP2 MLOAD PUSH4 0x386493E5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 AND SWAP1 PUSH4 0x70C927CA SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA5E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA82 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC SWAP1 PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH2 0x806 DUP2 PUSH2 0xBD2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB2D DUP4 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x53B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBB5 SWAP1 PUSH1 0x1 PUSH2 0xDBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC51 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC35 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC63 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xCB8 PUSH1 0x20 DUP5 ADD PUSH2 0xC79 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA82 DUP3 PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCF8 DUP4 PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP PUSH2 0xCB8 PUSH1 0x20 DUP5 ADD PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD22 DUP4 PUSH2 0xC79 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD5D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xD7E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xDCF JUMPI PUSH2 0xDCF PUSH2 0xDA6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1B PUSH2 0xDA6 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xE4A JUMPI PUSH2 0xE4A PUSH2 0xDA6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE6B JUMPI PUSH2 0xE6B PUSH2 0xDA6 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE8D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 PUSH1 0x1B SIGNEXTEND DUP2 EQ PUSH2 0xA82 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xD1 LOG3 SWAP3 0xAD 0xAF 0xF6 0xEE PUSH9 0xF6F2D07094505CB259 0xE6 TIMESTAMP RETURN 0xBC SWAP16 0xCC SWAP10 LOG4 DUP10 PUSH20 0x666603AD64736F6C634300080900330000000000 ","sourceMap":"445:38:13:-:0;396:4397;445:38;;396:4397;445:38;;;-1:-1:-1;;;445:38:13;;;;;;;;;;:::i;:::-;;809:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;880:11;416:26:0;880:11:13;416:13:0;:26::i;:::-;-1:-1:-1;921:32:4;719:10:8;921:18:4;:32::i;:::-;904:9:13::1;:37:::0;;-1:-1:-1;;;;;;904:37:13::1;-1:-1:-1::0;;;;;904:37:13;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;396:4397:13;;997:166:0;-1:-1:-1;;;;;1068:25:0;;1060:62;;;;-1:-1:-1;;;1060:62:0;;696:2:14;1060:62:0;;;678:21:14;735:2;715:18;;;708:30;774:26;754:18;;;747:54;818:18;;1060:62:0;;;;;;;;1132:10;:24;;-1:-1:-1;;;;;;1132:24:0;-1:-1:-1;;;;;1132:24:0;;;;;;;;;;997:166::o;2270:187:4:-;2362:6;;;-1:-1:-1;;;;;2378:17:4;;;-1:-1:-1;;;;;;2378:17:4;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;396:4397:13:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:4397:13;;;-1:-1:-1;396:4397:13;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:14;93:13;;-1:-1:-1;;;;;135:31:14;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;847:380::-;926:1;922:12;;;;969;;;990:61;;1044:4;1036:6;1032:17;1022:27;;990:61;1097:2;1089:6;1086:14;1066:18;1063:38;1060:161;;;1143:10;1138:3;1134:20;1131:1;1124:31;1178:4;1175:1;1168:15;1206:4;1203:1;1196:15;1060:161;;847:380;;;:::o;:::-;396:4397:13;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_msgSender_1237":{"entryPoint":null,"id":1237,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_575":{"entryPoint":3026,"id":575,"parameterSlots":1,"returnSlots":0},"@addAllowedTokens_2105":{"entryPoint":1343,"id":2105,"parameterSlots":1,"returnSlots":0},"@dapiServer_9":{"entryPoint":null,"id":9,"parameterSlots":0,"returnSlots":0},"@dappToken_2054":{"entryPoint":null,"id":2054,"parameterSlots":0,"returnSlots":0},"@getTokenEthPrice_2474":{"entryPoint":2546,"id":2474,"parameterSlots":1,"returnSlots":1},"@getUserStakingBalanceEthValue_2416":{"entryPoint":2313,"id":2416,"parameterSlots":2,"returnSlots":1},"@getUserTotalValue_2288":{"entryPoint":2181,"id":2288,"parameterSlots":1,"returnSlots":1},"@int224ToUint256_2371":{"entryPoint":2849,"id":2371,"parameterSlots":1,"returnSlots":1},"@issueTokens_2450":{"entryPoint":1787,"id":2450,"parameterSlots":0,"returnSlots":0},"@name_2051":{"entryPoint":797,"id":2051,"parameterSlots":0,"returnSlots":0},"@owner_504":{"entryPoint":null,"id":504,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_532":{"entryPoint":2127,"id":532,"parameterSlots":0,"returnSlots":0},"@setDapiName_2121":{"entryPoint":2057,"id":2121,"parameterSlots":2,"returnSlots":0},"@stakeTokens_2191":{"entryPoint":939,"id":2191,"parameterSlots":2,"returnSlots":0},"@stakers_2057":{"entryPoint":2877,"id":2057,"parameterSlots":0,"returnSlots":0},"@stakingBalance_2063":{"entryPoint":null,"id":2063,"parameterSlots":0,"returnSlots":0},"@tokenDapiMapping_2071":{"entryPoint":null,"id":2071,"parameterSlots":0,"returnSlots":0},"@tokenIsAllowed_2320":{"entryPoint":2440,"id":2320,"parameterSlots":1,"returnSlots":1},"@transferOwnership_555":{"entryPoint":2697,"id":555,"parameterSlots":1,"returnSlots":0},"@uniqueTokensStaked_2067":{"entryPoint":null,"id":2067,"parameterSlots":0,"returnSlots":0},"@unstakeTokens_2243":{"entryPoint":1467,"id":2243,"parameterSlots":1,"returnSlots":0},"@updateUniqueTokensStaked_2347":{"entryPoint":2919,"id":2347,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":3193,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3265,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3292,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes32":{"entryPoint":3334,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":3460,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_int224_fromMemory":{"entryPoint":3730,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3376,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":3221,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$1200__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int224__to_t_int224__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3108,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3540,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3516,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":3696,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3665,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3593,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3401,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":3638,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3494,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3616,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7276:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:476:14","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:14","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:14","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:14"},"nodeType":"YulFunctionCall","src":"166:21:14"},"nodeType":"YulExpressionStatement","src":"166:21:14"},{"nodeType":"YulVariableDeclaration","src":"196:27:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:14"},"nodeType":"YulFunctionCall","src":"210:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:14"},"nodeType":"YulFunctionCall","src":"239:18:14"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:14"},"nodeType":"YulFunctionCall","src":"232:34:14"},"nodeType":"YulExpressionStatement","src":"232:34:14"},{"nodeType":"YulVariableDeclaration","src":"275:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:14"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:14"},"nodeType":"YulFunctionCall","src":"369:17:14"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:14"},"nodeType":"YulFunctionCall","src":"365:26:14"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:14"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:14"},"nodeType":"YulFunctionCall","src":"403:14:14"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:14"},"nodeType":"YulFunctionCall","src":"399:23:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:14"},"nodeType":"YulFunctionCall","src":"393:30:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:14"},"nodeType":"YulFunctionCall","src":"358:66:14"},"nodeType":"YulExpressionStatement","src":"358:66:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:14"},"nodeType":"YulFunctionCall","src":"302:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:14","statements":[{"nodeType":"YulAssignment","src":"318:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:14"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:14"},"nodeType":"YulFunctionCall","src":"323:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:14","statements":[]},"src":"294:140:14"},{"body":{"nodeType":"YulBlock","src":"468:66:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"497:9:14"},{"name":"length","nodeType":"YulIdentifier","src":"508:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"493:3:14"},"nodeType":"YulFunctionCall","src":"493:22:14"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"489:3:14"},"nodeType":"YulFunctionCall","src":"489:31:14"},{"kind":"number","nodeType":"YulLiteral","src":"522:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"482:6:14"},"nodeType":"YulFunctionCall","src":"482:42:14"},"nodeType":"YulExpressionStatement","src":"482:42:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"449:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"452:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"446:2:14"},"nodeType":"YulFunctionCall","src":"446:13:14"},"nodeType":"YulIf","src":"443:91:14"},{"nodeType":"YulAssignment","src":"543:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:14"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"578:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"586:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"574:3:14"},"nodeType":"YulFunctionCall","src":"574:15:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"595:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"591:3:14"},"nodeType":"YulFunctionCall","src":"591:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"570:3:14"},"nodeType":"YulFunctionCall","src":"570:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"555:3:14"},"nodeType":"YulFunctionCall","src":"555:45:14"},{"kind":"number","nodeType":"YulLiteral","src":"602:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"551:3:14"},"nodeType":"YulFunctionCall","src":"551:54:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"543:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:14","type":""}],"src":"14:597:14"},{"body":{"nodeType":"YulBlock","src":"665:124:14","statements":[{"nodeType":"YulAssignment","src":"675:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"697:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"684:12:14"},"nodeType":"YulFunctionCall","src":"684:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"675:5:14"}]},{"body":{"nodeType":"YulBlock","src":"767:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"776:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"779:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"769:6:14"},"nodeType":"YulFunctionCall","src":"769:12:14"},"nodeType":"YulExpressionStatement","src":"769:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"726:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"737:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"757:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"748:3:14"},"nodeType":"YulFunctionCall","src":"748:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"761:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"744:3:14"},"nodeType":"YulFunctionCall","src":"744:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"733:3:14"},"nodeType":"YulFunctionCall","src":"733:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"723:2:14"},"nodeType":"YulFunctionCall","src":"723:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"716:6:14"},"nodeType":"YulFunctionCall","src":"716:50:14"},"nodeType":"YulIf","src":"713:70:14"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"655:5:14","type":""}],"src":"616:173:14"},{"body":{"nodeType":"YulBlock","src":"881:167:14","statements":[{"body":{"nodeType":"YulBlock","src":"927:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"929:6:14"},"nodeType":"YulFunctionCall","src":"929:12:14"},"nodeType":"YulExpressionStatement","src":"929:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"902:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"911:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"898:3:14"},"nodeType":"YulFunctionCall","src":"898:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"923:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"894:3:14"},"nodeType":"YulFunctionCall","src":"894:32:14"},"nodeType":"YulIf","src":"891:52:14"},{"nodeType":"YulAssignment","src":"952:33:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"975:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"962:12:14"},"nodeType":"YulFunctionCall","src":"962:23:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"952:6:14"}]},{"nodeType":"YulAssignment","src":"994:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1027:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1038:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:14"},"nodeType":"YulFunctionCall","src":"1023:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1004:18:14"},"nodeType":"YulFunctionCall","src":"1004:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"994:6:14"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"839:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"850:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"862:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"870:6:14","type":""}],"src":"794:254:14"},{"body":{"nodeType":"YulBlock","src":"1123:116:14","statements":[{"body":{"nodeType":"YulBlock","src":"1169:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1178:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1181:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1171:6:14"},"nodeType":"YulFunctionCall","src":"1171:12:14"},"nodeType":"YulExpressionStatement","src":"1171:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1144:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1153:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1140:3:14"},"nodeType":"YulFunctionCall","src":"1140:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1165:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1136:3:14"},"nodeType":"YulFunctionCall","src":"1136:32:14"},"nodeType":"YulIf","src":"1133:52:14"},{"nodeType":"YulAssignment","src":"1194:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1223:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1204:18:14"},"nodeType":"YulFunctionCall","src":"1204:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1194:6:14"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1089:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1100:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1112:6:14","type":""}],"src":"1053:186:14"},{"body":{"nodeType":"YulBlock","src":"1331:173:14","statements":[{"body":{"nodeType":"YulBlock","src":"1377:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1386:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1389:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1379:6:14"},"nodeType":"YulFunctionCall","src":"1379:12:14"},"nodeType":"YulExpressionStatement","src":"1379:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1352:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1361:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1348:3:14"},"nodeType":"YulFunctionCall","src":"1348:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1373:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1344:3:14"},"nodeType":"YulFunctionCall","src":"1344:32:14"},"nodeType":"YulIf","src":"1341:52:14"},{"nodeType":"YulAssignment","src":"1402:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1431:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1412:18:14"},"nodeType":"YulFunctionCall","src":"1412:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1402:6:14"}]},{"nodeType":"YulAssignment","src":"1450:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1483:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1494:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1479:3:14"},"nodeType":"YulFunctionCall","src":"1479:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1460:18:14"},"nodeType":"YulFunctionCall","src":"1460:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1450:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1289:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1300:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1312:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1320:6:14","type":""}],"src":"1244:260:14"},{"body":{"nodeType":"YulBlock","src":"1610:76:14","statements":[{"nodeType":"YulAssignment","src":"1620:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1632:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1643:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1628:3:14"},"nodeType":"YulFunctionCall","src":"1628:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1620:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1662:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"1673:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1655:6:14"},"nodeType":"YulFunctionCall","src":"1655:25:14"},"nodeType":"YulExpressionStatement","src":"1655:25:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1579:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1590:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1601:4:14","type":""}],"src":"1509:177:14"},{"body":{"nodeType":"YulBlock","src":"1807:102:14","statements":[{"nodeType":"YulAssignment","src":"1817:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1829:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1840:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1825:3:14"},"nodeType":"YulFunctionCall","src":"1825:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1817:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1859:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1874:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1890:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1895:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1886:3:14"},"nodeType":"YulFunctionCall","src":"1886:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1882:3:14"},"nodeType":"YulFunctionCall","src":"1882:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1870:3:14"},"nodeType":"YulFunctionCall","src":"1870:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1852:6:14"},"nodeType":"YulFunctionCall","src":"1852:51:14"},"nodeType":"YulExpressionStatement","src":"1852:51:14"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$1200__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1776:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1787:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1798:4:14","type":""}],"src":"1691:218:14"},{"body":{"nodeType":"YulBlock","src":"2001:167:14","statements":[{"body":{"nodeType":"YulBlock","src":"2047:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2056:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2059:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2049:6:14"},"nodeType":"YulFunctionCall","src":"2049:12:14"},"nodeType":"YulExpressionStatement","src":"2049:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2022:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2031:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2018:3:14"},"nodeType":"YulFunctionCall","src":"2018:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2043:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2014:3:14"},"nodeType":"YulFunctionCall","src":"2014:32:14"},"nodeType":"YulIf","src":"2011:52:14"},{"nodeType":"YulAssignment","src":"2072:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2101:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2082:18:14"},"nodeType":"YulFunctionCall","src":"2082:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2072:6:14"}]},{"nodeType":"YulAssignment","src":"2120:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2147:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2158:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2143:3:14"},"nodeType":"YulFunctionCall","src":"2143:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2130:12:14"},"nodeType":"YulFunctionCall","src":"2130:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2120:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1959:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1970:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1982:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1990:6:14","type":""}],"src":"1914:254:14"},{"body":{"nodeType":"YulBlock","src":"2274:102:14","statements":[{"nodeType":"YulAssignment","src":"2284:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2296:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2307:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2292:3:14"},"nodeType":"YulFunctionCall","src":"2292:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2284:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2326:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2341:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2357:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2362:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2353:3:14"},"nodeType":"YulFunctionCall","src":"2353:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"2366:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2349:3:14"},"nodeType":"YulFunctionCall","src":"2349:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2337:3:14"},"nodeType":"YulFunctionCall","src":"2337:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2319:6:14"},"nodeType":"YulFunctionCall","src":"2319:51:14"},"nodeType":"YulExpressionStatement","src":"2319:51:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2243:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2254:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2265:4:14","type":""}],"src":"2173:203:14"},{"body":{"nodeType":"YulBlock","src":"2482:76:14","statements":[{"nodeType":"YulAssignment","src":"2492:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2504:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2515:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2500:3:14"},"nodeType":"YulFunctionCall","src":"2500:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2492:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2534:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"2545:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2527:6:14"},"nodeType":"YulFunctionCall","src":"2527:25:14"},"nodeType":"YulExpressionStatement","src":"2527:25:14"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2451:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2462:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2473:4:14","type":""}],"src":"2381:177:14"},{"body":{"nodeType":"YulBlock","src":"2658:92:14","statements":[{"nodeType":"YulAssignment","src":"2668:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2680:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2691:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2676:3:14"},"nodeType":"YulFunctionCall","src":"2676:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2668:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2710:9:14"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2735:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2728:6:14"},"nodeType":"YulFunctionCall","src":"2728:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2721:6:14"},"nodeType":"YulFunctionCall","src":"2721:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2703:6:14"},"nodeType":"YulFunctionCall","src":"2703:41:14"},"nodeType":"YulExpressionStatement","src":"2703:41:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2627:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2638:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2649:4:14","type":""}],"src":"2563:187:14"},{"body":{"nodeType":"YulBlock","src":"2854:92:14","statements":[{"nodeType":"YulAssignment","src":"2864:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2876:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2887:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2872:3:14"},"nodeType":"YulFunctionCall","src":"2872:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2864:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2906:9:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2928:2:14","type":"","value":"27"},{"name":"value0","nodeType":"YulIdentifier","src":"2932:6:14"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"2917:10:14"},"nodeType":"YulFunctionCall","src":"2917:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2899:6:14"},"nodeType":"YulFunctionCall","src":"2899:41:14"},"nodeType":"YulExpressionStatement","src":"2899:41:14"}]},"name":"abi_encode_tuple_t_int224__to_t_int224__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2823:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2834:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2845:4:14","type":""}],"src":"2755:191:14"},{"body":{"nodeType":"YulBlock","src":"3021:110:14","statements":[{"body":{"nodeType":"YulBlock","src":"3067:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3076:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3079:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3069:6:14"},"nodeType":"YulFunctionCall","src":"3069:12:14"},"nodeType":"YulExpressionStatement","src":"3069:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3042:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3051:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3038:3:14"},"nodeType":"YulFunctionCall","src":"3038:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3063:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3034:3:14"},"nodeType":"YulFunctionCall","src":"3034:32:14"},"nodeType":"YulIf","src":"3031:52:14"},{"nodeType":"YulAssignment","src":"3092:33:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3115:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3102:12:14"},"nodeType":"YulFunctionCall","src":"3102:23:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3092:6:14"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2987:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2998:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3010:6:14","type":""}],"src":"2951:180:14"},{"body":{"nodeType":"YulBlock","src":"3191:325:14","statements":[{"nodeType":"YulAssignment","src":"3201:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3215:1:14","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"3218:4:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3211:3:14"},"nodeType":"YulFunctionCall","src":"3211:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3201:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"3232:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3262:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"3268:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:14"},"nodeType":"YulFunctionCall","src":"3258:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3236:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3309:31:14","statements":[{"nodeType":"YulAssignment","src":"3311:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3325:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3333:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3321:3:14"},"nodeType":"YulFunctionCall","src":"3321:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3311:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3289:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3282:6:14"},"nodeType":"YulFunctionCall","src":"3282:26:14"},"nodeType":"YulIf","src":"3279:61:14"},{"body":{"nodeType":"YulBlock","src":"3399:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3420:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3427:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3432:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3423:3:14"},"nodeType":"YulFunctionCall","src":"3423:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3413:6:14"},"nodeType":"YulFunctionCall","src":"3413:31:14"},"nodeType":"YulExpressionStatement","src":"3413:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3464:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3467:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3457:6:14"},"nodeType":"YulFunctionCall","src":"3457:15:14"},"nodeType":"YulExpressionStatement","src":"3457:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3492:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3495:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3485:6:14"},"nodeType":"YulFunctionCall","src":"3485:15:14"},"nodeType":"YulExpressionStatement","src":"3485:15:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3355:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3378:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3386:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3375:2:14"},"nodeType":"YulFunctionCall","src":"3375:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3352:2:14"},"nodeType":"YulFunctionCall","src":"3352:38:14"},"nodeType":"YulIf","src":"3349:161:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3171:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3180:6:14","type":""}],"src":"3136:380:14"},{"body":{"nodeType":"YulBlock","src":"3695:168:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3712:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3723:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3705:6:14"},"nodeType":"YulFunctionCall","src":"3705:21:14"},"nodeType":"YulExpressionStatement","src":"3705:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3746:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3757:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3742:3:14"},"nodeType":"YulFunctionCall","src":"3742:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"3762:2:14","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3735:6:14"},"nodeType":"YulFunctionCall","src":"3735:30:14"},"nodeType":"YulExpressionStatement","src":"3735:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3785:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3796:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3781:3:14"},"nodeType":"YulFunctionCall","src":"3781:18:14"},{"hexValue":"616d6f756e742063616e6e6f742062652030","kind":"string","nodeType":"YulLiteral","src":"3801:20:14","type":"","value":"amount cannot be 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3774:6:14"},"nodeType":"YulFunctionCall","src":"3774:48:14"},"nodeType":"YulExpressionStatement","src":"3774:48:14"},{"nodeType":"YulAssignment","src":"3831:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3843:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3854:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3839:3:14"},"nodeType":"YulFunctionCall","src":"3839:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3831:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3672:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3686:4:14","type":""}],"src":"3521:342:14"},{"body":{"nodeType":"YulBlock","src":"4025:218:14","statements":[{"nodeType":"YulAssignment","src":"4035:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4047:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4058:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4043:3:14"},"nodeType":"YulFunctionCall","src":"4043:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4035:4:14"}]},{"nodeType":"YulVariableDeclaration","src":"4070:29:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4088:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4093:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4084:3:14"},"nodeType":"YulFunctionCall","src":"4084:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"4097:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4080:3:14"},"nodeType":"YulFunctionCall","src":"4080:19:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4074:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4115:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4130:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"4138:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4126:3:14"},"nodeType":"YulFunctionCall","src":"4126:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4108:6:14"},"nodeType":"YulFunctionCall","src":"4108:34:14"},"nodeType":"YulExpressionStatement","src":"4108:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4162:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4173:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4158:3:14"},"nodeType":"YulFunctionCall","src":"4158:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4182:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"4190:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4178:3:14"},"nodeType":"YulFunctionCall","src":"4178:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4151:6:14"},"nodeType":"YulFunctionCall","src":"4151:43:14"},"nodeType":"YulExpressionStatement","src":"4151:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4214:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4225:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4210:3:14"},"nodeType":"YulFunctionCall","src":"4210:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"4230:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4203:6:14"},"nodeType":"YulFunctionCall","src":"4203:34:14"},"nodeType":"YulExpressionStatement","src":"4203:34:14"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3978:9:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3989:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3997:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4005:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4016:4:14","type":""}],"src":"3868:375:14"},{"body":{"nodeType":"YulBlock","src":"4326:199:14","statements":[{"body":{"nodeType":"YulBlock","src":"4372:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4381:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4384:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4374:6:14"},"nodeType":"YulFunctionCall","src":"4374:12:14"},"nodeType":"YulExpressionStatement","src":"4374:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4347:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4356:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4343:3:14"},"nodeType":"YulFunctionCall","src":"4343:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4368:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4339:3:14"},"nodeType":"YulFunctionCall","src":"4339:32:14"},"nodeType":"YulIf","src":"4336:52:14"},{"nodeType":"YulVariableDeclaration","src":"4397:29:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4416:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4410:5:14"},"nodeType":"YulFunctionCall","src":"4410:16:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4401:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4479:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4488:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4491:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4481:6:14"},"nodeType":"YulFunctionCall","src":"4481:12:14"},"nodeType":"YulExpressionStatement","src":"4481:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4448:5:14"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4469:5:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4462:6:14"},"nodeType":"YulFunctionCall","src":"4462:13:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4455:6:14"},"nodeType":"YulFunctionCall","src":"4455:21:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4445:2:14"},"nodeType":"YulFunctionCall","src":"4445:32:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4438:6:14"},"nodeType":"YulFunctionCall","src":"4438:40:14"},"nodeType":"YulIf","src":"4435:60:14"},{"nodeType":"YulAssignment","src":"4504:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"4514:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4504:6:14"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4292:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4303:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4315:6:14","type":""}],"src":"4248:277:14"},{"body":{"nodeType":"YulBlock","src":"4562:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4579:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4586:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4591:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4582:3:14"},"nodeType":"YulFunctionCall","src":"4582:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4572:6:14"},"nodeType":"YulFunctionCall","src":"4572:31:14"},"nodeType":"YulExpressionStatement","src":"4572:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4619:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4622:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4612:6:14"},"nodeType":"YulFunctionCall","src":"4612:15:14"},"nodeType":"YulExpressionStatement","src":"4612:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4643:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4646:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4636:6:14"},"nodeType":"YulFunctionCall","src":"4636:15:14"},"nodeType":"YulExpressionStatement","src":"4636:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4530:127:14"},{"body":{"nodeType":"YulBlock","src":"4710:80:14","statements":[{"body":{"nodeType":"YulBlock","src":"4737:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4739:16:14"},"nodeType":"YulFunctionCall","src":"4739:18:14"},"nodeType":"YulExpressionStatement","src":"4739:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4726:1:14"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4733:1:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4729:3:14"},"nodeType":"YulFunctionCall","src":"4729:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4723:2:14"},"nodeType":"YulFunctionCall","src":"4723:13:14"},"nodeType":"YulIf","src":"4720:39:14"},{"nodeType":"YulAssignment","src":"4768:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4779:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"4782:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4775:3:14"},"nodeType":"YulFunctionCall","src":"4775:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4768:3:14"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4693:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"4696:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4702:3:14","type":""}],"src":"4662:128:14"},{"body":{"nodeType":"YulBlock","src":"4969:182:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4986:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4997:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4979:6:14"},"nodeType":"YulFunctionCall","src":"4979:21:14"},"nodeType":"YulExpressionStatement","src":"4979:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5020:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5031:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5016:3:14"},"nodeType":"YulFunctionCall","src":"5016:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"5036:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5009:6:14"},"nodeType":"YulFunctionCall","src":"5009:30:14"},"nodeType":"YulExpressionStatement","src":"5009:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5059:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5070:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5055:3:14"},"nodeType":"YulFunctionCall","src":"5055:18:14"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"5075:34:14","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5048:6:14"},"nodeType":"YulFunctionCall","src":"5048:62:14"},"nodeType":"YulExpressionStatement","src":"5048:62:14"},{"nodeType":"YulAssignment","src":"5119:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5131:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5142:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5127:3:14"},"nodeType":"YulFunctionCall","src":"5127:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5119:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4946:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4960:4:14","type":""}],"src":"4795:356:14"},{"body":{"nodeType":"YulBlock","src":"5330:177:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5347:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5358:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5340:6:14"},"nodeType":"YulFunctionCall","src":"5340:21:14"},"nodeType":"YulExpressionStatement","src":"5340:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5381:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5392:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5377:3:14"},"nodeType":"YulFunctionCall","src":"5377:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"5397:2:14","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5370:6:14"},"nodeType":"YulFunctionCall","src":"5370:30:14"},"nodeType":"YulExpressionStatement","src":"5370:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5420:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5431:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5416:3:14"},"nodeType":"YulFunctionCall","src":"5416:18:14"},{"hexValue":"7374616b696e672062616c616e63652063616e6e6f742062652030","kind":"string","nodeType":"YulLiteral","src":"5436:29:14","type":"","value":"staking balance cannot be 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5409:6:14"},"nodeType":"YulFunctionCall","src":"5409:57:14"},"nodeType":"YulExpressionStatement","src":"5409:57:14"},{"nodeType":"YulAssignment","src":"5475:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5487:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5498:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5483:3:14"},"nodeType":"YulFunctionCall","src":"5483:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5475:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5307:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5321:4:14","type":""}],"src":"5156:351:14"},{"body":{"nodeType":"YulBlock","src":"5641:145:14","statements":[{"nodeType":"YulAssignment","src":"5651:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5663:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5674:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5659:3:14"},"nodeType":"YulFunctionCall","src":"5659:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5651:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5693:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5708:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5724:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5729:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5720:3:14"},"nodeType":"YulFunctionCall","src":"5720:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"5733:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5716:3:14"},"nodeType":"YulFunctionCall","src":"5716:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5704:3:14"},"nodeType":"YulFunctionCall","src":"5704:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5686:6:14"},"nodeType":"YulFunctionCall","src":"5686:51:14"},"nodeType":"YulExpressionStatement","src":"5686:51:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5757:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5768:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5753:3:14"},"nodeType":"YulFunctionCall","src":"5753:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"5773:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5746:6:14"},"nodeType":"YulFunctionCall","src":"5746:34:14"},"nodeType":"YulExpressionStatement","src":"5746:34:14"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5602:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5613:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5621:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5632:4:14","type":""}],"src":"5512:274:14"},{"body":{"nodeType":"YulBlock","src":"5840:76:14","statements":[{"body":{"nodeType":"YulBlock","src":"5862:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5864:16:14"},"nodeType":"YulFunctionCall","src":"5864:18:14"},"nodeType":"YulExpressionStatement","src":"5864:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5856:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"5859:1:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5853:2:14"},"nodeType":"YulFunctionCall","src":"5853:8:14"},"nodeType":"YulIf","src":"5850:34:14"},{"nodeType":"YulAssignment","src":"5893:17:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5905:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"5908:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5901:3:14"},"nodeType":"YulFunctionCall","src":"5901:9:14"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"5893:4:14"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5822:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"5825:1:14","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"5831:4:14","type":""}],"src":"5791:125:14"},{"body":{"nodeType":"YulBlock","src":"5953:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5970:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5977:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5982:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5973:3:14"},"nodeType":"YulFunctionCall","src":"5973:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5963:6:14"},"nodeType":"YulFunctionCall","src":"5963:31:14"},"nodeType":"YulExpressionStatement","src":"5963:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6010:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6013:4:14","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6003:6:14"},"nodeType":"YulFunctionCall","src":"6003:15:14"},"nodeType":"YulExpressionStatement","src":"6003:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6034:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6037:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6027:6:14"},"nodeType":"YulFunctionCall","src":"6027:15:14"},"nodeType":"YulExpressionStatement","src":"6027:15:14"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"5921:127:14"},{"body":{"nodeType":"YulBlock","src":"6100:88:14","statements":[{"body":{"nodeType":"YulBlock","src":"6131:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6133:16:14"},"nodeType":"YulFunctionCall","src":"6133:18:14"},"nodeType":"YulExpressionStatement","src":"6133:18:14"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6116:5:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6127:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6123:3:14"},"nodeType":"YulFunctionCall","src":"6123:6:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6113:2:14"},"nodeType":"YulFunctionCall","src":"6113:17:14"},"nodeType":"YulIf","src":"6110:43:14"},{"nodeType":"YulAssignment","src":"6162:20:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6173:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"6180:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6169:3:14"},"nodeType":"YulFunctionCall","src":"6169:13:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6162:3:14"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6082:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6092:3:14","type":""}],"src":"6053:135:14"},{"body":{"nodeType":"YulBlock","src":"6245:116:14","statements":[{"body":{"nodeType":"YulBlock","src":"6304:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6306:16:14"},"nodeType":"YulFunctionCall","src":"6306:18:14"},"nodeType":"YulExpressionStatement","src":"6306:18:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6276:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6269:6:14"},"nodeType":"YulFunctionCall","src":"6269:9:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6262:6:14"},"nodeType":"YulFunctionCall","src":"6262:17:14"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6284:1:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6295:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6291:3:14"},"nodeType":"YulFunctionCall","src":"6291:6:14"},{"name":"x","nodeType":"YulIdentifier","src":"6299:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6287:3:14"},"nodeType":"YulFunctionCall","src":"6287:14:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6281:2:14"},"nodeType":"YulFunctionCall","src":"6281:21:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6258:3:14"},"nodeType":"YulFunctionCall","src":"6258:45:14"},"nodeType":"YulIf","src":"6255:71:14"},{"nodeType":"YulAssignment","src":"6335:20:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6350:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"6353:1:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6346:3:14"},"nodeType":"YulFunctionCall","src":"6346:9:14"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6335:7:14"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6224:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"6227:1:14","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"6233:7:14","type":""}],"src":"6193:168:14"},{"body":{"nodeType":"YulBlock","src":"6412:171:14","statements":[{"body":{"nodeType":"YulBlock","src":"6443:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6464:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6471:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6476:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6467:3:14"},"nodeType":"YulFunctionCall","src":"6467:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6457:6:14"},"nodeType":"YulFunctionCall","src":"6457:31:14"},"nodeType":"YulExpressionStatement","src":"6457:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6508:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6511:4:14","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6501:6:14"},"nodeType":"YulFunctionCall","src":"6501:15:14"},"nodeType":"YulExpressionStatement","src":"6501:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6536:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6539:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6529:6:14"},"nodeType":"YulFunctionCall","src":"6529:15:14"},"nodeType":"YulExpressionStatement","src":"6529:15:14"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6432:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6425:6:14"},"nodeType":"YulFunctionCall","src":"6425:9:14"},"nodeType":"YulIf","src":"6422:132:14"},{"nodeType":"YulAssignment","src":"6563:14:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6572:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"6575:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6568:3:14"},"nodeType":"YulFunctionCall","src":"6568:9:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6563:1:14"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6397:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"6400:1:14","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"6406:1:14","type":""}],"src":"6366:217:14"},{"body":{"nodeType":"YulBlock","src":"6668:199:14","statements":[{"body":{"nodeType":"YulBlock","src":"6714:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6723:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6726:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6716:6:14"},"nodeType":"YulFunctionCall","src":"6716:12:14"},"nodeType":"YulExpressionStatement","src":"6716:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6689:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"6698:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6685:3:14"},"nodeType":"YulFunctionCall","src":"6685:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"6710:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6681:3:14"},"nodeType":"YulFunctionCall","src":"6681:32:14"},"nodeType":"YulIf","src":"6678:52:14"},{"nodeType":"YulVariableDeclaration","src":"6739:29:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6758:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6752:5:14"},"nodeType":"YulFunctionCall","src":"6752:16:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6743:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"6821:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6830:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6833:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6823:6:14"},"nodeType":"YulFunctionCall","src":"6823:12:14"},"nodeType":"YulExpressionStatement","src":"6823:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6790:5:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6808:2:14","type":"","value":"27"},{"name":"value","nodeType":"YulIdentifier","src":"6812:5:14"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"6797:10:14"},"nodeType":"YulFunctionCall","src":"6797:21:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6787:2:14"},"nodeType":"YulFunctionCall","src":"6787:32:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6780:6:14"},"nodeType":"YulFunctionCall","src":"6780:40:14"},"nodeType":"YulIf","src":"6777:60:14"},{"nodeType":"YulAssignment","src":"6846:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"6856:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6846:6:14"}]}]},"name":"abi_decode_tuple_t_int224_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6634:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6645:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6657:6:14","type":""}],"src":"6588:279:14"},{"body":{"nodeType":"YulBlock","src":"7046:228:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7063:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7074:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7056:6:14"},"nodeType":"YulFunctionCall","src":"7056:21:14"},"nodeType":"YulExpressionStatement","src":"7056:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7097:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7108:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7093:3:14"},"nodeType":"YulFunctionCall","src":"7093:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"7113:2:14","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7086:6:14"},"nodeType":"YulFunctionCall","src":"7086:30:14"},"nodeType":"YulExpressionStatement","src":"7086:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7136:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7147:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7132:3:14"},"nodeType":"YulFunctionCall","src":"7132:18:14"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"7152:34:14","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7125:6:14"},"nodeType":"YulFunctionCall","src":"7125:62:14"},"nodeType":"YulExpressionStatement","src":"7125:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7207:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7218:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7203:3:14"},"nodeType":"YulFunctionCall","src":"7203:18:14"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"7223:8:14","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7196:6:14"},"nodeType":"YulFunctionCall","src":"7196:36:14"},"nodeType":"YulExpressionStatement","src":"7196:36:14"},{"nodeType":"YulAssignment","src":"7241:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7253:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7264:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7249:3:14"},"nodeType":"YulFunctionCall","src":"7249:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7241:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7023:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7037:4:14","type":""}],"src":"6872:402:14"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1200__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_int224__to_t_int224__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, signextend(27, value0))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"amount cannot be 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"staking balance cannot be 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_decode_tuple_t_int224_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, signextend(27, value))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061012c5760003560e01c80639f03866b116100ad578063dd5b846711610071578063dd5b84671461029b578063df00018d146102be578063f2fde38b146102e4578063f5588385146102f7578063fd5e6dd11461030a57600080fd5b80639f03866b14610222578063af3f5e2214610235578063b83e023414610248578063cc81e06014610268578063d4a56d1e1461027b57600080fd5b80635eb186f8116100f45780635eb186f8146101c357806360ab5852146101ee5780636bf233d7146101f6578063715018a6146102095780638da5cb5b1461021157600080fd5b806306fdde03146101315780630bea440d1461014f578063171e44ea1461016457806329161a00146101775780632d1ad8b8146101b0575b600080fd5b61013961031d565b6040516101469190610c24565b60405180910390f35b61016261015d366004610c95565b6103ab565b005b610162610172366004610cc1565b61053f565b6101a2610185366004610cdc565b600560209081526000928352604080842090915290825290205481565b604051908152602001610146565b6101626101be366004610cc1565b6105bb565b6003546101d6906001600160a01b031681565b6040516001600160a01b039091168152602001610146565b6101626106fb565b610162610204366004610d06565b610809565b61016261084f565b6001546001600160a01b03166101d6565b6000546101d6906001600160a01b031681565b6101a2610243366004610cc1565b610885565b6101a2610256366004610cc1565b60066020526000908152604090205481565b6101a2610276366004610cdc565b610909565b6101a2610289366004610cc1565b60076020526000908152604090205481565b6102ae6102a9366004610cc1565b610988565b6040519015158152602001610146565b6102d16102cc366004610cc1565b6109f2565b604051601b9190910b8152602001610146565b6101626102f2366004610cc1565b610a89565b6101a2610305366004610cc1565b610b21565b6101d6610318366004610d30565b610b3d565b6002805461032a90610d49565b80601f016020809104026020016040519081016040528092919081815260200182805461035690610d49565b80156103a35780601f10610378576101008083540402835291602001916103a3565b820191906000526020600020905b81548152906001019060200180831161038657829003601f168201915b505050505081565b600082116103f55760405162461bcd60e51b81526020600482015260126024820152710616d6f756e742063616e6e6f7420626520360741b60448201526064015b60405180910390fd5b6103fe81610988565b1561053b5761040d3382610b67565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd90606401602060405180830381600087803b15801561045b57600080fd5b505af115801561046f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104939190610d84565b506001600160a01b03811660009081526005602090815260408083203384529091529020546104c3908390610dbc565b6001600160a01b03821660009081526005602090815260408083203384528252808320939093556006905220546001141561053b57600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b031916331790555b5050565b6001546001600160a01b031633146105695760405162461bcd60e51b81526004016103ec90610dd4565b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081526005602090815260408083203384529091529020548061062c5760405162461bcd60e51b815260206004820152601b60248201527f7374616b696e672062616c616e63652063616e6e6f742062652030000000000060448201526064016103ec565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb90604401602060405180830381600087803b15801561067457600080fd5b505af1158015610688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ac9190610d84565b506001600160a01b0382166000908152600560209081526040808320338452825280832083905560069091529020546106e790600190610e09565b336000908152600660205260409020555050565b6001546001600160a01b031633146107255760405162461bcd60e51b81526004016103ec90610dd4565b60005b6004548110156108065760006004828154811061074757610747610e20565b6000918252602090912001546003546001600160a01b0391821692501663a9059cbb8261077381610885565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156107b957600080fd5b505af11580156107cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f19190610d84565b505080806107fe90610e36565b915050610728565b50565b6001546001600160a01b031633146108335760405162461bcd60e51b81526004016103ec90610dd4565b6001600160a01b03909116600090815260076020526040902055565b6001546001600160a01b031633146108795760405162461bcd60e51b81526004016103ec90610dd4565b6108836000610bd2565b565b6001600160a01b0381166000908152600660205260408120548190156109035760005b600854811015610901576108e384600883815481106108c9576108c9610e20565b6000918252602090912001546001600160a01b0316610909565b6108ed9083610dbc565b9150806108f981610e36565b9150506108a8565b505b92915050565b6001600160a01b03821660009081526006602052604081205461092e57506000610903565b600061093983610b21565b6001600160a01b03808516600090815260056020908152604080832093891683529290522054909150670de0b6b3a76400006109758383610e51565b61097f9190610e70565b95945050505050565b6000805b6008548110156109e957826001600160a01b0316600882815481106109b3576109b3610e20565b6000918252602090912001546001600160a01b031614156109d75750600192915050565b806109e181610e36565b91505061098c565b50600092915050565b6001600160a01b03818116600090815260076020526040808220548254915163386493e560e11b815260048101829052929390929116906370c927ca9060240160206040518083038186803b158015610a4a57600080fd5b505afa158015610a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a829190610e92565b9392505050565b6001546001600160a01b03163314610ab35760405162461bcd60e51b81526004016103ec90610dd4565b6001600160a01b038116610b185760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103ec565b61080681610bd2565b600080610b2d836109f2565b6001600160e01b03169392505050565b60048181548110610b4d57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0380821660009081526005602090815260408083209386168352929052205461053b576001600160a01b038216600090815260066020526040902054610bb5906001610dbc565b6001600160a01b0383166000908152600660205260409020555050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610c5157858101830151858201604001528201610c35565b81811115610c63576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610c9057600080fd5b919050565b60008060408385031215610ca857600080fd5b82359150610cb860208401610c79565b90509250929050565b600060208284031215610cd357600080fd5b610a8282610c79565b60008060408385031215610cef57600080fd5b610cf883610c79565b9150610cb860208401610c79565b60008060408385031215610d1957600080fd5b610d2283610c79565b946020939093013593505050565b600060208284031215610d4257600080fd5b5035919050565b600181811c90821680610d5d57607f821691505b60208210811415610d7e57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610d9657600080fd5b81518015158114610a8257600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610dcf57610dcf610da6565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015610e1b57610e1b610da6565b500390565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610e4a57610e4a610da6565b5060010190565b6000816000190483118215151615610e6b57610e6b610da6565b500290565b600082610e8d57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610ea457600080fd5b815180601b0b8114610a8257600080fdfea26469706673582212201bd1a392adaff6ee68f6f2d07094505cb259e642f3bc9fcc99a48973666603ad64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F03866B GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xDD5B8467 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD5B8467 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xDF00018D EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xF5588385 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9F03866B EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xAF3F5E22 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xB83E0234 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xCC81E060 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xD4A56D1E EQ PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5EB186F8 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5EB186F8 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x60AB5852 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x6BF233D7 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xBEA440D EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x171E44EA EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x29161A00 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x2D1AD8B8 EQ PUSH2 0x1B0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xC24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0xC95 JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x53F JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xCDC JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1D6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x162 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0xD06 JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x84F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1D6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x885 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x276 CALLDATASIZE PUSH1 0x4 PUSH2 0xCDC JUMP JUMPDEST PUSH2 0x909 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AE PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x988 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1B SWAP2 SWAP1 SWAP2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0xA89 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0xB21 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0xD30 JUMP JUMPDEST PUSH2 0xB3D JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x32A SWAP1 PUSH2 0xD49 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x356 SWAP1 PUSH2 0xD49 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x378 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x386 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x616D6F756E742063616E6E6F74206265203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3FE DUP2 PUSH2 0x988 JUMP JUMPDEST ISZERO PUSH2 0x53B JUMPI PUSH2 0x40D CALLER DUP3 PUSH2 0xB67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x46F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x493 SWAP2 SWAP1 PUSH2 0xD84 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x4C3 SWAP1 DUP4 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x6 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x1 EQ ISZERO PUSH2 0x53B JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC SWAP1 PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7374616B696E672062616C616E63652063616E6E6F7420626520300000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x688 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0xD84 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x6E7 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0xE09 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x725 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC SWAP1 PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x806 JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x747 JUMPI PUSH2 0x747 PUSH2 0xE20 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 POP AND PUSH4 0xA9059CBB DUP3 PUSH2 0x773 DUP2 PUSH2 0x885 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0xD84 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x7FE SWAP1 PUSH2 0xE36 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x728 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC SWAP1 PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC SWAP1 PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0x883 PUSH1 0x0 PUSH2 0xBD2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 ISZERO PUSH2 0x903 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x901 JUMPI PUSH2 0x8E3 DUP5 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x8C9 JUMPI PUSH2 0x8C9 PUSH2 0xE20 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x909 JUMP JUMPDEST PUSH2 0x8ED SWAP1 DUP4 PUSH2 0xDBC JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x8F9 DUP2 PUSH2 0xE36 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8A8 JUMP JUMPDEST POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x92E JUMPI POP PUSH1 0x0 PUSH2 0x903 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x939 DUP4 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x975 DUP4 DUP4 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0x97F SWAP2 SWAP1 PUSH2 0xE70 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x9E9 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9B3 JUMPI PUSH2 0x9B3 PUSH2 0xE20 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x9D7 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x9E1 DUP2 PUSH2 0xE36 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x98C JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP3 SLOAD SWAP2 MLOAD PUSH4 0x386493E5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 AND SWAP1 PUSH4 0x70C927CA SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA5E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA82 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC SWAP1 PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH2 0x806 DUP2 PUSH2 0xBD2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB2D DUP4 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x53B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBB5 SWAP1 PUSH1 0x1 PUSH2 0xDBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC51 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC35 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC63 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xCB8 PUSH1 0x20 DUP5 ADD PUSH2 0xC79 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA82 DUP3 PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCF8 DUP4 PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP PUSH2 0xCB8 PUSH1 0x20 DUP5 ADD PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD22 DUP4 PUSH2 0xC79 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD5D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xD7E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xDCF JUMPI PUSH2 0xDCF PUSH2 0xDA6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1B PUSH2 0xDA6 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xE4A JUMPI PUSH2 0xE4A PUSH2 0xDA6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE6B JUMPI PUSH2 0xE6B PUSH2 0xDA6 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE8D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 PUSH1 0x1B SIGNEXTEND DUP2 EQ PUSH2 0xA82 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xD1 LOG3 SWAP3 0xAD 0xAF 0xF6 0xEE PUSH9 0xF6F2D07094505CB259 0xE6 TIMESTAMP RETURN 0xBC SWAP16 0xCC SWAP10 LOG4 DUP10 PUSH20 0x666603AD64736F6C634300080900330000000000 ","sourceMap":"396:4397:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;445:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1222:589;;;;;;:::i;:::-;;:::i;:::-;;957:102;;;;;;:::i;:::-;;:::i;577:69::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1655:25:14;;;1643:2;1628:18;577:69:13;1509:177:14;1855:391:13;;;;;;:::i;:::-;;:::i;490:23::-;;;;;-1:-1:-1;;;;;490:23:13;;;;;;-1:-1:-1;;;;;1870:32:14;;;1852:51;;1840:2;1825:18;490:23:13;1691:218:14;4169:368:13;;;:::i;1067:147::-;;;;;;:::i;:::-;;:::i;1668:101:4:-;;;:::i;1036:85::-;1108:6;;-1:-1:-1;;;;;1108:6:4;1036:85;;277:34:0;;;;;-1:-1:-1;;;;;277:34:0;;;2254:624:13;;;;;;:::i;:::-;;:::i;653:53::-;;;;;;:::i;:::-;;;;;;;;;;;;;;3736:402;;;;;;:::i;:::-;;:::i;713:51::-;;;;;;:::i;:::-;;;;;;;;;;;;;;2886:374;;;;;;:::i;:::-;;:::i;:::-;;;2728:14:14;;2721:22;2703:41;;2691:2;2676:18;2886:374:13;2563:187:14;4545:245:13;;;;;;:::i;:::-;;:::i;:::-;;;2928:2:14;2917:22;;;;2899:41;;2887:2;2872:18;4545:245:13;2755:191:14;1918:198:4;;;;;;:::i;:::-;;:::i;3486:242:13:-;;;;;;:::i;:::-;;:::i;522:24::-;;;;;;:::i;:::-;;:::i;445:38::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1222:589::-;1353:1;1343:7;:11;1335:42;;;;-1:-1:-1;;;1335:42:13;;3723:2:14;1335:42:13;;;3705:21:14;3762:2;3742:18;;;3735:30;-1:-1:-1;;;3781:18:14;;;3774:48;3839:18;;1335:42:13;;;;;;;;;1392:21;1407:5;1392:14;:21::i;:::-;1388:416;;;1430:43;1455:10;1467:5;1430:24;:43::i;:::-;1488:62;;-1:-1:-1;;;1488:62:13;;1515:10;1488:62;;;4108:34:14;1535:4:13;4158:18:14;;;4151:43;4210:18;;;4203:34;;;-1:-1:-1;;;;;1488:26:13;;;;;4043:18:14;;1488:62:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1618:21:13;;;;;;:14;:21;;;;;;;;1640:10;1618:33;;;;;;;;:60;;1671:7;;1618:60;:::i;:::-;-1:-1:-1;;;;;1565:21:13;;;;;;:14;:21;;;;;;;;1587:10;1565:33;;;;;;;:113;;;;1697:18;:30;;;;1731:1;1697:35;1693:100;;;1753:7;:24;;;;;;;-1:-1:-1;1753:24:13;;;;;;;;-1:-1:-1;;;;;;1753:24:13;1766:10;1753:24;;;1693:100;1222:589;;:::o;957:102::-;1108:6:4;;-1:-1:-1;;;;;1108:6:4;719:10:8;1248:23:4;1240:68;;;;-1:-1:-1;;;1240:68:4;;;;;;;:::i;:::-;1026:13:13::1;:25:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;1026:25:13;;;;;::::1;::::0;;-1:-1:-1;;;;;;1026:25:13::1;-1:-1:-1::0;;;;;1026:25:13;;;::::1;::::0;;;::::1;::::0;;957:102::o;1855:391::-;-1:-1:-1;;;;;1963:21:13;;1945:15;1963:21;;;:14;:21;;;;;;;;1985:10;1963:33;;;;;;;;2015:11;2007:51;;;;-1:-1:-1;;;2007:51:13;;5358:2:14;2007:51:13;;;5340:21:14;5397:2;5377:18;;;5370:30;5436:29;5416:18;;;5409:57;5483:18;;2007:51:13;5156:351:14;2007:51:13;2069:43;;-1:-1:-1;;;2069:43:13;;2092:10;2069:43;;;5686:51:14;5753:18;;;5746:34;;;-1:-1:-1;;;;;2069:22:13;;;;;5659:18:14;;2069:43:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2123:21:13;;2159:1;2123:21;;;:14;:21;;;;;;;;2145:10;2123:33;;;;;;;:37;;;2204:18;:30;;;;;;:34;;2237:1;;2204:34;:::i;:::-;2190:10;2171:30;;;;:18;:30;;;;;:67;-1:-1:-1;;1855:391:13:o;4169:368::-;1108:6:4;;-1:-1:-1;;;;;1108:6:4;719:10:8;1248:23:4;1240:68;;;;-1:-1:-1;;;1240:68:4;;;;;;;:::i;:::-;4279:20:13::1;4260:270;4333:7;:14:::0;4318:29;::::1;4260:270;;;4403:17;4423:7;4431:12;4423:21;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;4459:9:::1;::::0;-1:-1:-1;;;;;4423:21:13;;::::1;::::0;-1:-1:-1;4459:9:13::1;:18;4423:21:::0;4489:28:::1;4423:21:::0;4489:17:::1;:28::i;:::-;4459:59;::::0;-1:-1:-1;;;;;;4459:59:13::1;::::0;;;;;;-1:-1:-1;;;;;5704:32:14;;;4459:59:13::1;::::0;::::1;5686:51:14::0;5753:18;;;5746:34;5659:18;;4459:59:13::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4388:142;4362:14;;;;;:::i;:::-;;;;4260:270;;;;4169:368::o:0;1067:147::-;1108:6:4;;-1:-1:-1;;;;;1108:6:4;719:10:8;1248:23:4;1240:68;;;;-1:-1:-1;;;1240:68:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;1172:23:13;;::::1;;::::0;;;:16:::1;:23;::::0;;;;:34;1067:147::o;1668:101:4:-;1108:6;;-1:-1:-1;;;;;1108:6:4;719:10:8;1248:23:4;1240:68;;;;-1:-1:-1;;;1240:68:4;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2254:624:13:-;-1:-1:-1;;;;;2373:24:13;;2316:7;2373:24;;;:18;:24;;;;;;2316:7;;2373:28;2369:474;;2441:26;2418:414;2511:13;:20;2490:41;;2418:414;;;2673:143;2729:4;2760:13;2774:18;2760:33;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2760:33:13;2673:29;:143::i;:::-;2639:177;;:10;:177;:::i;:::-;2605:211;-1:-1:-1;2550:20:13;;;;:::i;:::-;;;;2418:414;;;;2369:474;2860:10;2254:624;-1:-1:-1;;2254:624:13:o;3736:402::-;-1:-1:-1;;;;;3881:24:13;;3852:7;3881:24;;;:18;:24;;;;;;3877:70;;-1:-1:-1;3934:1:13;3927:8;;3877:70;3957:21;3982:22;3998:5;3982:15;:22::i;:::-;-1:-1:-1;;;;;4035:21:13;;;4016:15;4035:21;;;:14;:21;;;;;;;;:27;;;;;;;;;;3957:48;;-1:-1:-1;4123:6:13;4095:23;3957:48;4035:27;4095:23;:::i;:::-;4094:36;;;;:::i;:::-;4074:56;3736:402;-1:-1:-1;;;;;3736:402:13:o;2886:374::-;2941:4;;2958:272;3043:13;:20;3022:41;;2958:272;;;3166:5;-1:-1:-1;;;;;3129:42:13;:13;3143:18;3129:33;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;3129:33:13;:42;3125:94;;;-1:-1:-1;3199:4:13;;2886:374;-1:-1:-1;;2886:374:13:o;3125:94::-;3078:20;;;;:::i;:::-;;;;2958:272;;;-1:-1:-1;3247:5:13;;2886:374;-1:-1:-1;;2886:374:13:o;4545:245::-;-1:-1:-1;;;;;4651:23:13;;;4607:12;4651:23;;;:16;:23;;;;;;;4707:10;;4695:91;;-1:-1:-1;;;4695:91:13;;;;;1655:25:14;;;4607:12:13;;4651:23;;4707:10;;;4695:53;;1628:18:14;;4695:91:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4685:101;4545:245;-1:-1:-1;;;4545:245:13:o;1918:198:4:-;1108:6;;-1:-1:-1;;;;;1108:6:4;719:10:8;1248:23:4;1240:68;;;;-1:-1:-1;;;1240:68:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:4;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:4;;7074:2:14;1998:73:4::1;::::0;::::1;7056:21:14::0;7113:2;7093:18;;;7086:30;7152:34;7132:18;;;7125:62;-1:-1:-1;;;7203:18:14;;;7196:36;7249:19;;1998:73:4::1;6872:402:14::0;1998:73:4::1;2081:28;2100:8;2081:18;:28::i;3486:242:13:-:0;3563:7;3588:17;3609:23;3626:5;3609:16;:23::i;:::-;-1:-1:-1;;;;;3698:20:13;;3486:242;-1:-1:-1;;;3486:242:13:o;522:24::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;522:24:13;;-1:-1:-1;522:24:13;:::o;3268:210::-;-1:-1:-1;;;;;3355:21:13;;;3386:1;3355:21;;;:14;:21;;;;;;;;:27;;;;;;;;;;3351:120;;-1:-1:-1;;;;;3431:24:13;;;;;;:18;:24;;;;;;:28;;3458:1;3431:28;:::i;:::-;-1:-1:-1;;;;;3404:24:13;;;;;;:18;:24;;;;;:55;3268:210;;:::o;2270:187:4:-;2362:6;;;-1:-1:-1;;;;;2378:17:4;;;-1:-1:-1;;;;;;2378:17:4;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;14:597:14:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:14;574:15;-1:-1:-1;;570:29:14;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:14:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:14;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;975:9;962:23;952:33;;1004:38;1038:2;1027:9;1023:18;1004:38;:::i;:::-;994:48;;794:254;;;;;:::o;1053:186::-;1112:6;1165:2;1153:9;1144:7;1140:23;1136:32;1133:52;;;1181:1;1178;1171:12;1133:52;1204:29;1223:9;1204:29;:::i;1244:260::-;1312:6;1320;1373:2;1361:9;1352:7;1348:23;1344:32;1341:52;;;1389:1;1386;1379:12;1341:52;1412:29;1431:9;1412:29;:::i;:::-;1402:39;;1460:38;1494:2;1483:9;1479:18;1460:38;:::i;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:14:o;2951:180::-;3010:6;3063:2;3051:9;3042:7;3038:23;3034:32;3031:52;;;3079:1;3076;3069:12;3031:52;-1:-1:-1;3102:23:14;;2951:180;-1:-1:-1;2951:180:14:o;3136:380::-;3215:1;3211:12;;;;3258;;;3279:61;;3333:4;3325:6;3321:17;3311:27;;3279:61;3386:2;3378:6;3375:14;3355:18;3352:38;3349:161;;;3432:10;3427:3;3423:20;3420:1;3413:31;3467:4;3464:1;3457:15;3495:4;3492:1;3485:15;3349:161;;3136:380;;;:::o;4248:277::-;4315:6;4368:2;4356:9;4347:7;4343:23;4339:32;4336:52;;;4384:1;4381;4374:12;4336:52;4416:9;4410:16;4469:5;4462:13;4455:21;4448:5;4445:32;4435:60;;4491:1;4488;4481:12;4530:127;4591:10;4586:3;4582:20;4579:1;4572:31;4622:4;4619:1;4612:15;4646:4;4643:1;4636:15;4662:128;4702:3;4733:1;4729:6;4726:1;4723:13;4720:39;;;4739:18;;:::i;:::-;-1:-1:-1;4775:9:14;;4662:128::o;4795:356::-;4997:2;4979:21;;;5016:18;;;5009:30;5075:34;5070:2;5055:18;;5048:62;5142:2;5127:18;;4795:356::o;5791:125::-;5831:4;5859:1;5856;5853:8;5850:34;;;5864:18;;:::i;:::-;-1:-1:-1;5901:9:14;;5791:125::o;5921:127::-;5982:10;5977:3;5973:20;5970:1;5963:31;6013:4;6010:1;6003:15;6037:4;6034:1;6027:15;6053:135;6092:3;-1:-1:-1;;6113:17:14;;6110:43;;;6133:18;;:::i;:::-;-1:-1:-1;6180:1:14;6169:13;;6053:135::o;6193:168::-;6233:7;6299:1;6295;6291:6;6287:14;6284:1;6281:21;6276:1;6269:9;6262:17;6258:45;6255:71;;;6306:18;;:::i;:::-;-1:-1:-1;6346:9:14;;6193:168::o;6366:217::-;6406:1;6432;6422:132;;6476:10;6471:3;6467:20;6464:1;6457:31;6511:4;6508:1;6501:15;6539:4;6536:1;6529:15;6422:132;-1:-1:-1;6568:9:14;;6366:217::o;6588:279::-;6657:6;6710:2;6698:9;6689:7;6685:23;6681:32;6678:52;;;6726:1;6723;6716:12;6678:52;6758:9;6752:16;6812:5;6808:2;6797:21;6790:5;6787:32;6777:60;;6833:1;6830;6823:12"},"gasEstimates":{"creation":{"codeDepositCost":"763800","executionCost":"infinite","totalCost":"infinite"},"external":{"addAllowedTokens(address)":"51015","dapiServer()":"2360","dappToken()":"2360","getTokenEthPrice(address)":"infinite","getUserStakingBalanceEthValue(address,address)":"infinite","getUserTotalValue(address)":"infinite","int224ToUint256(address)":"infinite","issueTokens()":"infinite","name()":"infinite","owner()":"2442","renounceOwnership()":"28206","setDapiName(address,bytes32)":"24723","stakeTokens(uint256,address)":"infinite","stakers(uint256)":"4724","stakingBalance(address,address)":"infinite","tokenDapiMapping(address)":"2630","tokenIsAllowed(address)":"infinite","transferOwnership(address)":"28378","uniqueTokensStaked(address)":"2586","unstakeTokens(address)":"infinite"},"internal":{"updateUniqueTokensStaked(address,address)":"26750"}},"methodIdentifiers":{"addAllowedTokens(address)":"171e44ea","dapiServer()":"9f03866b","dappToken()":"5eb186f8","getTokenEthPrice(address)":"df00018d","getUserStakingBalanceEthValue(address,address)":"cc81e060","getUserTotalValue(address)":"af3f5e22","int224ToUint256(address)":"f5588385","issueTokens()":"60ab5852","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setDapiName(address,bytes32)":"6bf233d7","stakeTokens(uint256,address)":"0bea440d","stakers(uint256)":"fd5e6dd1","stakingBalance(address,address)":"29161a00","tokenDapiMapping(address)":"d4a56d1e","tokenIsAllowed(address)":"dd5b8467","transferOwnership(address)":"f2fde38b","uniqueTokensStaked(address)":"b83e0234","unstakeTokens(address)":"2d1ad8b8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dapiServer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dappTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"addAllowedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dapiServer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dappToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenEthPrice\",\"outputs\":[{\"internalType\":\"int224\",\"name\":\"value\",\"type\":\"int224\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getUserStakingBalanceEthValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserTotalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"int224ToUint256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"DapiName\",\"type\":\"bytes32\"}],\"name\":\"setDapiName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenDapiMapping\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tokenIsAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"uniqueTokensStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"unstakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"dapiServer()\":{\"notice\":\"DapiServer contract address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"TokenFarm\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@api3/airnode-protocol-v1/contracts/dapis/DapiReader.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/IDapiReader.sol\\\";\\n\\n/// @title Contract to be inherited by contracts that will read from a\\n/// DapiServer contract\\ncontract DapiReader is IDapiReader {\\n    /// @notice DapiServer contract address\\n    address public override dapiServer;\\n\\n    /// @param _dapiServer DapiServer contract address\\n    constructor(address _dapiServer) {\\n        setDapiServer(_dapiServer);\\n    }\\n\\n    /// @notice Called internally to update the DapiServer contract address\\n    /// @dev Inheriting contracts are highly recommended to expose this\\n    /// functionality to be able to migrate between DapiServer contracts.\\n    /// Otherwise, when the DapiServer goes out of service for any reason,\\n    /// the dependent contract will go defunct.\\n    /// Since this is a critical action, it needs to be protected behind\\n    /// mechanisms such as decentralized governance, timelocks, etc.\\n    /// @param _dapiServer DapiServer contract address\\n    function setDapiServer(address _dapiServer) internal {\\n        require(_dapiServer != address(0), \\\"dAPI server address zero\\\");\\n        dapiServer = _dapiServer;\\n    }\\n}\\n\",\"keccak256\":\"0xbbb143f391c0043cf3f508211982844e170b490e766fef3bfe14137c02d1bf57\",\"license\":\"MIT\"},\"@api3/airnode-protocol-v1/contracts/dapis/interfaces/IDapiReader.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IDapiServer.sol\\\";\\n\\ninterface IDapiReader {\\n    function dapiServer() external view returns (address);\\n}\\n\",\"keccak256\":\"0xbf5d638457b01dd6416a822b419b89a912b7886c786a44f3043b369b97e7d4e5\",\"license\":\"MIT\"},\"@api3/airnode-protocol-v1/contracts/dapis/interfaces/IDapiServer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../protocol/interfaces/IAirnodeRequester.sol\\\";\\n\\ninterface IDapiServer is IAirnodeRequester {\\n    event SetRrpBeaconUpdatePermissionStatus(\\n        address indexed sponsor,\\n        address indexed rrpBeaconUpdateRequester,\\n        bool status\\n    );\\n\\n    event RequestedRrpBeaconUpdate(\\n        bytes32 indexed beaconId,\\n        address indexed sponsor,\\n        address indexed requester,\\n        bytes32 requestId,\\n        address airnode,\\n        bytes32 templateId\\n    );\\n\\n    event RequestedRrpBeaconUpdateRelayed(\\n        bytes32 indexed beaconId,\\n        address indexed sponsor,\\n        address indexed requester,\\n        bytes32 requestId,\\n        address airnode,\\n        address relayer,\\n        bytes32 templateId\\n    );\\n\\n    event UpdatedBeaconWithRrp(\\n        bytes32 indexed beaconId,\\n        bytes32 requestId,\\n        int256 value,\\n        uint256 timestamp\\n    );\\n\\n    event RegisteredBeaconUpdateSubscription(\\n        bytes32 indexed subscriptionId,\\n        address airnode,\\n        bytes32 templateId,\\n        bytes parameters,\\n        bytes conditions,\\n        address relayer,\\n        address sponsor,\\n        address requester,\\n        bytes4 fulfillFunctionId\\n    );\\n\\n    event UpdatedBeaconWithPsp(\\n        bytes32 indexed beaconId,\\n        bytes32 subscriptionId,\\n        int224 value,\\n        uint32 timestamp\\n    );\\n\\n    event UpdatedBeaconWithSignedData(\\n        bytes32 indexed beaconId,\\n        int256 value,\\n        uint256 timestamp\\n    );\\n\\n    event UpdatedBeaconSetWithBeacons(\\n        bytes32 indexed beaconSetId,\\n        int224 value,\\n        uint32 timestamp\\n    );\\n\\n    event UpdatedBeaconSetWithSignedData(\\n        bytes32 indexed dapiId,\\n        int224 value,\\n        uint32 timestamp\\n    );\\n\\n    event AddedUnlimitedReader(address indexed unlimitedReader);\\n\\n    event SetDapiName(\\n        bytes32 indexed dapiName,\\n        bytes32 dataFeedId,\\n        address indexed sender\\n    );\\n\\n    function setRrpBeaconUpdatePermissionStatus(\\n        address rrpBeaconUpdateRequester,\\n        bool status\\n    ) external;\\n\\n    function requestRrpBeaconUpdate(\\n        address airnode,\\n        bytes32 templateId,\\n        address sponsor\\n    ) external returns (bytes32 requestId);\\n\\n    function requestRrpBeaconUpdateRelayed(\\n        address airnode,\\n        bytes32 templateId,\\n        address relayer,\\n        address sponsor\\n    ) external returns (bytes32 requestId);\\n\\n    function fulfillRrpBeaconUpdate(\\n        bytes32 requestId,\\n        uint256 timestamp,\\n        bytes calldata data\\n    ) external;\\n\\n    function registerBeaconUpdateSubscription(\\n        address airnode,\\n        bytes32 templateId,\\n        bytes memory conditions,\\n        address relayer,\\n        address sponsor\\n    ) external returns (bytes32 subscriptionId);\\n\\n    function conditionPspBeaconUpdate(\\n        bytes32 subscriptionId,\\n        bytes calldata data,\\n        bytes calldata conditionParameters\\n    ) external view returns (bool);\\n\\n    function fulfillPspBeaconUpdate(\\n        bytes32 subscriptionId,\\n        address airnode,\\n        address relayer,\\n        address sponsor,\\n        uint256 timestamp,\\n        bytes calldata data,\\n        bytes calldata signature\\n    ) external;\\n\\n    function updateBeaconWithSignedData(\\n        address airnode,\\n        bytes32 beaconId,\\n        uint256 timestamp,\\n        bytes calldata data,\\n        bytes calldata signature\\n    ) external;\\n\\n    function updateBeaconSetWithBeacons(bytes32[] memory beaconIds)\\n        external\\n        returns (bytes32 beaconSetId);\\n\\n    function updateBeaconSetWithBeaconsAndReturnCondition(\\n        bytes32[] memory beaconIds,\\n        uint256 updateThresholdInPercentage\\n    ) external returns (bool);\\n\\n    function conditionPspBeaconSetUpdate(\\n        bytes32 subscriptionId,\\n        bytes calldata data,\\n        bytes calldata conditionParameters\\n    ) external returns (bool);\\n\\n    function fulfillPspBeaconSetUpdate(\\n        bytes32 subscriptionId,\\n        address airnode,\\n        address relayer,\\n        address sponsor,\\n        uint256 timestamp,\\n        bytes calldata data,\\n        bytes calldata signature\\n    ) external;\\n\\n    function updateBeaconSetWithSignedData(\\n        address[] memory airnodes,\\n        bytes32[] memory templateIds,\\n        uint256[] memory timestamps,\\n        bytes[] memory data,\\n        bytes[] memory signatures\\n    ) external returns (bytes32 beaconSetId);\\n\\n    function addUnlimitedReader(address unlimitedReader) external;\\n\\n    function setDapiName(bytes32 dapiName, bytes32 dataFeedId) external;\\n\\n    function dapiNameToDataFeedId(bytes32 dapiName)\\n        external\\n        view\\n        returns (bytes32);\\n\\n    function readDataFeedWithId(bytes32 dataFeedId)\\n        external\\n        view\\n        returns (int224 value, uint32 timestamp);\\n\\n    function readDataFeedValueWithId(bytes32 dataFeedId)\\n        external\\n        view\\n        returns (int224 value);\\n\\n    function readDataFeedWithDapiName(bytes32 dapiName)\\n        external\\n        view\\n        returns (int224 value, uint32 timestamp);\\n\\n    function readDataFeedValueWithDapiName(bytes32 dapiName)\\n        external\\n        view\\n        returns (int224 value);\\n\\n    function readerCanReadDataFeed(bytes32 dataFeedId, address reader)\\n        external\\n        view\\n        returns (bool);\\n\\n    function dataFeedIdToReaderToWhitelistStatus(\\n        bytes32 dataFeedId,\\n        address reader\\n    )\\n        external\\n        view\\n        returns (uint64 expirationTimestamp, uint192 indefiniteWhitelistCount);\\n\\n    function dataFeedIdToReaderToSetterToIndefiniteWhitelistStatus(\\n        bytes32 dataFeedId,\\n        address reader,\\n        address setter\\n    ) external view returns (bool indefiniteWhitelistStatus);\\n\\n    function deriveBeaconId(address airnode, bytes32 templateId)\\n        external\\n        pure\\n        returns (bytes32 beaconId);\\n\\n    function deriveBeaconSetId(bytes32[] memory beaconIds)\\n        external\\n        pure\\n        returns (bytes32 beaconSetId);\\n\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DAPI_NAME_SETTER_ROLE_DESCRIPTION()\\n        external\\n        view\\n        returns (string memory);\\n\\n    // solhint-disable-next-line func-name-mixedcase\\n    function HUNDRED_PERCENT() external view returns (uint256);\\n\\n    function dapiNameSetterRole() external view returns (bytes32);\\n\\n    function sponsorToRrpBeaconUpdateRequesterToPermissionStatus(\\n        address sponsor,\\n        address updateRequester\\n    ) external view returns (bool);\\n\\n    function subscriptionIdToBeaconId(bytes32 subscriptionId)\\n        external\\n        view\\n        returns (bytes32);\\n}\\n\",\"keccak256\":\"0x6a09876c58ae7ba79531eb8276d6b9501add508c73b86a18b1bf641da194391f\",\"license\":\"MIT\"},\"@api3/airnode-protocol-v1/contracts/protocol/interfaces/IAirnodeRequester.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IAirnodeRequester {\\n    function airnodeProtocol() external view returns (address);\\n}\\n\",\"keccak256\":\"0xa2412446bb860cfaafa447d99d0f41ba6977e7f2b6b743a09c16b1ff58186309\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeCast.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\\n * checks.\\n *\\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\\n * easily result in undesired exploitation or bugs, since developers usually\\n * assume that overflows raise errors. `SafeCast` restores this intuition by\\n * reverting the transaction when such an operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n *\\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\\n * all math on `uint256` and `int256` and then downcasting.\\n */\\nlibrary SafeCast {\\n    /**\\n     * @dev Returns the downcasted uint224 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint224).\\n     *\\n     * Counterpart to Solidity's `uint224` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 224 bits\\n     */\\n    function toUint224(uint256 value) internal pure returns (uint224) {\\n        require(value <= type(uint224).max, \\\"SafeCast: value doesn't fit in 224 bits\\\");\\n        return uint224(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint128 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint128).\\n     *\\n     * Counterpart to Solidity's `uint128` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 128 bits\\n     */\\n    function toUint128(uint256 value) internal pure returns (uint128) {\\n        require(value <= type(uint128).max, \\\"SafeCast: value doesn't fit in 128 bits\\\");\\n        return uint128(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint96 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint96).\\n     *\\n     * Counterpart to Solidity's `uint96` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 96 bits\\n     */\\n    function toUint96(uint256 value) internal pure returns (uint96) {\\n        require(value <= type(uint96).max, \\\"SafeCast: value doesn't fit in 96 bits\\\");\\n        return uint96(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint64 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint64).\\n     *\\n     * Counterpart to Solidity's `uint64` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 64 bits\\n     */\\n    function toUint64(uint256 value) internal pure returns (uint64) {\\n        require(value <= type(uint64).max, \\\"SafeCast: value doesn't fit in 64 bits\\\");\\n        return uint64(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint32 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint32).\\n     *\\n     * Counterpart to Solidity's `uint32` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 32 bits\\n     */\\n    function toUint32(uint256 value) internal pure returns (uint32) {\\n        require(value <= type(uint32).max, \\\"SafeCast: value doesn't fit in 32 bits\\\");\\n        return uint32(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint16 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint16).\\n     *\\n     * Counterpart to Solidity's `uint16` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 16 bits\\n     */\\n    function toUint16(uint256 value) internal pure returns (uint16) {\\n        require(value <= type(uint16).max, \\\"SafeCast: value doesn't fit in 16 bits\\\");\\n        return uint16(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint8 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint8).\\n     *\\n     * Counterpart to Solidity's `uint8` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 8 bits.\\n     */\\n    function toUint8(uint256 value) internal pure returns (uint8) {\\n        require(value <= type(uint8).max, \\\"SafeCast: value doesn't fit in 8 bits\\\");\\n        return uint8(value);\\n    }\\n\\n    /**\\n     * @dev Converts a signed int256 into an unsigned uint256.\\n     *\\n     * Requirements:\\n     *\\n     * - input must be greater than or equal to 0.\\n     */\\n    function toUint256(int256 value) internal pure returns (uint256) {\\n        require(value >= 0, \\\"SafeCast: value must be positive\\\");\\n        return uint256(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int128 from int256, reverting on\\n     * overflow (when the input is less than smallest int128 or\\n     * greater than largest int128).\\n     *\\n     * Counterpart to Solidity's `int128` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 128 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt128(int256 value) internal pure returns (int128) {\\n        require(value >= type(int128).min && value <= type(int128).max, \\\"SafeCast: value doesn't fit in 128 bits\\\");\\n        return int128(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int64 from int256, reverting on\\n     * overflow (when the input is less than smallest int64 or\\n     * greater than largest int64).\\n     *\\n     * Counterpart to Solidity's `int64` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 64 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt64(int256 value) internal pure returns (int64) {\\n        require(value >= type(int64).min && value <= type(int64).max, \\\"SafeCast: value doesn't fit in 64 bits\\\");\\n        return int64(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int32 from int256, reverting on\\n     * overflow (when the input is less than smallest int32 or\\n     * greater than largest int32).\\n     *\\n     * Counterpart to Solidity's `int32` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 32 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt32(int256 value) internal pure returns (int32) {\\n        require(value >= type(int32).min && value <= type(int32).max, \\\"SafeCast: value doesn't fit in 32 bits\\\");\\n        return int32(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int16 from int256, reverting on\\n     * overflow (when the input is less than smallest int16 or\\n     * greater than largest int16).\\n     *\\n     * Counterpart to Solidity's `int16` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 16 bits\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt16(int256 value) internal pure returns (int16) {\\n        require(value >= type(int16).min && value <= type(int16).max, \\\"SafeCast: value doesn't fit in 16 bits\\\");\\n        return int16(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted int8 from int256, reverting on\\n     * overflow (when the input is less than smallest int8 or\\n     * greater than largest int8).\\n     *\\n     * Counterpart to Solidity's `int8` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 8 bits.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function toInt8(int256 value) internal pure returns (int8) {\\n        require(value >= type(int8).min && value <= type(int8).max, \\\"SafeCast: value doesn't fit in 8 bits\\\");\\n        return int8(value);\\n    }\\n\\n    /**\\n     * @dev Converts an unsigned uint256 into a signed int256.\\n     *\\n     * Requirements:\\n     *\\n     * - input must be less than or equal to maxInt256.\\n     */\\n    function toInt256(uint256 value) internal pure returns (int256) {\\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\\n        require(value <= uint256(type(int256).max), \\\"SafeCast: value doesn't fit in an int256\\\");\\n        return int256(value);\\n    }\\n}\\n\",\"keccak256\":\"0x5c6caab697d302ad7eb59c234a4d2dbc965c1bae87709bd2850060b7695b28c7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SignedSafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SignedSafeMath` is no longer needed starting with Solidity 0.8. The compiler\\n * now has built in overflow checking.\\n */\\nlibrary SignedSafeMath {\\n    /**\\n     * @dev Returns the multiplication of two signed integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(int256 a, int256 b) internal pure returns (int256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two signed integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(int256 a, int256 b) internal pure returns (int256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two signed integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(int256 a, int256 b) internal pure returns (int256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two signed integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(int256 a, int256 b) internal pure returns (int256) {\\n        return a + b;\\n    }\\n}\\n\",\"keccak256\":\"0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2\",\"license\":\"MIT\"},\"contracts/Staking.sol\":{\"content\":\"\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"@api3/airnode-protocol-v1/contracts/dapis/DapiReader.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeCast.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\\\";\\r\\n\\r\\ncontract TokenFarm is DapiReader, Ownable {\\r\\n    string public name = \\\"Dapp Token Farm\\\";\\r\\n    IERC20 public dappToken;\\r\\n\\r\\n    address[] public stakers;\\r\\n    // token > address\\r\\n    mapping(address => mapping(address => uint256)) public stakingBalance;\\r\\n    mapping(address => uint256) public uniqueTokensStaked;\\r\\n    mapping(address => bytes32) public tokenDapiMapping;\\r\\n    address[] allowedTokens;\\r\\n\\r\\n    \\r\\n    constructor(address _dapiServer, address _dappTokenAddress) DapiReader(_dapiServer) {\\r\\n        dappToken = IERC20(_dappTokenAddress);\\r\\n    }\\r\\n\\r\\n    function addAllowedTokens(address token) public onlyOwner {\\r\\n        allowedTokens.push(token);\\r\\n    }\\r\\n\\r\\n    function setDapiName(address token, bytes32 DapiName)\\r\\n        public\\r\\n        onlyOwner\\r\\n    {\\r\\n        tokenDapiMapping[token] = DapiName;\\r\\n    }\\r\\n\\r\\n    function stakeTokens(uint256 _amount, address token) public {\\r\\n        // Require amount greater than 0\\r\\n        require(_amount > 0, \\\"amount cannot be 0\\\");\\r\\n        if (tokenIsAllowed(token)) {\\r\\n            updateUniqueTokensStaked(msg.sender, token);\\r\\n            IERC20(token).transferFrom(msg.sender, address(this), _amount);\\r\\n            stakingBalance[token][msg.sender] =\\r\\n                stakingBalance[token][msg.sender] +\\r\\n                _amount;\\r\\n            if (uniqueTokensStaked[msg.sender] == 1) {\\r\\n                stakers.push(msg.sender);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Unstaking Tokens (Withdraw)\\r\\n    function unstakeTokens(address token) public {\\r\\n        // Fetch staking balance\\r\\n        uint256 balance = stakingBalance[token][msg.sender];\\r\\n        require(balance > 0, \\\"staking balance cannot be 0\\\");\\r\\n        IERC20(token).transfer(msg.sender, balance);\\r\\n        stakingBalance[token][msg.sender] = 0;\\r\\n        uniqueTokensStaked[msg.sender] = uniqueTokensStaked[msg.sender] - 1;\\r\\n    }\\r\\n\\r\\n    function getUserTotalValue(address user) public view returns (uint256) {\\r\\n        uint256 totalValue = 0;\\r\\n        if (uniqueTokensStaked[user] > 0) {\\r\\n            for (\\r\\n                uint256 allowedTokensIndex = 0;\\r\\n                allowedTokensIndex < allowedTokens.length;\\r\\n                allowedTokensIndex++\\r\\n            ) {\\r\\n                totalValue =\\r\\n                    totalValue +\\r\\n                    getUserStakingBalanceEthValue(\\r\\n                        user,\\r\\n                        allowedTokens[allowedTokensIndex]\\r\\n                    );\\r\\n            }\\r\\n        }\\r\\n        return totalValue;\\r\\n    }\\r\\n\\r\\n    function tokenIsAllowed(address token) public returns (bool) {\\r\\n        for (\\r\\n            uint256 allowedTokensIndex = 0;\\r\\n            allowedTokensIndex < allowedTokens.length;\\r\\n            allowedTokensIndex++\\r\\n        ) {\\r\\n            if (allowedTokens[allowedTokensIndex] == token) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function updateUniqueTokensStaked(address user, address token) internal {\\r\\n        if (stakingBalance[token][user] <= 0) {\\r\\n            uniqueTokensStaked[user] = uniqueTokensStaked[user] + 1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function int224ToUint256(address token)\\r\\n    public\\r\\n    view \\r\\n    returns (uint256)\\r\\n    {\\r\\n        int224 tokenPrice = (getTokenEthPrice(token));\\r\\n        uint224 newTokenPrice = uint224(tokenPrice);\\r\\n        return newTokenPrice;\\r\\n\\r\\n    }\\r\\n\\r\\n    function getUserStakingBalanceEthValue(address user, address token)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        if (uniqueTokensStaked[user] <= 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        uint256 newTokenPrice = (int224ToUint256(token));\\r\\n        uint256 stakBal = (stakingBalance[token][user]);\\r\\n        return\\r\\n            (stakBal * newTokenPrice) / (10**18);\\r\\n    }\\r\\n\\r\\n    // Issuing Tokens\\r\\n    function issueTokens() public onlyOwner {\\r\\n        // Issue tokens to all stakers\\r\\n        for (\\r\\n            uint256 stakersIndex = 0;\\r\\n            stakersIndex < stakers.length;\\r\\n            stakersIndex++\\r\\n        ) {\\r\\n            address recipient = stakers[stakersIndex];\\r\\n            dappToken.transfer(recipient, getUserTotalValue(recipient));\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getTokenEthPrice(address token) public view returns (int224 value) {\\r\\n        bytes32 DapiName = tokenDapiMapping[token];\\r\\n        (value) = IDapiServer(dapiServer).readDataFeedValueWithDapiName(\\r\\n                DapiName\\r\\n        );\\r\\n}\\r\\n}\\r\\n//18446744073709555618\",\"keccak256\":\"0x0e27bdfb1a0315820abe0e70c34ac38413a40521e993ff0246bd93f664f9323f\"}},\"version\":1}","storageLayout":{"storage":[{"astId":9,"contract":"contracts/Staking.sol:TokenFarm","label":"dapiServer","offset":0,"slot":"0","type":"t_address"},{"astId":479,"contract":"contracts/Staking.sol:TokenFarm","label":"_owner","offset":0,"slot":"1","type":"t_address"},{"astId":2051,"contract":"contracts/Staking.sol:TokenFarm","label":"name","offset":0,"slot":"2","type":"t_string_storage"},{"astId":2054,"contract":"contracts/Staking.sol:TokenFarm","label":"dappToken","offset":0,"slot":"3","type":"t_contract(IERC20)1200"},{"astId":2057,"contract":"contracts/Staking.sol:TokenFarm","label":"stakers","offset":0,"slot":"4","type":"t_array(t_address)dyn_storage"},{"astId":2063,"contract":"contracts/Staking.sol:TokenFarm","label":"stakingBalance","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":2067,"contract":"contracts/Staking.sol:TokenFarm","label":"uniqueTokensStaked","offset":0,"slot":"6","type":"t_mapping(t_address,t_uint256)"},{"astId":2071,"contract":"contracts/Staking.sol:TokenFarm","label":"tokenDapiMapping","offset":0,"slot":"7","type":"t_mapping(t_address,t_bytes32)"},{"astId":2074,"contract":"contracts/Staking.sol:TokenFarm","label":"allowedTokens","offset":0,"slot":"8","type":"t_array(t_address)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(IERC20)1200":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_mapping(t_address,t_bytes32)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"dapiServer()":{"notice":"DapiServer contract address"}},"version":1}}}}}}